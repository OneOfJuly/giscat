// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: definition/ProtoFeature.proto

package org.wowtools.giscat.vector.pojo.proto;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class ProtoFeature {
    private ProtoFeature() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface NullGeometryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.NullGeometry)
            com.google.protobuf.MessageOrBuilder {
    }

    /**
     * <pre>
     * 空几何对象 解析后返回null
     * </pre>
     * <p>
     * Protobuf type {@code pojo.NullGeometry}
     */
    public static final class NullGeometry extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.NullGeometry)
            NullGeometryOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use NullGeometry.newBuilder() to construct.
        private NullGeometry(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private NullGeometry() {
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new NullGeometry();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private NullGeometry(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_NullGeometry_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_NullGeometry_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            NullGeometry.class, Builder.class);
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof NullGeometry)) {
                return super.equals(obj);
            }
            NullGeometry other = (NullGeometry) obj;

            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static NullGeometry parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static NullGeometry parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static NullGeometry parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static NullGeometry parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static NullGeometry parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static NullGeometry parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static NullGeometry parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static NullGeometry parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static NullGeometry parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static NullGeometry parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static NullGeometry parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static NullGeometry parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull NullGeometry prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * 空几何对象 解析后返回null
         * </pre>
         * <p>
         * Protobuf type {@code pojo.NullGeometry}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.NullGeometry)
                NullGeometryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_NullGeometry_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_NullGeometry_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                NullGeometry.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.NullGeometry.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_NullGeometry_descriptor;
            }

            @Override
            public NullGeometry getDefaultInstanceForType() {
                return NullGeometry.getDefaultInstance();
            }

            @Override
            public @NotNull NullGeometry build() {
                NullGeometry result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull NullGeometry buildPartial() {
                NullGeometry result = new NullGeometry(this);
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof NullGeometry) {
                    return mergeFrom((NullGeometry) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull NullGeometry other) {
                if (other == NullGeometry.getDefaultInstance()) return this;
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                NullGeometry parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (NullGeometry) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.NullGeometry)
        }

        // @@protoc_insertion_point(class_scope:pojo.NullGeometry)
        private static final @NotNull NullGeometry DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new NullGeometry();
        }

        public static NullGeometry getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<NullGeometry>
                PARSER = new com.google.protobuf.AbstractParser<NullGeometry>() {
            @Override
            public @NotNull NullGeometry parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new NullGeometry(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<NullGeometry> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<NullGeometry> getParserForType() {
            return PARSER;
        }

        @Override
        public NullGeometry getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface PointOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.Point)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>double x = 1;</code>
         *
         * @return The x.
         */
        double getX();

        /**
         * <code>double y = 2;</code>
         *
         * @return The y.
         */
        double getY();

        /**
         * <code>double z = 3;</code>
         *
         * @return The z.
         */
        double getZ();
    }

    /**
     * <pre>
     * Point，包含点的 x y z坐标 ，z可选。
     * </pre>
     * <p>
     * Protobuf type {@code pojo.Point}
     */
    public static final class Point extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.Point)
            PointOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use Point.newBuilder() to construct.
        private Point(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private Point() {
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new Point();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private Point(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {

                            x_ = input.readDouble();
                            break;
                        }
                        case 17: {

                            y_ = input.readDouble();
                            break;
                        }
                        case 25: {

                            z_ = input.readDouble();
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_Point_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_Point_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Point.class, Builder.class);
        }

        public static final int X_FIELD_NUMBER = 1;
        private double x_;

        /**
         * <code>double x = 1;</code>
         *
         * @return The x.
         */
        @Override
        public double getX() {
            return x_;
        }

        public static final int Y_FIELD_NUMBER = 2;
        private double y_;

        /**
         * <code>double y = 2;</code>
         *
         * @return The y.
         */
        @Override
        public double getY() {
            return y_;
        }

        public static final int Z_FIELD_NUMBER = 3;
        private double z_;

        /**
         * <code>double z = 3;</code>
         *
         * @return The z.
         */
        @Override
        public double getZ() {
            return z_;
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            if (Double.doubleToRawLongBits(x_) != 0) {
                output.writeDouble(1, x_);
            }
            if (Double.doubleToRawLongBits(y_) != 0) {
                output.writeDouble(2, y_);
            }
            if (Double.doubleToRawLongBits(z_) != 0) {
                output.writeDouble(3, z_);
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (Double.doubleToRawLongBits(x_) != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(1, x_);
            }
            if (Double.doubleToRawLongBits(y_) != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(2, y_);
            }
            if (Double.doubleToRawLongBits(z_) != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(3, z_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Point)) {
                return super.equals(obj);
            }
            Point other = (Point) obj;

            if (Double.doubleToLongBits(getX())
                    != Double.doubleToLongBits(
                    other.getX())) return false;
            if (Double.doubleToLongBits(getY())
                    != Double.doubleToLongBits(
                    other.getY())) return false;
            if (Double.doubleToLongBits(getZ())
                    != Double.doubleToLongBits(
                    other.getZ())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + X_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    Double.doubleToLongBits(getX()));
            hash = (37 * hash) + Y_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    Double.doubleToLongBits(getY()));
            hash = (37 * hash) + Z_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    Double.doubleToLongBits(getZ()));
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Point parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Point parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Point parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Point parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Point parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Point parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Point parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Point parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Point parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Point parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Point parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Point parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull Point prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Point，包含点的 x y z坐标 ，z可选。
         * </pre>
         * <p>
         * Protobuf type {@code pojo.Point}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.Point)
                PointOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_Point_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_Point_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Point.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.Point.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                x_ = 0D;

                y_ = 0D;

                z_ = 0D;

                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_Point_descriptor;
            }

            @Override
            public Point getDefaultInstanceForType() {
                return Point.getDefaultInstance();
            }

            @Override
            public @NotNull Point build() {
                Point result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull Point buildPartial() {
                Point result = new Point(this);
                result.x_ = x_;
                result.y_ = y_;
                result.z_ = z_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Point) {
                    return mergeFrom((Point) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull Point other) {
                if (other == Point.getDefaultInstance()) return this;
                if (other.getX() != 0D) {
                    setX(other.getX());
                }
                if (other.getY() != 0D) {
                    setY(other.getY());
                }
                if (other.getZ() != 0D) {
                    setZ(other.getZ());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Point parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Point) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private double x_;

            /**
             * <code>double x = 1;</code>
             *
             * @return The x.
             */
            @Override
            public double getX() {
                return x_;
            }

            /**
             * <code>double x = 1;</code>
             *
             * @param value The x to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setX(double value) {

                x_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>double x = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearX() {

                x_ = 0D;
                onChanged();
                return this;
            }

            private double y_;

            /**
             * <code>double y = 2;</code>
             *
             * @return The y.
             */
            @Override
            public double getY() {
                return y_;
            }

            /**
             * <code>double y = 2;</code>
             *
             * @param value The y to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setY(double value) {

                y_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>double y = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearY() {

                y_ = 0D;
                onChanged();
                return this;
            }

            private double z_;

            /**
             * <code>double z = 3;</code>
             *
             * @return The z.
             */
            @Override
            public double getZ() {
                return z_;
            }

            /**
             * <code>double z = 3;</code>
             *
             * @param value The z to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setZ(double value) {

                z_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>double z = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearZ() {

                z_ = 0D;
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.Point)
        }

        // @@protoc_insertion_point(class_scope:pojo.Point)
        private static final @NotNull Point DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Point();
        }

        public static Point getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Point>
                PARSER = new com.google.protobuf.AbstractParser<Point>() {
            @Override
            public @NotNull Point parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Point(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Point> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<Point> getParserForType() {
            return PARSER;
        }

        @Override
        public Point getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface LineStringOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.LineString)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        java.util.List<Double> getXsList();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        int getXsCount();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        double getXs(int index);

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        java.util.List<Double> getYsList();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        int getYsCount();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        double getYs(int index);

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        java.util.List<Double> getZsList();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        int getZsCount();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        double getZs(int index);
    }

    /**
     * <pre>
     * LineString 包含线段上各个点的x y z坐标，z可选。
     * </pre>
     * <p>
     * Protobuf type {@code pojo.LineString}
     */
    public static final class LineString extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.LineString)
            LineStringOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use LineString.newBuilder() to construct.
        private LineString(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private LineString() {
            xs_ = emptyDoubleList();
            ys_ = emptyDoubleList();
            zs_ = emptyDoubleList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new LineString();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private LineString(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            xs_.addDouble(input.readDouble());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                xs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 17: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            ys_.addDouble(input.readDouble());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                ys_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 25: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            zs_.addDouble(input.readDouble());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                zs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable(); // C
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_LineString_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_LineString_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            LineString.class, Builder.class);
        }

        public static final int XS_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.DoubleList xs_;

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        @Override
        public java.util.List<Double>
        getXsList() {
            return xs_;
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        public int getXsCount() {
            return xs_.size();
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        public double getXs(int index) {
            return xs_.getDouble(index);
        }

        private int xsMemoizedSerializedSize = -1;

        public static final int YS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.DoubleList ys_;

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        @Override
        public java.util.List<Double>
        getYsList() {
            return ys_;
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        public int getYsCount() {
            return ys_.size();
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        public double getYs(int index) {
            return ys_.getDouble(index);
        }

        private int ysMemoizedSerializedSize = -1;

        public static final int ZS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.DoubleList zs_;

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        @Override
        public java.util.List<Double>
        getZsList() {
            return zs_;
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        public int getZsCount() {
            return zs_.size();
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        public double getZs(int index) {
            return zs_.getDouble(index);
        }

        private int zsMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (getXsList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(xsMemoizedSerializedSize);
            }
            for (int i = 0; i < xs_.size(); i++) {
                output.writeDoubleNoTag(xs_.getDouble(i));
            }
            if (getYsList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(ysMemoizedSerializedSize);
            }
            for (int i = 0; i < ys_.size(); i++) {
                output.writeDoubleNoTag(ys_.getDouble(i));
            }
            if (getZsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(zsMemoizedSerializedSize);
            }
            for (int i = 0; i < zs_.size(); i++) {
                output.writeDoubleNoTag(zs_.getDouble(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                dataSize = 8 * getXsList().size();
                size += dataSize;
                if (!getXsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                xsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getYsList().size();
                size += dataSize;
                if (!getYsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                ysMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getZsList().size();
                size += dataSize;
                if (!getZsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                zsMemoizedSerializedSize = dataSize;
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof LineString)) {
                return super.equals(obj);
            }
            LineString other = (LineString) obj;

            if (!getXsList()
                    .equals(other.getXsList())) return false;
            if (!getYsList()
                    .equals(other.getYsList())) return false;
            if (!getZsList()
                    .equals(other.getZsList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getXsCount() > 0) {
                hash = (37 * hash) + XS_FIELD_NUMBER;
                hash = (53 * hash) + getXsList().hashCode();
            }
            if (getYsCount() > 0) {
                hash = (37 * hash) + YS_FIELD_NUMBER;
                hash = (53 * hash) + getYsList().hashCode();
            }
            if (getZsCount() > 0) {
                hash = (37 * hash) + ZS_FIELD_NUMBER;
                hash = (53 * hash) + getZsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static LineString parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static LineString parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static LineString parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static LineString parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static LineString parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static LineString parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static LineString parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static LineString parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static LineString parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static LineString parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static LineString parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static LineString parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull LineString prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * LineString 包含线段上各个点的x y z坐标，z可选。
         * </pre>
         * <p>
         * Protobuf type {@code pojo.LineString}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.LineString)
                LineStringOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_LineString_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_LineString_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                LineString.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.LineString.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_LineString_descriptor;
            }

            @Override
            public LineString getDefaultInstanceForType() {
                return LineString.getDefaultInstance();
            }

            @Override
            public @NotNull LineString build() {
                LineString result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull LineString buildPartial() {
                LineString result = new LineString(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.xs_ = xs_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.ys_ = ys_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.zs_ = zs_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof LineString) {
                    return mergeFrom((LineString) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull LineString other) {
                if (other == LineString.getDefaultInstance()) return this;
                if (!other.xs_.isEmpty()) {
                    if (xs_.isEmpty()) {
                        xs_ = other.xs_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureXsIsMutable();
                        xs_.addAll(other.xs_);
                    }
                    onChanged();
                }
                if (!other.ys_.isEmpty()) {
                    if (ys_.isEmpty()) {
                        ys_ = other.ys_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureYsIsMutable();
                        ys_.addAll(other.ys_);
                    }
                    onChanged();
                }
                if (!other.zs_.isEmpty()) {
                    if (zs_.isEmpty()) {
                        zs_ = other.zs_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureZsIsMutable();
                        zs_.addAll(other.zs_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                LineString parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (LineString) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.Internal.DoubleList xs_ = emptyDoubleList();

            private void ensureXsIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    xs_ = mutableCopy(xs_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return A list containing the xs.
             */
            public java.util.List<Double>
            getXsList() {
                return ((bitField0_ & 0x00000001) != 0) ?
                        java.util.Collections.unmodifiableList(xs_) : xs_;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return The count of xs.
             */
            public int getXsCount() {
                return xs_.size();
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The xs at the given index.
             */
            public double getXs(int index) {
                return xs_.getDouble(index);
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The xs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setXs(
                    int index, double value) {
                ensureXsIsMutable();
                xs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param value The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addXs(double value) {
                ensureXsIsMutable();
                xs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param values The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllXs(
                    @NotNull Iterable<? extends Double> values) {
                ensureXsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, xs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearXs() {
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList ys_ = emptyDoubleList();

            private void ensureYsIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    ys_ = mutableCopy(ys_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return A list containing the ys.
             */
            public java.util.List<Double>
            getYsList() {
                return ((bitField0_ & 0x00000002) != 0) ?
                        java.util.Collections.unmodifiableList(ys_) : ys_;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return The count of ys.
             */
            public int getYsCount() {
                return ys_.size();
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The ys at the given index.
             */
            public double getYs(int index) {
                return ys_.getDouble(index);
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The ys to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setYs(
                    int index, double value) {
                ensureYsIsMutable();
                ys_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param value The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addYs(double value) {
                ensureYsIsMutable();
                ys_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param values The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllYs(
                    @NotNull Iterable<? extends Double> values) {
                ensureYsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, ys_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearYs() {
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList zs_ = emptyDoubleList();

            private void ensureZsIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    zs_ = mutableCopy(zs_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return A list containing the zs.
             */
            public java.util.List<Double>
            getZsList() {
                return ((bitField0_ & 0x00000004) != 0) ?
                        java.util.Collections.unmodifiableList(zs_) : zs_;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return The count of zs.
             */
            public int getZsCount() {
                return zs_.size();
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The zs at the given index.
             */
            public double getZs(int index) {
                return zs_.getDouble(index);
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The zs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setZs(
                    int index, double value) {
                ensureZsIsMutable();
                zs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param value The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addZs(double value) {
                ensureZsIsMutable();
                zs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param values The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllZs(
                    @NotNull Iterable<? extends Double> values) {
                ensureZsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, zs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearZs() {
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.LineString)
        }

        // @@protoc_insertion_point(class_scope:pojo.LineString)
        private static final @NotNull LineString DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new LineString();
        }

        public static LineString getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<LineString>
                PARSER = new com.google.protobuf.AbstractParser<LineString>() {
            @Override
            public @NotNull LineString parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new LineString(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<LineString> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<LineString> getParserForType() {
            return PARSER;
        }

        @Override
        public LineString getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface PolygonOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.Polygon)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        java.util.List<Double> getXsList();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        int getXsCount();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        double getXs(int index);

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        java.util.List<Double> getYsList();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        int getYsCount();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        double getYs(int index);

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        java.util.List<Double> getZsList();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        int getZsCount();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        double getZs(int index);

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @return A list containing the separators.
         */
        java.util.List<Integer> getSeparatorsList();

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @return The count of separators.
         */
        int getSeparatorsCount();

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The separators at the given index.
         */
        int getSeparators(int index);
    }

    /**
     * <pre>
     * Polygon 包含多边形上各个点的x y z坐标，z可选。
     * separators用于将坐标串分割为环 例如,xs ys zs 形成了坐标串[p0,p1,p2,p3,p4,p5,p6,p7,p8,p9]，
     * 则separators=[3,7]将坐标串分割为多边形Polygon((p0 p1 p2),(p3 p4 p5 p6),(p7 p8 p9))。
     * 即separators[i]的意义为第i个环的终点(从0开始计数)；最后一个环的终点显然是数组的最后一位，故将其省略。
     * 注意，由于环的最后一个坐标必然和第一个坐标相等，故将环的最后一个坐标省略，仅在转换为jts等对象时将其补全。
     * </pre>
     * <p>
     * Protobuf type {@code pojo.Polygon}
     */
    public static final class Polygon extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.Polygon)
            PolygonOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use Polygon.newBuilder() to construct.
        private Polygon(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private Polygon() {
            xs_ = emptyDoubleList();
            ys_ = emptyDoubleList();
            zs_ = emptyDoubleList();
            separators_ = emptyIntList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new Polygon();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private Polygon(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            xs_.addDouble(input.readDouble());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                xs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 17: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            ys_.addDouble(input.readDouble());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                ys_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 25: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            zs_.addDouble(input.readDouble());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                zs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 32: {
                            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                separators_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            separators_.addInt(input.readInt32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                                separators_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                separators_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    separators_.makeImmutable(); // C
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_Polygon_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_Polygon_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Polygon.class, Builder.class);
        }

        public static final int XS_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.DoubleList xs_;

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        @Override
        public java.util.List<Double>
        getXsList() {
            return xs_;
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        public int getXsCount() {
            return xs_.size();
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        public double getXs(int index) {
            return xs_.getDouble(index);
        }

        private int xsMemoizedSerializedSize = -1;

        public static final int YS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.DoubleList ys_;

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        @Override
        public java.util.List<Double>
        getYsList() {
            return ys_;
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        public int getYsCount() {
            return ys_.size();
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        public double getYs(int index) {
            return ys_.getDouble(index);
        }

        private int ysMemoizedSerializedSize = -1;

        public static final int ZS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.DoubleList zs_;

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        @Override
        public java.util.List<Double>
        getZsList() {
            return zs_;
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        public int getZsCount() {
            return zs_.size();
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        public double getZs(int index) {
            return zs_.getDouble(index);
        }

        private int zsMemoizedSerializedSize = -1;

        public static final int SEPARATORS_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList separators_;

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @return A list containing the separators.
         */
        @Override
        public java.util.List<Integer>
        getSeparatorsList() {
            return separators_;
        }

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @return The count of separators.
         */
        public int getSeparatorsCount() {
            return separators_.size();
        }

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The separators at the given index.
         */
        public int getSeparators(int index) {
            return separators_.getInt(index);
        }

        private int separatorsMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (getXsList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(xsMemoizedSerializedSize);
            }
            for (int i = 0; i < xs_.size(); i++) {
                output.writeDoubleNoTag(xs_.getDouble(i));
            }
            if (getYsList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(ysMemoizedSerializedSize);
            }
            for (int i = 0; i < ys_.size(); i++) {
                output.writeDoubleNoTag(ys_.getDouble(i));
            }
            if (getZsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(zsMemoizedSerializedSize);
            }
            for (int i = 0; i < zs_.size(); i++) {
                output.writeDoubleNoTag(zs_.getDouble(i));
            }
            if (getSeparatorsList().size() > 0) {
                output.writeUInt32NoTag(34);
                output.writeUInt32NoTag(separatorsMemoizedSerializedSize);
            }
            for (int i = 0; i < separators_.size(); i++) {
                output.writeInt32NoTag(separators_.getInt(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                dataSize = 8 * getXsList().size();
                size += dataSize;
                if (!getXsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                xsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getYsList().size();
                size += dataSize;
                if (!getYsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                ysMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getZsList().size();
                size += dataSize;
                if (!getZsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                zsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < separators_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(separators_.getInt(i));
                }
                size += dataSize;
                if (!getSeparatorsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                separatorsMemoizedSerializedSize = dataSize;
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Polygon)) {
                return super.equals(obj);
            }
            Polygon other = (Polygon) obj;

            if (!getXsList()
                    .equals(other.getXsList())) return false;
            if (!getYsList()
                    .equals(other.getYsList())) return false;
            if (!getZsList()
                    .equals(other.getZsList())) return false;
            if (!getSeparatorsList()
                    .equals(other.getSeparatorsList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getXsCount() > 0) {
                hash = (37 * hash) + XS_FIELD_NUMBER;
                hash = (53 * hash) + getXsList().hashCode();
            }
            if (getYsCount() > 0) {
                hash = (37 * hash) + YS_FIELD_NUMBER;
                hash = (53 * hash) + getYsList().hashCode();
            }
            if (getZsCount() > 0) {
                hash = (37 * hash) + ZS_FIELD_NUMBER;
                hash = (53 * hash) + getZsList().hashCode();
            }
            if (getSeparatorsCount() > 0) {
                hash = (37 * hash) + SEPARATORS_FIELD_NUMBER;
                hash = (53 * hash) + getSeparatorsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Polygon parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Polygon parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Polygon parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Polygon parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Polygon parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Polygon parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Polygon parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Polygon parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Polygon parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Polygon parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Polygon parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Polygon parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull Polygon prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Polygon 包含多边形上各个点的x y z坐标，z可选。
         * separators用于将坐标串分割为环 例如,xs ys zs 形成了坐标串[p0,p1,p2,p3,p4,p5,p6,p7,p8,p9]，
         * 则separators=[3,7]将坐标串分割为多边形Polygon((p0 p1 p2),(p3 p4 p5 p6),(p7 p8 p9))。
         * 即separators[i]的意义为第i个环的终点(从0开始计数)；最后一个环的终点显然是数组的最后一位，故将其省略。
         * 注意，由于环的最后一个坐标必然和第一个坐标相等，故将环的最后一个坐标省略，仅在转换为jts等对象时将其补全。
         * </pre>
         * <p>
         * Protobuf type {@code pojo.Polygon}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.Polygon)
                PolygonOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_Polygon_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_Polygon_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Polygon.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.Polygon.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                separators_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_Polygon_descriptor;
            }

            @Override
            public Polygon getDefaultInstanceForType() {
                return Polygon.getDefaultInstance();
            }

            @Override
            public @NotNull Polygon build() {
                Polygon result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull Polygon buildPartial() {
                Polygon result = new Polygon(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.xs_ = xs_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.ys_ = ys_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.zs_ = zs_;
                if (((bitField0_ & 0x00000008) != 0)) {
                    separators_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.separators_ = separators_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Polygon) {
                    return mergeFrom((Polygon) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull Polygon other) {
                if (other == Polygon.getDefaultInstance()) return this;
                if (!other.xs_.isEmpty()) {
                    if (xs_.isEmpty()) {
                        xs_ = other.xs_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureXsIsMutable();
                        xs_.addAll(other.xs_);
                    }
                    onChanged();
                }
                if (!other.ys_.isEmpty()) {
                    if (ys_.isEmpty()) {
                        ys_ = other.ys_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureYsIsMutable();
                        ys_.addAll(other.ys_);
                    }
                    onChanged();
                }
                if (!other.zs_.isEmpty()) {
                    if (zs_.isEmpty()) {
                        zs_ = other.zs_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureZsIsMutable();
                        zs_.addAll(other.zs_);
                    }
                    onChanged();
                }
                if (!other.separators_.isEmpty()) {
                    if (separators_.isEmpty()) {
                        separators_ = other.separators_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureSeparatorsIsMutable();
                        separators_.addAll(other.separators_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Polygon parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Polygon) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.Internal.DoubleList xs_ = emptyDoubleList();

            private void ensureXsIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    xs_ = mutableCopy(xs_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return A list containing the xs.
             */
            public java.util.List<Double>
            getXsList() {
                return ((bitField0_ & 0x00000001) != 0) ?
                        java.util.Collections.unmodifiableList(xs_) : xs_;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return The count of xs.
             */
            public int getXsCount() {
                return xs_.size();
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The xs at the given index.
             */
            public double getXs(int index) {
                return xs_.getDouble(index);
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The xs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setXs(
                    int index, double value) {
                ensureXsIsMutable();
                xs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param value The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addXs(double value) {
                ensureXsIsMutable();
                xs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param values The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllXs(
                    @NotNull Iterable<? extends Double> values) {
                ensureXsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, xs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearXs() {
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList ys_ = emptyDoubleList();

            private void ensureYsIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    ys_ = mutableCopy(ys_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return A list containing the ys.
             */
            public java.util.List<Double>
            getYsList() {
                return ((bitField0_ & 0x00000002) != 0) ?
                        java.util.Collections.unmodifiableList(ys_) : ys_;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return The count of ys.
             */
            public int getYsCount() {
                return ys_.size();
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The ys at the given index.
             */
            public double getYs(int index) {
                return ys_.getDouble(index);
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The ys to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setYs(
                    int index, double value) {
                ensureYsIsMutable();
                ys_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param value The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addYs(double value) {
                ensureYsIsMutable();
                ys_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param values The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllYs(
                    @NotNull Iterable<? extends Double> values) {
                ensureYsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, ys_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearYs() {
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList zs_ = emptyDoubleList();

            private void ensureZsIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    zs_ = mutableCopy(zs_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return A list containing the zs.
             */
            public java.util.List<Double>
            getZsList() {
                return ((bitField0_ & 0x00000004) != 0) ?
                        java.util.Collections.unmodifiableList(zs_) : zs_;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return The count of zs.
             */
            public int getZsCount() {
                return zs_.size();
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The zs at the given index.
             */
            public double getZs(int index) {
                return zs_.getDouble(index);
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The zs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setZs(
                    int index, double value) {
                ensureZsIsMutable();
                zs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param value The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addZs(double value) {
                ensureZsIsMutable();
                zs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param values The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllZs(
                    @NotNull Iterable<? extends Double> values) {
                ensureZsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, zs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearZs() {
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList separators_ = emptyIntList();

            private void ensureSeparatorsIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    separators_ = mutableCopy(separators_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @return A list containing the separators.
             */
            public java.util.List<Integer>
            getSeparatorsList() {
                return ((bitField0_ & 0x00000008) != 0) ?
                        java.util.Collections.unmodifiableList(separators_) : separators_;
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @return The count of separators.
             */
            public int getSeparatorsCount() {
                return separators_.size();
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @param index The index of the element to return.
             * @return The separators at the given index.
             */
            public int getSeparators(int index) {
                return separators_.getInt(index);
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @param index The index to set the value at.
             * @param value The separators to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSeparators(
                    int index, int value) {
                ensureSeparatorsIsMutable();
                separators_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @param value The separators to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSeparators(int value) {
                ensureSeparatorsIsMutable();
                separators_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @param values The separators to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSeparators(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSeparatorsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, separators_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSeparators() {
                separators_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.Polygon)
        }

        // @@protoc_insertion_point(class_scope:pojo.Polygon)
        private static final @NotNull Polygon DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Polygon();
        }

        public static Polygon getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Polygon>
                PARSER = new com.google.protobuf.AbstractParser<Polygon>() {
            @Override
            public @NotNull Polygon parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Polygon(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Polygon> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<Polygon> getParserForType() {
            return PARSER;
        }

        @Override
        public Polygon getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface MultiPointOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.MultiPoint)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        java.util.List<Double> getXsList();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        int getXsCount();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        double getXs(int index);

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        java.util.List<Double> getYsList();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        int getYsCount();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        double getYs(int index);

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        java.util.List<Double> getZsList();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        int getZsCount();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        double getZs(int index);
    }

    /**
     * <pre>
     * MultiPoint 包含MultiPoint上各个点的x y z坐标，z可选。
     * </pre>
     * <p>
     * Protobuf type {@code pojo.MultiPoint}
     */
    public static final class MultiPoint extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.MultiPoint)
            MultiPointOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use MultiPoint.newBuilder() to construct.
        private MultiPoint(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private MultiPoint() {
            xs_ = emptyDoubleList();
            ys_ = emptyDoubleList();
            zs_ = emptyDoubleList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new MultiPoint();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private MultiPoint(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            xs_.addDouble(input.readDouble());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                xs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 17: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            ys_.addDouble(input.readDouble());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                ys_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 25: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            zs_.addDouble(input.readDouble());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                zs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable(); // C
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_MultiPoint_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_MultiPoint_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            MultiPoint.class, Builder.class);
        }

        public static final int XS_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.DoubleList xs_;

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        @Override
        public java.util.List<Double>
        getXsList() {
            return xs_;
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        public int getXsCount() {
            return xs_.size();
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        public double getXs(int index) {
            return xs_.getDouble(index);
        }

        private int xsMemoizedSerializedSize = -1;

        public static final int YS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.DoubleList ys_;

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        @Override
        public java.util.List<Double>
        getYsList() {
            return ys_;
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        public int getYsCount() {
            return ys_.size();
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        public double getYs(int index) {
            return ys_.getDouble(index);
        }

        private int ysMemoizedSerializedSize = -1;

        public static final int ZS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.DoubleList zs_;

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        @Override
        public java.util.List<Double>
        getZsList() {
            return zs_;
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        public int getZsCount() {
            return zs_.size();
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        public double getZs(int index) {
            return zs_.getDouble(index);
        }

        private int zsMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (getXsList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(xsMemoizedSerializedSize);
            }
            for (int i = 0; i < xs_.size(); i++) {
                output.writeDoubleNoTag(xs_.getDouble(i));
            }
            if (getYsList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(ysMemoizedSerializedSize);
            }
            for (int i = 0; i < ys_.size(); i++) {
                output.writeDoubleNoTag(ys_.getDouble(i));
            }
            if (getZsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(zsMemoizedSerializedSize);
            }
            for (int i = 0; i < zs_.size(); i++) {
                output.writeDoubleNoTag(zs_.getDouble(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                dataSize = 8 * getXsList().size();
                size += dataSize;
                if (!getXsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                xsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getYsList().size();
                size += dataSize;
                if (!getYsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                ysMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getZsList().size();
                size += dataSize;
                if (!getZsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                zsMemoizedSerializedSize = dataSize;
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MultiPoint)) {
                return super.equals(obj);
            }
            MultiPoint other = (MultiPoint) obj;

            if (!getXsList()
                    .equals(other.getXsList())) return false;
            if (!getYsList()
                    .equals(other.getYsList())) return false;
            if (!getZsList()
                    .equals(other.getZsList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getXsCount() > 0) {
                hash = (37 * hash) + XS_FIELD_NUMBER;
                hash = (53 * hash) + getXsList().hashCode();
            }
            if (getYsCount() > 0) {
                hash = (37 * hash) + YS_FIELD_NUMBER;
                hash = (53 * hash) + getYsList().hashCode();
            }
            if (getZsCount() > 0) {
                hash = (37 * hash) + ZS_FIELD_NUMBER;
                hash = (53 * hash) + getZsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static MultiPoint parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiPoint parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiPoint parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiPoint parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiPoint parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiPoint parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiPoint parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static MultiPoint parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static MultiPoint parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static MultiPoint parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static MultiPoint parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static MultiPoint parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull MultiPoint prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * MultiPoint 包含MultiPoint上各个点的x y z坐标，z可选。
         * </pre>
         * <p>
         * Protobuf type {@code pojo.MultiPoint}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.MultiPoint)
                MultiPointOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_MultiPoint_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_MultiPoint_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                MultiPoint.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.MultiPoint.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_MultiPoint_descriptor;
            }

            @Override
            public MultiPoint getDefaultInstanceForType() {
                return MultiPoint.getDefaultInstance();
            }

            @Override
            public @NotNull MultiPoint build() {
                MultiPoint result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull MultiPoint buildPartial() {
                MultiPoint result = new MultiPoint(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.xs_ = xs_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.ys_ = ys_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.zs_ = zs_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof MultiPoint) {
                    return mergeFrom((MultiPoint) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull MultiPoint other) {
                if (other == MultiPoint.getDefaultInstance()) return this;
                if (!other.xs_.isEmpty()) {
                    if (xs_.isEmpty()) {
                        xs_ = other.xs_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureXsIsMutable();
                        xs_.addAll(other.xs_);
                    }
                    onChanged();
                }
                if (!other.ys_.isEmpty()) {
                    if (ys_.isEmpty()) {
                        ys_ = other.ys_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureYsIsMutable();
                        ys_.addAll(other.ys_);
                    }
                    onChanged();
                }
                if (!other.zs_.isEmpty()) {
                    if (zs_.isEmpty()) {
                        zs_ = other.zs_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureZsIsMutable();
                        zs_.addAll(other.zs_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                MultiPoint parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (MultiPoint) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.Internal.DoubleList xs_ = emptyDoubleList();

            private void ensureXsIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    xs_ = mutableCopy(xs_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return A list containing the xs.
             */
            public java.util.List<Double>
            getXsList() {
                return ((bitField0_ & 0x00000001) != 0) ?
                        java.util.Collections.unmodifiableList(xs_) : xs_;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return The count of xs.
             */
            public int getXsCount() {
                return xs_.size();
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The xs at the given index.
             */
            public double getXs(int index) {
                return xs_.getDouble(index);
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The xs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setXs(
                    int index, double value) {
                ensureXsIsMutable();
                xs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param value The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addXs(double value) {
                ensureXsIsMutable();
                xs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param values The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllXs(
                    @NotNull Iterable<? extends Double> values) {
                ensureXsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, xs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearXs() {
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList ys_ = emptyDoubleList();

            private void ensureYsIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    ys_ = mutableCopy(ys_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return A list containing the ys.
             */
            public java.util.List<Double>
            getYsList() {
                return ((bitField0_ & 0x00000002) != 0) ?
                        java.util.Collections.unmodifiableList(ys_) : ys_;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return The count of ys.
             */
            public int getYsCount() {
                return ys_.size();
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The ys at the given index.
             */
            public double getYs(int index) {
                return ys_.getDouble(index);
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The ys to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setYs(
                    int index, double value) {
                ensureYsIsMutable();
                ys_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param value The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addYs(double value) {
                ensureYsIsMutable();
                ys_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param values The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllYs(
                    @NotNull Iterable<? extends Double> values) {
                ensureYsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, ys_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearYs() {
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList zs_ = emptyDoubleList();

            private void ensureZsIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    zs_ = mutableCopy(zs_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return A list containing the zs.
             */
            public java.util.List<Double>
            getZsList() {
                return ((bitField0_ & 0x00000004) != 0) ?
                        java.util.Collections.unmodifiableList(zs_) : zs_;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return The count of zs.
             */
            public int getZsCount() {
                return zs_.size();
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The zs at the given index.
             */
            public double getZs(int index) {
                return zs_.getDouble(index);
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The zs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setZs(
                    int index, double value) {
                ensureZsIsMutable();
                zs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param value The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addZs(double value) {
                ensureZsIsMutable();
                zs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param values The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllZs(
                    @NotNull Iterable<? extends Double> values) {
                ensureZsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, zs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearZs() {
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.MultiPoint)
        }

        // @@protoc_insertion_point(class_scope:pojo.MultiPoint)
        private static final @NotNull MultiPoint DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new MultiPoint();
        }

        public static MultiPoint getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MultiPoint>
                PARSER = new com.google.protobuf.AbstractParser<MultiPoint>() {
            @Override
            public @NotNull MultiPoint parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new MultiPoint(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<MultiPoint> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<MultiPoint> getParserForType() {
            return PARSER;
        }

        @Override
        public MultiPoint getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface MultiLineStringOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.MultiLineString)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        java.util.List<Double> getXsList();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        int getXsCount();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        double getXs(int index);

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        java.util.List<Double> getYsList();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        int getYsCount();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        double getYs(int index);

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        java.util.List<Double> getZsList();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        int getZsCount();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        double getZs(int index);

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @return A list containing the separators.
         */
        java.util.List<Integer> getSeparatorsList();

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @return The count of separators.
         */
        int getSeparatorsCount();

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The separators at the given index.
         */
        int getSeparators(int index);
    }

    /**
     * <pre>
     * MultiLineString 包含MultiLineString上各个点的x y z坐标，z可选。
     * separators用于将坐标串分割为子线段 例如,xs ys zs 形成了坐标串[p0,p1,p2,p3,p4,p5,p6,p7,p8,p9]，
     * 则separators=[3,7]将坐标串分割为MultiLineString((p0 p1 p2),(p3 p4 p5 p6),(p7 p8 p9))。
     * 即separators[i]的意义为第i条子线段的终点(从0开始计数)；最后一条子线段的终点显然是数组的最后一位，故将其省略。
     * </pre>
     * <p>
     * Protobuf type {@code pojo.MultiLineString}
     */
    public static final class MultiLineString extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.MultiLineString)
            MultiLineStringOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use MultiLineString.newBuilder() to construct.
        private MultiLineString(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private MultiLineString() {
            xs_ = emptyDoubleList();
            ys_ = emptyDoubleList();
            zs_ = emptyDoubleList();
            separators_ = emptyIntList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new MultiLineString();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private MultiLineString(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            xs_.addDouble(input.readDouble());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                xs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 17: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            ys_.addDouble(input.readDouble());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                ys_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 25: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            zs_.addDouble(input.readDouble());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                zs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 32: {
                            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                separators_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            separators_.addInt(input.readInt32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                                separators_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                separators_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    separators_.makeImmutable(); // C
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_MultiLineString_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_MultiLineString_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            MultiLineString.class, Builder.class);
        }

        public static final int XS_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.DoubleList xs_;

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        @Override
        public java.util.List<Double>
        getXsList() {
            return xs_;
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        public int getXsCount() {
            return xs_.size();
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        public double getXs(int index) {
            return xs_.getDouble(index);
        }

        private int xsMemoizedSerializedSize = -1;

        public static final int YS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.DoubleList ys_;

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        @Override
        public java.util.List<Double>
        getYsList() {
            return ys_;
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        public int getYsCount() {
            return ys_.size();
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        public double getYs(int index) {
            return ys_.getDouble(index);
        }

        private int ysMemoizedSerializedSize = -1;

        public static final int ZS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.DoubleList zs_;

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        @Override
        public java.util.List<Double>
        getZsList() {
            return zs_;
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        public int getZsCount() {
            return zs_.size();
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        public double getZs(int index) {
            return zs_.getDouble(index);
        }

        private int zsMemoizedSerializedSize = -1;

        public static final int SEPARATORS_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList separators_;

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @return A list containing the separators.
         */
        @Override
        public java.util.List<Integer>
        getSeparatorsList() {
            return separators_;
        }

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @return The count of separators.
         */
        public int getSeparatorsCount() {
            return separators_.size();
        }

        /**
         * <code>repeated int32 separators = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The separators at the given index.
         */
        public int getSeparators(int index) {
            return separators_.getInt(index);
        }

        private int separatorsMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (getXsList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(xsMemoizedSerializedSize);
            }
            for (int i = 0; i < xs_.size(); i++) {
                output.writeDoubleNoTag(xs_.getDouble(i));
            }
            if (getYsList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(ysMemoizedSerializedSize);
            }
            for (int i = 0; i < ys_.size(); i++) {
                output.writeDoubleNoTag(ys_.getDouble(i));
            }
            if (getZsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(zsMemoizedSerializedSize);
            }
            for (int i = 0; i < zs_.size(); i++) {
                output.writeDoubleNoTag(zs_.getDouble(i));
            }
            if (getSeparatorsList().size() > 0) {
                output.writeUInt32NoTag(34);
                output.writeUInt32NoTag(separatorsMemoizedSerializedSize);
            }
            for (int i = 0; i < separators_.size(); i++) {
                output.writeInt32NoTag(separators_.getInt(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                dataSize = 8 * getXsList().size();
                size += dataSize;
                if (!getXsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                xsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getYsList().size();
                size += dataSize;
                if (!getYsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                ysMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getZsList().size();
                size += dataSize;
                if (!getZsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                zsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < separators_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(separators_.getInt(i));
                }
                size += dataSize;
                if (!getSeparatorsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                separatorsMemoizedSerializedSize = dataSize;
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MultiLineString)) {
                return super.equals(obj);
            }
            MultiLineString other = (MultiLineString) obj;

            if (!getXsList()
                    .equals(other.getXsList())) return false;
            if (!getYsList()
                    .equals(other.getYsList())) return false;
            if (!getZsList()
                    .equals(other.getZsList())) return false;
            if (!getSeparatorsList()
                    .equals(other.getSeparatorsList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getXsCount() > 0) {
                hash = (37 * hash) + XS_FIELD_NUMBER;
                hash = (53 * hash) + getXsList().hashCode();
            }
            if (getYsCount() > 0) {
                hash = (37 * hash) + YS_FIELD_NUMBER;
                hash = (53 * hash) + getYsList().hashCode();
            }
            if (getZsCount() > 0) {
                hash = (37 * hash) + ZS_FIELD_NUMBER;
                hash = (53 * hash) + getZsList().hashCode();
            }
            if (getSeparatorsCount() > 0) {
                hash = (37 * hash) + SEPARATORS_FIELD_NUMBER;
                hash = (53 * hash) + getSeparatorsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static MultiLineString parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiLineString parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiLineString parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiLineString parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiLineString parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiLineString parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiLineString parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static MultiLineString parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static MultiLineString parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static MultiLineString parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static MultiLineString parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static MultiLineString parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull MultiLineString prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * MultiLineString 包含MultiLineString上各个点的x y z坐标，z可选。
         * separators用于将坐标串分割为子线段 例如,xs ys zs 形成了坐标串[p0,p1,p2,p3,p4,p5,p6,p7,p8,p9]，
         * 则separators=[3,7]将坐标串分割为MultiLineString((p0 p1 p2),(p3 p4 p5 p6),(p7 p8 p9))。
         * 即separators[i]的意义为第i条子线段的终点(从0开始计数)；最后一条子线段的终点显然是数组的最后一位，故将其省略。
         * </pre>
         * <p>
         * Protobuf type {@code pojo.MultiLineString}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.MultiLineString)
                MultiLineStringOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_MultiLineString_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_MultiLineString_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                MultiLineString.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.MultiLineString.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                separators_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_MultiLineString_descriptor;
            }

            @Override
            public MultiLineString getDefaultInstanceForType() {
                return MultiLineString.getDefaultInstance();
            }

            @Override
            public @NotNull MultiLineString build() {
                MultiLineString result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull MultiLineString buildPartial() {
                MultiLineString result = new MultiLineString(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.xs_ = xs_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.ys_ = ys_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.zs_ = zs_;
                if (((bitField0_ & 0x00000008) != 0)) {
                    separators_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.separators_ = separators_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof MultiLineString) {
                    return mergeFrom((MultiLineString) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull MultiLineString other) {
                if (other == MultiLineString.getDefaultInstance()) return this;
                if (!other.xs_.isEmpty()) {
                    if (xs_.isEmpty()) {
                        xs_ = other.xs_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureXsIsMutable();
                        xs_.addAll(other.xs_);
                    }
                    onChanged();
                }
                if (!other.ys_.isEmpty()) {
                    if (ys_.isEmpty()) {
                        ys_ = other.ys_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureYsIsMutable();
                        ys_.addAll(other.ys_);
                    }
                    onChanged();
                }
                if (!other.zs_.isEmpty()) {
                    if (zs_.isEmpty()) {
                        zs_ = other.zs_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureZsIsMutable();
                        zs_.addAll(other.zs_);
                    }
                    onChanged();
                }
                if (!other.separators_.isEmpty()) {
                    if (separators_.isEmpty()) {
                        separators_ = other.separators_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureSeparatorsIsMutable();
                        separators_.addAll(other.separators_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                MultiLineString parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (MultiLineString) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.Internal.DoubleList xs_ = emptyDoubleList();

            private void ensureXsIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    xs_ = mutableCopy(xs_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return A list containing the xs.
             */
            public java.util.List<Double>
            getXsList() {
                return ((bitField0_ & 0x00000001) != 0) ?
                        java.util.Collections.unmodifiableList(xs_) : xs_;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return The count of xs.
             */
            public int getXsCount() {
                return xs_.size();
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The xs at the given index.
             */
            public double getXs(int index) {
                return xs_.getDouble(index);
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The xs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setXs(
                    int index, double value) {
                ensureXsIsMutable();
                xs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param value The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addXs(double value) {
                ensureXsIsMutable();
                xs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param values The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllXs(
                    @NotNull Iterable<? extends Double> values) {
                ensureXsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, xs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearXs() {
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList ys_ = emptyDoubleList();

            private void ensureYsIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    ys_ = mutableCopy(ys_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return A list containing the ys.
             */
            public java.util.List<Double>
            getYsList() {
                return ((bitField0_ & 0x00000002) != 0) ?
                        java.util.Collections.unmodifiableList(ys_) : ys_;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return The count of ys.
             */
            public int getYsCount() {
                return ys_.size();
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The ys at the given index.
             */
            public double getYs(int index) {
                return ys_.getDouble(index);
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The ys to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setYs(
                    int index, double value) {
                ensureYsIsMutable();
                ys_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param value The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addYs(double value) {
                ensureYsIsMutable();
                ys_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param values The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllYs(
                    @NotNull Iterable<? extends Double> values) {
                ensureYsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, ys_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearYs() {
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList zs_ = emptyDoubleList();

            private void ensureZsIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    zs_ = mutableCopy(zs_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return A list containing the zs.
             */
            public java.util.List<Double>
            getZsList() {
                return ((bitField0_ & 0x00000004) != 0) ?
                        java.util.Collections.unmodifiableList(zs_) : zs_;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return The count of zs.
             */
            public int getZsCount() {
                return zs_.size();
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The zs at the given index.
             */
            public double getZs(int index) {
                return zs_.getDouble(index);
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The zs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setZs(
                    int index, double value) {
                ensureZsIsMutable();
                zs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param value The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addZs(double value) {
                ensureZsIsMutable();
                zs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param values The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllZs(
                    @NotNull Iterable<? extends Double> values) {
                ensureZsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, zs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearZs() {
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList separators_ = emptyIntList();

            private void ensureSeparatorsIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    separators_ = mutableCopy(separators_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @return A list containing the separators.
             */
            public java.util.List<Integer>
            getSeparatorsList() {
                return ((bitField0_ & 0x00000008) != 0) ?
                        java.util.Collections.unmodifiableList(separators_) : separators_;
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @return The count of separators.
             */
            public int getSeparatorsCount() {
                return separators_.size();
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @param index The index of the element to return.
             * @return The separators at the given index.
             */
            public int getSeparators(int index) {
                return separators_.getInt(index);
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @param index The index to set the value at.
             * @param value The separators to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSeparators(
                    int index, int value) {
                ensureSeparatorsIsMutable();
                separators_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @param value The separators to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSeparators(int value) {
                ensureSeparatorsIsMutable();
                separators_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @param values The separators to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSeparators(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSeparatorsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, separators_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 separators = 4;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSeparators() {
                separators_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.MultiLineString)
        }

        // @@protoc_insertion_point(class_scope:pojo.MultiLineString)
        private static final @NotNull MultiLineString DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new MultiLineString();
        }

        public static MultiLineString getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MultiLineString>
                PARSER = new com.google.protobuf.AbstractParser<MultiLineString>() {
            @Override
            public @NotNull MultiLineString parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new MultiLineString(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<MultiLineString> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<MultiLineString> getParserForType() {
            return PARSER;
        }

        @Override
        public MultiLineString getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface MultiPolygonOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.MultiPolygon)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        java.util.List<Double> getXsList();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        int getXsCount();

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        double getXs(int index);

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        java.util.List<Double> getYsList();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        int getYsCount();

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        double getYs(int index);

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        java.util.List<Double> getZsList();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        int getZsCount();

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        double getZs(int index);

        /**
         * <code>repeated int32 coordSeparators = 4;</code>
         *
         * @return A list containing the coordSeparators.
         */
        java.util.List<Integer> getCoordSeparatorsList();

        /**
         * <code>repeated int32 coordSeparators = 4;</code>
         *
         * @return The count of coordSeparators.
         */
        int getCoordSeparatorsCount();

        /**
         * <code>repeated int32 coordSeparators = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The coordSeparators at the given index.
         */
        int getCoordSeparators(int index);

        /**
         * <code>repeated int32 polygonSeparators = 5;</code>
         *
         * @return A list containing the polygonSeparators.
         */
        java.util.List<Integer> getPolygonSeparatorsList();

        /**
         * <code>repeated int32 polygonSeparators = 5;</code>
         *
         * @return The count of polygonSeparators.
         */
        int getPolygonSeparatorsCount();

        /**
         * <code>repeated int32 polygonSeparators = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The polygonSeparators at the given index.
         */
        int getPolygonSeparators(int index);
    }

    /**
     * <pre>
     * MultiPolygon 包含MultiPolygon上各个点的x y z坐标，z可选。
     * polygonSeparators用于将坐标串分割为子多边形 例如,xs ys zs 形成了坐标串[p0,p1,p2,p3,p4,p5,p6,p7,p8,p9]，
     * 则polygonSeparators=[3,7]将坐标串分割为MultiPolygon(((p0 p1 p2)),((p3 p4 p5 p6)),((p7 p8 p9)))。
     * 即polygonSeparators[i]的意义为第i个子多边形的终点(从0开始计数)；最后一个子多边形的终点显然是数组的最后一位，故将其省略。
     * 经过polygonSeparators分割后的子多边形坐标串，进一步由coordSeparators分割为环，分割依据与Polygon的separators一致
     * </pre>
     * <p>
     * Protobuf type {@code pojo.MultiPolygon}
     */
    public static final class MultiPolygon extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.MultiPolygon)
            MultiPolygonOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use MultiPolygon.newBuilder() to construct.
        private MultiPolygon(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private MultiPolygon() {
            xs_ = emptyDoubleList();
            ys_ = emptyDoubleList();
            zs_ = emptyDoubleList();
            coordSeparators_ = emptyIntList();
            polygonSeparators_ = emptyIntList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new MultiPolygon();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private MultiPolygon(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            xs_.addDouble(input.readDouble());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                xs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                xs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 17: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            ys_.addDouble(input.readDouble());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                                ys_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                ys_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 25: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            zs_.addDouble(input.readDouble());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                                zs_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                zs_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 32: {
                            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                coordSeparators_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            coordSeparators_.addInt(input.readInt32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                                coordSeparators_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                coordSeparators_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 40: {
                            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                                polygonSeparators_ = newIntList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            polygonSeparators_.addInt(input.readInt32());
                            break;
                        }
                        case 42: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                                polygonSeparators_ = newIntList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                polygonSeparators_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    coordSeparators_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000010) != 0)) {
                    polygonSeparators_.makeImmutable(); // C
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_MultiPolygon_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_MultiPolygon_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            MultiPolygon.class, Builder.class);
        }

        public static final int XS_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.DoubleList xs_;

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return A list containing the xs.
         */
        @Override
        public java.util.List<Double>
        getXsList() {
            return xs_;
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @return The count of xs.
         */
        public int getXsCount() {
            return xs_.size();
        }

        /**
         * <code>repeated double xs = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The xs at the given index.
         */
        public double getXs(int index) {
            return xs_.getDouble(index);
        }

        private int xsMemoizedSerializedSize = -1;

        public static final int YS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.DoubleList ys_;

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return A list containing the ys.
         */
        @Override
        public java.util.List<Double>
        getYsList() {
            return ys_;
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @return The count of ys.
         */
        public int getYsCount() {
            return ys_.size();
        }

        /**
         * <code>repeated double ys = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The ys at the given index.
         */
        public double getYs(int index) {
            return ys_.getDouble(index);
        }

        private int ysMemoizedSerializedSize = -1;

        public static final int ZS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.DoubleList zs_;

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return A list containing the zs.
         */
        @Override
        public java.util.List<Double>
        getZsList() {
            return zs_;
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @return The count of zs.
         */
        public int getZsCount() {
            return zs_.size();
        }

        /**
         * <code>repeated double zs = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The zs at the given index.
         */
        public double getZs(int index) {
            return zs_.getDouble(index);
        }

        private int zsMemoizedSerializedSize = -1;

        public static final int COORDSEPARATORS_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList coordSeparators_;

        /**
         * <code>repeated int32 coordSeparators = 4;</code>
         *
         * @return A list containing the coordSeparators.
         */
        @Override
        public java.util.List<Integer>
        getCoordSeparatorsList() {
            return coordSeparators_;
        }

        /**
         * <code>repeated int32 coordSeparators = 4;</code>
         *
         * @return The count of coordSeparators.
         */
        public int getCoordSeparatorsCount() {
            return coordSeparators_.size();
        }

        /**
         * <code>repeated int32 coordSeparators = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The coordSeparators at the given index.
         */
        public int getCoordSeparators(int index) {
            return coordSeparators_.getInt(index);
        }

        private int coordSeparatorsMemoizedSerializedSize = -1;

        public static final int POLYGONSEPARATORS_FIELD_NUMBER = 5;
        private com.google.protobuf.Internal.IntList polygonSeparators_;

        /**
         * <code>repeated int32 polygonSeparators = 5;</code>
         *
         * @return A list containing the polygonSeparators.
         */
        @Override
        public java.util.List<Integer>
        getPolygonSeparatorsList() {
            return polygonSeparators_;
        }

        /**
         * <code>repeated int32 polygonSeparators = 5;</code>
         *
         * @return The count of polygonSeparators.
         */
        public int getPolygonSeparatorsCount() {
            return polygonSeparators_.size();
        }

        /**
         * <code>repeated int32 polygonSeparators = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The polygonSeparators at the given index.
         */
        public int getPolygonSeparators(int index) {
            return polygonSeparators_.getInt(index);
        }

        private int polygonSeparatorsMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (getXsList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(xsMemoizedSerializedSize);
            }
            for (int i = 0; i < xs_.size(); i++) {
                output.writeDoubleNoTag(xs_.getDouble(i));
            }
            if (getYsList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(ysMemoizedSerializedSize);
            }
            for (int i = 0; i < ys_.size(); i++) {
                output.writeDoubleNoTag(ys_.getDouble(i));
            }
            if (getZsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(zsMemoizedSerializedSize);
            }
            for (int i = 0; i < zs_.size(); i++) {
                output.writeDoubleNoTag(zs_.getDouble(i));
            }
            if (getCoordSeparatorsList().size() > 0) {
                output.writeUInt32NoTag(34);
                output.writeUInt32NoTag(coordSeparatorsMemoizedSerializedSize);
            }
            for (int i = 0; i < coordSeparators_.size(); i++) {
                output.writeInt32NoTag(coordSeparators_.getInt(i));
            }
            if (getPolygonSeparatorsList().size() > 0) {
                output.writeUInt32NoTag(42);
                output.writeUInt32NoTag(polygonSeparatorsMemoizedSerializedSize);
            }
            for (int i = 0; i < polygonSeparators_.size(); i++) {
                output.writeInt32NoTag(polygonSeparators_.getInt(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                dataSize = 8 * getXsList().size();
                size += dataSize;
                if (!getXsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                xsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getYsList().size();
                size += dataSize;
                if (!getYsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                ysMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 8 * getZsList().size();
                size += dataSize;
                if (!getZsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                zsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < coordSeparators_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(coordSeparators_.getInt(i));
                }
                size += dataSize;
                if (!getCoordSeparatorsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                coordSeparatorsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < polygonSeparators_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(polygonSeparators_.getInt(i));
                }
                size += dataSize;
                if (!getPolygonSeparatorsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                polygonSeparatorsMemoizedSerializedSize = dataSize;
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof MultiPolygon)) {
                return super.equals(obj);
            }
            MultiPolygon other = (MultiPolygon) obj;

            if (!getXsList()
                    .equals(other.getXsList())) return false;
            if (!getYsList()
                    .equals(other.getYsList())) return false;
            if (!getZsList()
                    .equals(other.getZsList())) return false;
            if (!getCoordSeparatorsList()
                    .equals(other.getCoordSeparatorsList())) return false;
            if (!getPolygonSeparatorsList()
                    .equals(other.getPolygonSeparatorsList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getXsCount() > 0) {
                hash = (37 * hash) + XS_FIELD_NUMBER;
                hash = (53 * hash) + getXsList().hashCode();
            }
            if (getYsCount() > 0) {
                hash = (37 * hash) + YS_FIELD_NUMBER;
                hash = (53 * hash) + getYsList().hashCode();
            }
            if (getZsCount() > 0) {
                hash = (37 * hash) + ZS_FIELD_NUMBER;
                hash = (53 * hash) + getZsList().hashCode();
            }
            if (getCoordSeparatorsCount() > 0) {
                hash = (37 * hash) + COORDSEPARATORS_FIELD_NUMBER;
                hash = (53 * hash) + getCoordSeparatorsList().hashCode();
            }
            if (getPolygonSeparatorsCount() > 0) {
                hash = (37 * hash) + POLYGONSEPARATORS_FIELD_NUMBER;
                hash = (53 * hash) + getPolygonSeparatorsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static MultiPolygon parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiPolygon parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiPolygon parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiPolygon parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiPolygon parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static MultiPolygon parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static MultiPolygon parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static MultiPolygon parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static MultiPolygon parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static MultiPolygon parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static MultiPolygon parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static MultiPolygon parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull MultiPolygon prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * MultiPolygon 包含MultiPolygon上各个点的x y z坐标，z可选。
         * polygonSeparators用于将坐标串分割为子多边形 例如,xs ys zs 形成了坐标串[p0,p1,p2,p3,p4,p5,p6,p7,p8,p9]，
         * 则polygonSeparators=[3,7]将坐标串分割为MultiPolygon(((p0 p1 p2)),((p3 p4 p5 p6)),((p7 p8 p9)))。
         * 即polygonSeparators[i]的意义为第i个子多边形的终点(从0开始计数)；最后一个子多边形的终点显然是数组的最后一位，故将其省略。
         * 经过polygonSeparators分割后的子多边形坐标串，进一步由coordSeparators分割为环，分割依据与Polygon的separators一致
         * </pre>
         * <p>
         * Protobuf type {@code pojo.MultiPolygon}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.MultiPolygon)
                MultiPolygonOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_MultiPolygon_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_MultiPolygon_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                MultiPolygon.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.MultiPolygon.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                coordSeparators_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                polygonSeparators_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_MultiPolygon_descriptor;
            }

            @Override
            public MultiPolygon getDefaultInstanceForType() {
                return MultiPolygon.getDefaultInstance();
            }

            @Override
            public @NotNull MultiPolygon build() {
                MultiPolygon result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull MultiPolygon buildPartial() {
                MultiPolygon result = new MultiPolygon(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    xs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.xs_ = xs_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    ys_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.ys_ = ys_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    zs_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.zs_ = zs_;
                if (((bitField0_ & 0x00000008) != 0)) {
                    coordSeparators_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.coordSeparators_ = coordSeparators_;
                if (((bitField0_ & 0x00000010) != 0)) {
                    polygonSeparators_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000010);
                }
                result.polygonSeparators_ = polygonSeparators_;
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof MultiPolygon) {
                    return mergeFrom((MultiPolygon) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull MultiPolygon other) {
                if (other == MultiPolygon.getDefaultInstance()) return this;
                if (!other.xs_.isEmpty()) {
                    if (xs_.isEmpty()) {
                        xs_ = other.xs_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureXsIsMutable();
                        xs_.addAll(other.xs_);
                    }
                    onChanged();
                }
                if (!other.ys_.isEmpty()) {
                    if (ys_.isEmpty()) {
                        ys_ = other.ys_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureYsIsMutable();
                        ys_.addAll(other.ys_);
                    }
                    onChanged();
                }
                if (!other.zs_.isEmpty()) {
                    if (zs_.isEmpty()) {
                        zs_ = other.zs_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureZsIsMutable();
                        zs_.addAll(other.zs_);
                    }
                    onChanged();
                }
                if (!other.coordSeparators_.isEmpty()) {
                    if (coordSeparators_.isEmpty()) {
                        coordSeparators_ = other.coordSeparators_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureCoordSeparatorsIsMutable();
                        coordSeparators_.addAll(other.coordSeparators_);
                    }
                    onChanged();
                }
                if (!other.polygonSeparators_.isEmpty()) {
                    if (polygonSeparators_.isEmpty()) {
                        polygonSeparators_ = other.polygonSeparators_;
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        ensurePolygonSeparatorsIsMutable();
                        polygonSeparators_.addAll(other.polygonSeparators_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                MultiPolygon parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (MultiPolygon) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.Internal.DoubleList xs_ = emptyDoubleList();

            private void ensureXsIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    xs_ = mutableCopy(xs_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return A list containing the xs.
             */
            public java.util.List<Double>
            getXsList() {
                return ((bitField0_ & 0x00000001) != 0) ?
                        java.util.Collections.unmodifiableList(xs_) : xs_;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return The count of xs.
             */
            public int getXsCount() {
                return xs_.size();
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The xs at the given index.
             */
            public double getXs(int index) {
                return xs_.getDouble(index);
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The xs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setXs(
                    int index, double value) {
                ensureXsIsMutable();
                xs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param value The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addXs(double value) {
                ensureXsIsMutable();
                xs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @param values The xs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllXs(
                    @NotNull Iterable<? extends Double> values) {
                ensureXsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, xs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double xs = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearXs() {
                xs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList ys_ = emptyDoubleList();

            private void ensureYsIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    ys_ = mutableCopy(ys_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return A list containing the ys.
             */
            public java.util.List<Double>
            getYsList() {
                return ((bitField0_ & 0x00000002) != 0) ?
                        java.util.Collections.unmodifiableList(ys_) : ys_;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return The count of ys.
             */
            public int getYsCount() {
                return ys_.size();
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The ys at the given index.
             */
            public double getYs(int index) {
                return ys_.getDouble(index);
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The ys to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setYs(
                    int index, double value) {
                ensureYsIsMutable();
                ys_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param value The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addYs(double value) {
                ensureYsIsMutable();
                ys_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @param values The ys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllYs(
                    @NotNull Iterable<? extends Double> values) {
                ensureYsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, ys_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double ys = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearYs() {
                ys_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList zs_ = emptyDoubleList();

            private void ensureZsIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    zs_ = mutableCopy(zs_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return A list containing the zs.
             */
            public java.util.List<Double>
            getZsList() {
                return ((bitField0_ & 0x00000004) != 0) ?
                        java.util.Collections.unmodifiableList(zs_) : zs_;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return The count of zs.
             */
            public int getZsCount() {
                return zs_.size();
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The zs at the given index.
             */
            public double getZs(int index) {
                return zs_.getDouble(index);
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The zs to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setZs(
                    int index, double value) {
                ensureZsIsMutable();
                zs_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param value The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addZs(double value) {
                ensureZsIsMutable();
                zs_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @param values The zs to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllZs(
                    @NotNull Iterable<? extends Double> values) {
                ensureZsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, zs_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double zs = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearZs() {
                zs_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList coordSeparators_ = emptyIntList();

            private void ensureCoordSeparatorsIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    coordSeparators_ = mutableCopy(coordSeparators_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <code>repeated int32 coordSeparators = 4;</code>
             *
             * @return A list containing the coordSeparators.
             */
            public java.util.List<Integer>
            getCoordSeparatorsList() {
                return ((bitField0_ & 0x00000008) != 0) ?
                        java.util.Collections.unmodifiableList(coordSeparators_) : coordSeparators_;
            }

            /**
             * <code>repeated int32 coordSeparators = 4;</code>
             *
             * @return The count of coordSeparators.
             */
            public int getCoordSeparatorsCount() {
                return coordSeparators_.size();
            }

            /**
             * <code>repeated int32 coordSeparators = 4;</code>
             *
             * @param index The index of the element to return.
             * @return The coordSeparators at the given index.
             */
            public int getCoordSeparators(int index) {
                return coordSeparators_.getInt(index);
            }

            /**
             * <code>repeated int32 coordSeparators = 4;</code>
             *
             * @param index The index to set the value at.
             * @param value The coordSeparators to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setCoordSeparators(
                    int index, int value) {
                ensureCoordSeparatorsIsMutable();
                coordSeparators_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 coordSeparators = 4;</code>
             *
             * @param value The coordSeparators to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addCoordSeparators(int value) {
                ensureCoordSeparatorsIsMutable();
                coordSeparators_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 coordSeparators = 4;</code>
             *
             * @param values The coordSeparators to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllCoordSeparators(
                    @NotNull Iterable<? extends Integer> values) {
                ensureCoordSeparatorsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, coordSeparators_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 coordSeparators = 4;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearCoordSeparators() {
                coordSeparators_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList polygonSeparators_ = emptyIntList();

            private void ensurePolygonSeparatorsIsMutable() {
                if (!((bitField0_ & 0x00000010) != 0)) {
                    polygonSeparators_ = mutableCopy(polygonSeparators_);
                    bitField0_ |= 0x00000010;
                }
            }

            /**
             * <code>repeated int32 polygonSeparators = 5;</code>
             *
             * @return A list containing the polygonSeparators.
             */
            public java.util.List<Integer>
            getPolygonSeparatorsList() {
                return ((bitField0_ & 0x00000010) != 0) ?
                        java.util.Collections.unmodifiableList(polygonSeparators_) : polygonSeparators_;
            }

            /**
             * <code>repeated int32 polygonSeparators = 5;</code>
             *
             * @return The count of polygonSeparators.
             */
            public int getPolygonSeparatorsCount() {
                return polygonSeparators_.size();
            }

            /**
             * <code>repeated int32 polygonSeparators = 5;</code>
             *
             * @param index The index of the element to return.
             * @return The polygonSeparators at the given index.
             */
            public int getPolygonSeparators(int index) {
                return polygonSeparators_.getInt(index);
            }

            /**
             * <code>repeated int32 polygonSeparators = 5;</code>
             *
             * @param index The index to set the value at.
             * @param value The polygonSeparators to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setPolygonSeparators(
                    int index, int value) {
                ensurePolygonSeparatorsIsMutable();
                polygonSeparators_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 polygonSeparators = 5;</code>
             *
             * @param value The polygonSeparators to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addPolygonSeparators(int value) {
                ensurePolygonSeparatorsIsMutable();
                polygonSeparators_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 polygonSeparators = 5;</code>
             *
             * @param values The polygonSeparators to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllPolygonSeparators(
                    @NotNull Iterable<? extends Integer> values) {
                ensurePolygonSeparatorsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, polygonSeparators_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 polygonSeparators = 5;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearPolygonSeparators() {
                polygonSeparators_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.MultiPolygon)
        }

        // @@protoc_insertion_point(class_scope:pojo.MultiPolygon)
        private static final @NotNull MultiPolygon DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new MultiPolygon();
        }

        public static MultiPolygon getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MultiPolygon>
                PARSER = new com.google.protobuf.AbstractParser<MultiPolygon>() {
            @Override
            public @NotNull MultiPolygon parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new MultiPolygon(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<MultiPolygon> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<MultiPolygon> getParserForType() {
            return PARSER;
        }

        @Override
        public MultiPolygon getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface GeometryCollectionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.GeometryCollection)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        java.util.List<Point>
        getPointsList();

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        Point getPoints(int index);

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        int getPointsCount();

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        java.util.List<? extends PointOrBuilder>
        getPointsOrBuilderList();

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        PointOrBuilder getPointsOrBuilder(
                int index);

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        java.util.List<LineString>
        getLineStringsList();

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        LineString getLineStrings(int index);

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        int getLineStringsCount();

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        java.util.List<? extends LineStringOrBuilder>
        getLineStringsOrBuilderList();

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        LineStringOrBuilder getLineStringsOrBuilder(
                int index);

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        java.util.List<Polygon>
        getPolygonsList();

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        Polygon getPolygons(int index);

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        int getPolygonsCount();

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        java.util.List<? extends PolygonOrBuilder>
        getPolygonsOrBuilderList();

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        PolygonOrBuilder getPolygonsOrBuilder(
                int index);

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        java.util.List<MultiPoint>
        getMultiPointsList();

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        MultiPoint getMultiPoints(int index);

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        int getMultiPointsCount();

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        java.util.List<? extends MultiPointOrBuilder>
        getMultiPointsOrBuilderList();

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        MultiPointOrBuilder getMultiPointsOrBuilder(
                int index);

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        java.util.List<MultiLineString>
        getMultiLineStringsList();

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        MultiLineString getMultiLineStrings(int index);

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        int getMultiLineStringsCount();

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        java.util.List<? extends MultiLineStringOrBuilder>
        getMultiLineStringsOrBuilderList();

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        MultiLineStringOrBuilder getMultiLineStringsOrBuilder(
                int index);

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        java.util.List<MultiPolygon>
        getMultiPolygonsList();

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        MultiPolygon getMultiPolygons(int index);

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        int getMultiPolygonsCount();

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        java.util.List<? extends MultiPolygonOrBuilder>
        getMultiPolygonsOrBuilderList();

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        MultiPolygonOrBuilder getMultiPolygonsOrBuilder(
                int index);

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        java.util.List<GeometryCollection>
        getGeometryCollectionsList();

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        GeometryCollection getGeometryCollections(int index);

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        int getGeometryCollectionsCount();

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        java.util.List<? extends GeometryCollectionOrBuilder>
        getGeometryCollectionsOrBuilderList();

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        GeometryCollectionOrBuilder getGeometryCollectionsOrBuilder(
                int index);
    }

    /**
     * <pre>
     * GeometryCollection
     * GeometryCollection允许嵌套
     * </pre>
     * <p>
     * Protobuf type {@code pojo.GeometryCollection}
     */
    public static final class GeometryCollection extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.GeometryCollection)
            GeometryCollectionOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use GeometryCollection.newBuilder() to construct.
        private GeometryCollection(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private GeometryCollection() {
            points_ = java.util.Collections.emptyList();
            lineStrings_ = java.util.Collections.emptyList();
            polygons_ = java.util.Collections.emptyList();
            multiPoints_ = java.util.Collections.emptyList();
            multiLineStrings_ = java.util.Collections.emptyList();
            multiPolygons_ = java.util.Collections.emptyList();
            geometryCollections_ = java.util.Collections.emptyList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new GeometryCollection();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private GeometryCollection(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                points_ = new java.util.ArrayList<Point>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            points_.add(
                                    input.readMessage(Point.parser(), extensionRegistry));
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                lineStrings_ = new java.util.ArrayList<LineString>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            lineStrings_.add(
                                    input.readMessage(LineString.parser(), extensionRegistry));
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                polygons_ = new java.util.ArrayList<Polygon>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            polygons_.add(
                                    input.readMessage(Polygon.parser(), extensionRegistry));
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                multiPoints_ = new java.util.ArrayList<MultiPoint>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            multiPoints_.add(
                                    input.readMessage(MultiPoint.parser(), extensionRegistry));
                            break;
                        }
                        case 42: {
                            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                                multiLineStrings_ = new java.util.ArrayList<MultiLineString>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            multiLineStrings_.add(
                                    input.readMessage(MultiLineString.parser(), extensionRegistry));
                            break;
                        }
                        case 50: {
                            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                                multiPolygons_ = new java.util.ArrayList<MultiPolygon>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            multiPolygons_.add(
                                    input.readMessage(MultiPolygon.parser(), extensionRegistry));
                            break;
                        }
                        case 58: {
                            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                                geometryCollections_ = new java.util.ArrayList<GeometryCollection>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            geometryCollections_.add(
                                    input.readMessage(GeometryCollection.parser(), extensionRegistry));
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    points_ = java.util.Collections.unmodifiableList(points_);
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    lineStrings_ = java.util.Collections.unmodifiableList(lineStrings_);
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    polygons_ = java.util.Collections.unmodifiableList(polygons_);
                }
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    multiPoints_ = java.util.Collections.unmodifiableList(multiPoints_);
                }
                if (((mutable_bitField0_ & 0x00000010) != 0)) {
                    multiLineStrings_ = java.util.Collections.unmodifiableList(multiLineStrings_);
                }
                if (((mutable_bitField0_ & 0x00000020) != 0)) {
                    multiPolygons_ = java.util.Collections.unmodifiableList(multiPolygons_);
                }
                if (((mutable_bitField0_ & 0x00000040) != 0)) {
                    geometryCollections_ = java.util.Collections.unmodifiableList(geometryCollections_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_GeometryCollection_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_GeometryCollection_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            GeometryCollection.class, Builder.class);
        }

        public static final int POINTS_FIELD_NUMBER = 1;
        private java.util.List<Point> points_;

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        @Override
        public java.util.List<Point> getPointsList() {
            return points_;
        }

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        @Override
        public java.util.List<? extends PointOrBuilder>
        getPointsOrBuilderList() {
            return points_;
        }

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        @Override
        public int getPointsCount() {
            return points_.size();
        }

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        @Override
        public Point getPoints(int index) {
            return points_.get(index);
        }

        /**
         * <code>repeated .pojo.Point points = 1;</code>
         */
        @Override
        public PointOrBuilder getPointsOrBuilder(
                int index) {
            return points_.get(index);
        }

        public static final int LINESTRINGS_FIELD_NUMBER = 2;
        private java.util.List<LineString> lineStrings_;

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        @Override
        public java.util.List<LineString> getLineStringsList() {
            return lineStrings_;
        }

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        @Override
        public java.util.List<? extends LineStringOrBuilder>
        getLineStringsOrBuilderList() {
            return lineStrings_;
        }

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        @Override
        public int getLineStringsCount() {
            return lineStrings_.size();
        }

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        @Override
        public LineString getLineStrings(int index) {
            return lineStrings_.get(index);
        }

        /**
         * <code>repeated .pojo.LineString lineStrings = 2;</code>
         */
        @Override
        public LineStringOrBuilder getLineStringsOrBuilder(
                int index) {
            return lineStrings_.get(index);
        }

        public static final int POLYGONS_FIELD_NUMBER = 3;
        private java.util.List<Polygon> polygons_;

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        @Override
        public java.util.List<Polygon> getPolygonsList() {
            return polygons_;
        }

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        @Override
        public java.util.List<? extends PolygonOrBuilder>
        getPolygonsOrBuilderList() {
            return polygons_;
        }

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        @Override
        public int getPolygonsCount() {
            return polygons_.size();
        }

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        @Override
        public Polygon getPolygons(int index) {
            return polygons_.get(index);
        }

        /**
         * <code>repeated .pojo.Polygon polygons = 3;</code>
         */
        @Override
        public PolygonOrBuilder getPolygonsOrBuilder(
                int index) {
            return polygons_.get(index);
        }

        public static final int MULTIPOINTS_FIELD_NUMBER = 4;
        private java.util.List<MultiPoint> multiPoints_;

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        @Override
        public java.util.List<MultiPoint> getMultiPointsList() {
            return multiPoints_;
        }

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        @Override
        public java.util.List<? extends MultiPointOrBuilder>
        getMultiPointsOrBuilderList() {
            return multiPoints_;
        }

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        @Override
        public int getMultiPointsCount() {
            return multiPoints_.size();
        }

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        @Override
        public MultiPoint getMultiPoints(int index) {
            return multiPoints_.get(index);
        }

        /**
         * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
         */
        @Override
        public MultiPointOrBuilder getMultiPointsOrBuilder(
                int index) {
            return multiPoints_.get(index);
        }

        public static final int MULTILINESTRINGS_FIELD_NUMBER = 5;
        private java.util.List<MultiLineString> multiLineStrings_;

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        @Override
        public java.util.List<MultiLineString> getMultiLineStringsList() {
            return multiLineStrings_;
        }

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        @Override
        public java.util.List<? extends MultiLineStringOrBuilder>
        getMultiLineStringsOrBuilderList() {
            return multiLineStrings_;
        }

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        @Override
        public int getMultiLineStringsCount() {
            return multiLineStrings_.size();
        }

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        @Override
        public MultiLineString getMultiLineStrings(int index) {
            return multiLineStrings_.get(index);
        }

        /**
         * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
         */
        @Override
        public MultiLineStringOrBuilder getMultiLineStringsOrBuilder(
                int index) {
            return multiLineStrings_.get(index);
        }

        public static final int MULTIPOLYGONS_FIELD_NUMBER = 6;
        private java.util.List<MultiPolygon> multiPolygons_;

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        @Override
        public java.util.List<MultiPolygon> getMultiPolygonsList() {
            return multiPolygons_;
        }

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        @Override
        public java.util.List<? extends MultiPolygonOrBuilder>
        getMultiPolygonsOrBuilderList() {
            return multiPolygons_;
        }

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        @Override
        public int getMultiPolygonsCount() {
            return multiPolygons_.size();
        }

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        @Override
        public MultiPolygon getMultiPolygons(int index) {
            return multiPolygons_.get(index);
        }

        /**
         * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
         */
        @Override
        public MultiPolygonOrBuilder getMultiPolygonsOrBuilder(
                int index) {
            return multiPolygons_.get(index);
        }

        public static final int GEOMETRYCOLLECTIONS_FIELD_NUMBER = 7;
        private java.util.List<GeometryCollection> geometryCollections_;

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        @Override
        public java.util.List<GeometryCollection> getGeometryCollectionsList() {
            return geometryCollections_;
        }

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        @Override
        public java.util.List<? extends GeometryCollectionOrBuilder>
        getGeometryCollectionsOrBuilderList() {
            return geometryCollections_;
        }

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        @Override
        public int getGeometryCollectionsCount() {
            return geometryCollections_.size();
        }

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        @Override
        public GeometryCollection getGeometryCollections(int index) {
            return geometryCollections_.get(index);
        }

        /**
         * <pre>
         * 允许嵌套
         * </pre>
         *
         * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
         */
        @Override
        public GeometryCollectionOrBuilder getGeometryCollectionsOrBuilder(
                int index) {
            return geometryCollections_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < points_.size(); i++) {
                output.writeMessage(1, points_.get(i));
            }
            for (int i = 0; i < lineStrings_.size(); i++) {
                output.writeMessage(2, lineStrings_.get(i));
            }
            for (int i = 0; i < polygons_.size(); i++) {
                output.writeMessage(3, polygons_.get(i));
            }
            for (int i = 0; i < multiPoints_.size(); i++) {
                output.writeMessage(4, multiPoints_.get(i));
            }
            for (int i = 0; i < multiLineStrings_.size(); i++) {
                output.writeMessage(5, multiLineStrings_.get(i));
            }
            for (int i = 0; i < multiPolygons_.size(); i++) {
                output.writeMessage(6, multiPolygons_.get(i));
            }
            for (int i = 0; i < geometryCollections_.size(); i++) {
                output.writeMessage(7, geometryCollections_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < points_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, points_.get(i));
            }
            for (int i = 0; i < lineStrings_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, lineStrings_.get(i));
            }
            for (int i = 0; i < polygons_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, polygons_.get(i));
            }
            for (int i = 0; i < multiPoints_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, multiPoints_.get(i));
            }
            for (int i = 0; i < multiLineStrings_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, multiLineStrings_.get(i));
            }
            for (int i = 0; i < multiPolygons_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, multiPolygons_.get(i));
            }
            for (int i = 0; i < geometryCollections_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, geometryCollections_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof GeometryCollection)) {
                return super.equals(obj);
            }
            GeometryCollection other = (GeometryCollection) obj;

            if (!getPointsList()
                    .equals(other.getPointsList())) return false;
            if (!getLineStringsList()
                    .equals(other.getLineStringsList())) return false;
            if (!getPolygonsList()
                    .equals(other.getPolygonsList())) return false;
            if (!getMultiPointsList()
                    .equals(other.getMultiPointsList())) return false;
            if (!getMultiLineStringsList()
                    .equals(other.getMultiLineStringsList())) return false;
            if (!getMultiPolygonsList()
                    .equals(other.getMultiPolygonsList())) return false;
            if (!getGeometryCollectionsList()
                    .equals(other.getGeometryCollectionsList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getPointsCount() > 0) {
                hash = (37 * hash) + POINTS_FIELD_NUMBER;
                hash = (53 * hash) + getPointsList().hashCode();
            }
            if (getLineStringsCount() > 0) {
                hash = (37 * hash) + LINESTRINGS_FIELD_NUMBER;
                hash = (53 * hash) + getLineStringsList().hashCode();
            }
            if (getPolygonsCount() > 0) {
                hash = (37 * hash) + POLYGONS_FIELD_NUMBER;
                hash = (53 * hash) + getPolygonsList().hashCode();
            }
            if (getMultiPointsCount() > 0) {
                hash = (37 * hash) + MULTIPOINTS_FIELD_NUMBER;
                hash = (53 * hash) + getMultiPointsList().hashCode();
            }
            if (getMultiLineStringsCount() > 0) {
                hash = (37 * hash) + MULTILINESTRINGS_FIELD_NUMBER;
                hash = (53 * hash) + getMultiLineStringsList().hashCode();
            }
            if (getMultiPolygonsCount() > 0) {
                hash = (37 * hash) + MULTIPOLYGONS_FIELD_NUMBER;
                hash = (53 * hash) + getMultiPolygonsList().hashCode();
            }
            if (getGeometryCollectionsCount() > 0) {
                hash = (37 * hash) + GEOMETRYCOLLECTIONS_FIELD_NUMBER;
                hash = (53 * hash) + getGeometryCollectionsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static GeometryCollection parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static GeometryCollection parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static GeometryCollection parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static GeometryCollection parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static GeometryCollection parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static GeometryCollection parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static GeometryCollection parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static GeometryCollection parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static GeometryCollection parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static GeometryCollection parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static GeometryCollection parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static GeometryCollection parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull GeometryCollection prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * GeometryCollection
         * GeometryCollection允许嵌套
         * </pre>
         * <p>
         * Protobuf type {@code pojo.GeometryCollection}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.GeometryCollection)
                GeometryCollectionOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_GeometryCollection_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_GeometryCollection_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                GeometryCollection.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.GeometryCollection.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getPointsFieldBuilder();
                    getLineStringsFieldBuilder();
                    getPolygonsFieldBuilder();
                    getMultiPointsFieldBuilder();
                    getMultiLineStringsFieldBuilder();
                    getMultiPolygonsFieldBuilder();
                    getGeometryCollectionsFieldBuilder();
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                if (pointsBuilder_ == null) {
                    points_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    pointsBuilder_.clear();
                }
                if (lineStringsBuilder_ == null) {
                    lineStrings_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    lineStringsBuilder_.clear();
                }
                if (polygonsBuilder_ == null) {
                    polygons_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    polygonsBuilder_.clear();
                }
                if (multiPointsBuilder_ == null) {
                    multiPoints_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                    multiPointsBuilder_.clear();
                }
                if (multiLineStringsBuilder_ == null) {
                    multiLineStrings_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                    multiLineStringsBuilder_.clear();
                }
                if (multiPolygonsBuilder_ == null) {
                    multiPolygons_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000020);
                } else {
                    multiPolygonsBuilder_.clear();
                }
                if (geometryCollectionsBuilder_ == null) {
                    geometryCollections_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000040);
                } else {
                    geometryCollectionsBuilder_.clear();
                }
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_GeometryCollection_descriptor;
            }

            @Override
            public GeometryCollection getDefaultInstanceForType() {
                return GeometryCollection.getDefaultInstance();
            }

            @Override
            public @NotNull GeometryCollection build() {
                GeometryCollection result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull GeometryCollection buildPartial() {
                GeometryCollection result = new GeometryCollection(this);
                int from_bitField0_ = bitField0_;
                if (pointsBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        points_ = java.util.Collections.unmodifiableList(points_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.points_ = points_;
                } else {
                    result.points_ = pointsBuilder_.build();
                }
                if (lineStringsBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0)) {
                        lineStrings_ = java.util.Collections.unmodifiableList(lineStrings_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.lineStrings_ = lineStrings_;
                } else {
                    result.lineStrings_ = lineStringsBuilder_.build();
                }
                if (polygonsBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) != 0)) {
                        polygons_ = java.util.Collections.unmodifiableList(polygons_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.polygons_ = polygons_;
                } else {
                    result.polygons_ = polygonsBuilder_.build();
                }
                if (multiPointsBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) != 0)) {
                        multiPoints_ = java.util.Collections.unmodifiableList(multiPoints_);
                        bitField0_ = (bitField0_ & ~0x00000008);
                    }
                    result.multiPoints_ = multiPoints_;
                } else {
                    result.multiPoints_ = multiPointsBuilder_.build();
                }
                if (multiLineStringsBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) != 0)) {
                        multiLineStrings_ = java.util.Collections.unmodifiableList(multiLineStrings_);
                        bitField0_ = (bitField0_ & ~0x00000010);
                    }
                    result.multiLineStrings_ = multiLineStrings_;
                } else {
                    result.multiLineStrings_ = multiLineStringsBuilder_.build();
                }
                if (multiPolygonsBuilder_ == null) {
                    if (((bitField0_ & 0x00000020) != 0)) {
                        multiPolygons_ = java.util.Collections.unmodifiableList(multiPolygons_);
                        bitField0_ = (bitField0_ & ~0x00000020);
                    }
                    result.multiPolygons_ = multiPolygons_;
                } else {
                    result.multiPolygons_ = multiPolygonsBuilder_.build();
                }
                if (geometryCollectionsBuilder_ == null) {
                    if (((bitField0_ & 0x00000040) != 0)) {
                        geometryCollections_ = java.util.Collections.unmodifiableList(geometryCollections_);
                        bitField0_ = (bitField0_ & ~0x00000040);
                    }
                    result.geometryCollections_ = geometryCollections_;
                } else {
                    result.geometryCollections_ = geometryCollectionsBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof GeometryCollection) {
                    return mergeFrom((GeometryCollection) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull GeometryCollection other) {
                if (other == GeometryCollection.getDefaultInstance()) return this;
                if (pointsBuilder_ == null) {
                    if (!other.points_.isEmpty()) {
                        if (points_.isEmpty()) {
                            points_ = other.points_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePointsIsMutable();
                            points_.addAll(other.points_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.points_.isEmpty()) {
                        if (pointsBuilder_.isEmpty()) {
                            pointsBuilder_.dispose();
                            pointsBuilder_ = null;
                            points_ = other.points_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            pointsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getPointsFieldBuilder() : null;
                        } else {
                            pointsBuilder_.addAllMessages(other.points_);
                        }
                    }
                }
                if (lineStringsBuilder_ == null) {
                    if (!other.lineStrings_.isEmpty()) {
                        if (lineStrings_.isEmpty()) {
                            lineStrings_ = other.lineStrings_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureLineStringsIsMutable();
                            lineStrings_.addAll(other.lineStrings_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.lineStrings_.isEmpty()) {
                        if (lineStringsBuilder_.isEmpty()) {
                            lineStringsBuilder_.dispose();
                            lineStringsBuilder_ = null;
                            lineStrings_ = other.lineStrings_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            lineStringsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getLineStringsFieldBuilder() : null;
                        } else {
                            lineStringsBuilder_.addAllMessages(other.lineStrings_);
                        }
                    }
                }
                if (polygonsBuilder_ == null) {
                    if (!other.polygons_.isEmpty()) {
                        if (polygons_.isEmpty()) {
                            polygons_ = other.polygons_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensurePolygonsIsMutable();
                            polygons_.addAll(other.polygons_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.polygons_.isEmpty()) {
                        if (polygonsBuilder_.isEmpty()) {
                            polygonsBuilder_.dispose();
                            polygonsBuilder_ = null;
                            polygons_ = other.polygons_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            polygonsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getPolygonsFieldBuilder() : null;
                        } else {
                            polygonsBuilder_.addAllMessages(other.polygons_);
                        }
                    }
                }
                if (multiPointsBuilder_ == null) {
                    if (!other.multiPoints_.isEmpty()) {
                        if (multiPoints_.isEmpty()) {
                            multiPoints_ = other.multiPoints_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            ensureMultiPointsIsMutable();
                            multiPoints_.addAll(other.multiPoints_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.multiPoints_.isEmpty()) {
                        if (multiPointsBuilder_.isEmpty()) {
                            multiPointsBuilder_.dispose();
                            multiPointsBuilder_ = null;
                            multiPoints_ = other.multiPoints_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                            multiPointsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getMultiPointsFieldBuilder() : null;
                        } else {
                            multiPointsBuilder_.addAllMessages(other.multiPoints_);
                        }
                    }
                }
                if (multiLineStringsBuilder_ == null) {
                    if (!other.multiLineStrings_.isEmpty()) {
                        if (multiLineStrings_.isEmpty()) {
                            multiLineStrings_ = other.multiLineStrings_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                        } else {
                            ensureMultiLineStringsIsMutable();
                            multiLineStrings_.addAll(other.multiLineStrings_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.multiLineStrings_.isEmpty()) {
                        if (multiLineStringsBuilder_.isEmpty()) {
                            multiLineStringsBuilder_.dispose();
                            multiLineStringsBuilder_ = null;
                            multiLineStrings_ = other.multiLineStrings_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                            multiLineStringsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getMultiLineStringsFieldBuilder() : null;
                        } else {
                            multiLineStringsBuilder_.addAllMessages(other.multiLineStrings_);
                        }
                    }
                }
                if (multiPolygonsBuilder_ == null) {
                    if (!other.multiPolygons_.isEmpty()) {
                        if (multiPolygons_.isEmpty()) {
                            multiPolygons_ = other.multiPolygons_;
                            bitField0_ = (bitField0_ & ~0x00000020);
                        } else {
                            ensureMultiPolygonsIsMutable();
                            multiPolygons_.addAll(other.multiPolygons_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.multiPolygons_.isEmpty()) {
                        if (multiPolygonsBuilder_.isEmpty()) {
                            multiPolygonsBuilder_.dispose();
                            multiPolygonsBuilder_ = null;
                            multiPolygons_ = other.multiPolygons_;
                            bitField0_ = (bitField0_ & ~0x00000020);
                            multiPolygonsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getMultiPolygonsFieldBuilder() : null;
                        } else {
                            multiPolygonsBuilder_.addAllMessages(other.multiPolygons_);
                        }
                    }
                }
                if (geometryCollectionsBuilder_ == null) {
                    if (!other.geometryCollections_.isEmpty()) {
                        if (geometryCollections_.isEmpty()) {
                            geometryCollections_ = other.geometryCollections_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                        } else {
                            ensureGeometryCollectionsIsMutable();
                            geometryCollections_.addAll(other.geometryCollections_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.geometryCollections_.isEmpty()) {
                        if (geometryCollectionsBuilder_.isEmpty()) {
                            geometryCollectionsBuilder_.dispose();
                            geometryCollectionsBuilder_ = null;
                            geometryCollections_ = other.geometryCollections_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                            geometryCollectionsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getGeometryCollectionsFieldBuilder() : null;
                        } else {
                            geometryCollectionsBuilder_.addAllMessages(other.geometryCollections_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                GeometryCollection parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (GeometryCollection) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.util.@Nullable List<Point> points_ =
                    java.util.Collections.emptyList();

            private void ensurePointsIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    points_ = new java.util.ArrayList<Point>(points_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    Point, Point.Builder, PointOrBuilder> pointsBuilder_;

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public java.util.List<Point> getPointsList() {
                if (pointsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(points_);
                } else {
                    return pointsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public int getPointsCount() {
                if (pointsBuilder_ == null) {
                    return points_.size();
                } else {
                    return pointsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public Point getPoints(int index) {
                if (pointsBuilder_ == null) {
                    return points_.get(index);
                } else {
                    return pointsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder setPoints(
                    int index, @Nullable Point value) {
                if (pointsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointsIsMutable();
                    points_.set(index, value);
                    onChanged();
                } else {
                    pointsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder setPoints(
                    int index, Point.@NotNull Builder builderForValue) {
                if (pointsBuilder_ == null) {
                    ensurePointsIsMutable();
                    points_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    pointsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder addPoints(@Nullable Point value) {
                if (pointsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointsIsMutable();
                    points_.add(value);
                    onChanged();
                } else {
                    pointsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder addPoints(
                    int index, @Nullable Point value) {
                if (pointsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePointsIsMutable();
                    points_.add(index, value);
                    onChanged();
                } else {
                    pointsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder addPoints(
                    Point.@NotNull Builder builderForValue) {
                if (pointsBuilder_ == null) {
                    ensurePointsIsMutable();
                    points_.add(builderForValue.build());
                    onChanged();
                } else {
                    pointsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder addPoints(
                    int index, Point.@NotNull Builder builderForValue) {
                if (pointsBuilder_ == null) {
                    ensurePointsIsMutable();
                    points_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    pointsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder addAllPoints(
                    @NotNull Iterable<? extends Point> values) {
                if (pointsBuilder_ == null) {
                    ensurePointsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, points_);
                    onChanged();
                } else {
                    pointsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder clearPoints() {
                if (pointsBuilder_ == null) {
                    points_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    pointsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public @NotNull Builder removePoints(int index) {
                if (pointsBuilder_ == null) {
                    ensurePointsIsMutable();
                    points_.remove(index);
                    onChanged();
                } else {
                    pointsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public Point.Builder getPointsBuilder(
                    int index) {
                return getPointsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public PointOrBuilder getPointsOrBuilder(
                    int index) {
                if (pointsBuilder_ == null) {
                    return points_.get(index);
                } else {
                    return pointsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public java.util.List<? extends PointOrBuilder>
            getPointsOrBuilderList() {
                if (pointsBuilder_ != null) {
                    return pointsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(points_);
                }
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public Point.Builder addPointsBuilder() {
                return getPointsFieldBuilder().addBuilder(
                        Point.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public Point.Builder addPointsBuilder(
                    int index) {
                return getPointsFieldBuilder().addBuilder(
                        index, Point.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.Point points = 1;</code>
             */
            public java.util.List<Point.Builder>
            getPointsBuilderList() {
                return getPointsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    Point, Point.Builder, PointOrBuilder>
            getPointsFieldBuilder() {
                if (pointsBuilder_ == null) {
                    pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            Point, Point.Builder, PointOrBuilder>(
                            points_,
                            ((bitField0_ & 0x00000001) != 0),
                            getParentForChildren(),
                            isClean());
                    points_ = null;
                }
                return pointsBuilder_;
            }

            private java.util.@Nullable List<LineString> lineStrings_ =
                    java.util.Collections.emptyList();

            private void ensureLineStringsIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    lineStrings_ = new java.util.ArrayList<LineString>(lineStrings_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    LineString, LineString.Builder, LineStringOrBuilder> lineStringsBuilder_;

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public java.util.List<LineString> getLineStringsList() {
                if (lineStringsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(lineStrings_);
                } else {
                    return lineStringsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public int getLineStringsCount() {
                if (lineStringsBuilder_ == null) {
                    return lineStrings_.size();
                } else {
                    return lineStringsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public LineString getLineStrings(int index) {
                if (lineStringsBuilder_ == null) {
                    return lineStrings_.get(index);
                } else {
                    return lineStringsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder setLineStrings(
                    int index, @Nullable LineString value) {
                if (lineStringsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLineStringsIsMutable();
                    lineStrings_.set(index, value);
                    onChanged();
                } else {
                    lineStringsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder setLineStrings(
                    int index, LineString.@NotNull Builder builderForValue) {
                if (lineStringsBuilder_ == null) {
                    ensureLineStringsIsMutable();
                    lineStrings_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    lineStringsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder addLineStrings(@Nullable LineString value) {
                if (lineStringsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLineStringsIsMutable();
                    lineStrings_.add(value);
                    onChanged();
                } else {
                    lineStringsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder addLineStrings(
                    int index, @Nullable LineString value) {
                if (lineStringsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLineStringsIsMutable();
                    lineStrings_.add(index, value);
                    onChanged();
                } else {
                    lineStringsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder addLineStrings(
                    LineString.@NotNull Builder builderForValue) {
                if (lineStringsBuilder_ == null) {
                    ensureLineStringsIsMutable();
                    lineStrings_.add(builderForValue.build());
                    onChanged();
                } else {
                    lineStringsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder addLineStrings(
                    int index, LineString.@NotNull Builder builderForValue) {
                if (lineStringsBuilder_ == null) {
                    ensureLineStringsIsMutable();
                    lineStrings_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    lineStringsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder addAllLineStrings(
                    @NotNull Iterable<? extends LineString> values) {
                if (lineStringsBuilder_ == null) {
                    ensureLineStringsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, lineStrings_);
                    onChanged();
                } else {
                    lineStringsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder clearLineStrings() {
                if (lineStringsBuilder_ == null) {
                    lineStrings_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    lineStringsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public @NotNull Builder removeLineStrings(int index) {
                if (lineStringsBuilder_ == null) {
                    ensureLineStringsIsMutable();
                    lineStrings_.remove(index);
                    onChanged();
                } else {
                    lineStringsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public LineString.Builder getLineStringsBuilder(
                    int index) {
                return getLineStringsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public LineStringOrBuilder getLineStringsOrBuilder(
                    int index) {
                if (lineStringsBuilder_ == null) {
                    return lineStrings_.get(index);
                } else {
                    return lineStringsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public java.util.List<? extends LineStringOrBuilder>
            getLineStringsOrBuilderList() {
                if (lineStringsBuilder_ != null) {
                    return lineStringsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(lineStrings_);
                }
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public LineString.Builder addLineStringsBuilder() {
                return getLineStringsFieldBuilder().addBuilder(
                        LineString.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public LineString.Builder addLineStringsBuilder(
                    int index) {
                return getLineStringsFieldBuilder().addBuilder(
                        index, LineString.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.LineString lineStrings = 2;</code>
             */
            public java.util.List<LineString.Builder>
            getLineStringsBuilderList() {
                return getLineStringsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    LineString, LineString.Builder, LineStringOrBuilder>
            getLineStringsFieldBuilder() {
                if (lineStringsBuilder_ == null) {
                    lineStringsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            LineString, LineString.Builder, LineStringOrBuilder>(
                            lineStrings_,
                            ((bitField0_ & 0x00000002) != 0),
                            getParentForChildren(),
                            isClean());
                    lineStrings_ = null;
                }
                return lineStringsBuilder_;
            }

            private java.util.@Nullable List<Polygon> polygons_ =
                    java.util.Collections.emptyList();

            private void ensurePolygonsIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    polygons_ = new java.util.ArrayList<Polygon>(polygons_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    Polygon, Polygon.Builder, PolygonOrBuilder> polygonsBuilder_;

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public java.util.List<Polygon> getPolygonsList() {
                if (polygonsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(polygons_);
                } else {
                    return polygonsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public int getPolygonsCount() {
                if (polygonsBuilder_ == null) {
                    return polygons_.size();
                } else {
                    return polygonsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public Polygon getPolygons(int index) {
                if (polygonsBuilder_ == null) {
                    return polygons_.get(index);
                } else {
                    return polygonsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder setPolygons(
                    int index, @Nullable Polygon value) {
                if (polygonsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolygonsIsMutable();
                    polygons_.set(index, value);
                    onChanged();
                } else {
                    polygonsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder setPolygons(
                    int index, Polygon.@NotNull Builder builderForValue) {
                if (polygonsBuilder_ == null) {
                    ensurePolygonsIsMutable();
                    polygons_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    polygonsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder addPolygons(@Nullable Polygon value) {
                if (polygonsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolygonsIsMutable();
                    polygons_.add(value);
                    onChanged();
                } else {
                    polygonsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder addPolygons(
                    int index, @Nullable Polygon value) {
                if (polygonsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolygonsIsMutable();
                    polygons_.add(index, value);
                    onChanged();
                } else {
                    polygonsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder addPolygons(
                    Polygon.@NotNull Builder builderForValue) {
                if (polygonsBuilder_ == null) {
                    ensurePolygonsIsMutable();
                    polygons_.add(builderForValue.build());
                    onChanged();
                } else {
                    polygonsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder addPolygons(
                    int index, Polygon.@NotNull Builder builderForValue) {
                if (polygonsBuilder_ == null) {
                    ensurePolygonsIsMutable();
                    polygons_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    polygonsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder addAllPolygons(
                    @NotNull Iterable<? extends Polygon> values) {
                if (polygonsBuilder_ == null) {
                    ensurePolygonsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, polygons_);
                    onChanged();
                } else {
                    polygonsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder clearPolygons() {
                if (polygonsBuilder_ == null) {
                    polygons_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    polygonsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public @NotNull Builder removePolygons(int index) {
                if (polygonsBuilder_ == null) {
                    ensurePolygonsIsMutable();
                    polygons_.remove(index);
                    onChanged();
                } else {
                    polygonsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public Polygon.Builder getPolygonsBuilder(
                    int index) {
                return getPolygonsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public PolygonOrBuilder getPolygonsOrBuilder(
                    int index) {
                if (polygonsBuilder_ == null) {
                    return polygons_.get(index);
                } else {
                    return polygonsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public java.util.List<? extends PolygonOrBuilder>
            getPolygonsOrBuilderList() {
                if (polygonsBuilder_ != null) {
                    return polygonsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(polygons_);
                }
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public Polygon.Builder addPolygonsBuilder() {
                return getPolygonsFieldBuilder().addBuilder(
                        Polygon.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public Polygon.Builder addPolygonsBuilder(
                    int index) {
                return getPolygonsFieldBuilder().addBuilder(
                        index, Polygon.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.Polygon polygons = 3;</code>
             */
            public java.util.List<Polygon.Builder>
            getPolygonsBuilderList() {
                return getPolygonsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    Polygon, Polygon.Builder, PolygonOrBuilder>
            getPolygonsFieldBuilder() {
                if (polygonsBuilder_ == null) {
                    polygonsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            Polygon, Polygon.Builder, PolygonOrBuilder>(
                            polygons_,
                            ((bitField0_ & 0x00000004) != 0),
                            getParentForChildren(),
                            isClean());
                    polygons_ = null;
                }
                return polygonsBuilder_;
            }

            private java.util.@Nullable List<MultiPoint> multiPoints_ =
                    java.util.Collections.emptyList();

            private void ensureMultiPointsIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    multiPoints_ = new java.util.ArrayList<MultiPoint>(multiPoints_);
                    bitField0_ |= 0x00000008;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    MultiPoint, MultiPoint.Builder, MultiPointOrBuilder> multiPointsBuilder_;

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public java.util.List<MultiPoint> getMultiPointsList() {
                if (multiPointsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(multiPoints_);
                } else {
                    return multiPointsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public int getMultiPointsCount() {
                if (multiPointsBuilder_ == null) {
                    return multiPoints_.size();
                } else {
                    return multiPointsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public MultiPoint getMultiPoints(int index) {
                if (multiPointsBuilder_ == null) {
                    return multiPoints_.get(index);
                } else {
                    return multiPointsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder setMultiPoints(
                    int index, @Nullable MultiPoint value) {
                if (multiPointsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiPointsIsMutable();
                    multiPoints_.set(index, value);
                    onChanged();
                } else {
                    multiPointsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder setMultiPoints(
                    int index, MultiPoint.@NotNull Builder builderForValue) {
                if (multiPointsBuilder_ == null) {
                    ensureMultiPointsIsMutable();
                    multiPoints_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    multiPointsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder addMultiPoints(@Nullable MultiPoint value) {
                if (multiPointsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiPointsIsMutable();
                    multiPoints_.add(value);
                    onChanged();
                } else {
                    multiPointsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder addMultiPoints(
                    int index, @Nullable MultiPoint value) {
                if (multiPointsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiPointsIsMutable();
                    multiPoints_.add(index, value);
                    onChanged();
                } else {
                    multiPointsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder addMultiPoints(
                    MultiPoint.@NotNull Builder builderForValue) {
                if (multiPointsBuilder_ == null) {
                    ensureMultiPointsIsMutable();
                    multiPoints_.add(builderForValue.build());
                    onChanged();
                } else {
                    multiPointsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder addMultiPoints(
                    int index, MultiPoint.@NotNull Builder builderForValue) {
                if (multiPointsBuilder_ == null) {
                    ensureMultiPointsIsMutable();
                    multiPoints_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    multiPointsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder addAllMultiPoints(
                    @NotNull Iterable<? extends MultiPoint> values) {
                if (multiPointsBuilder_ == null) {
                    ensureMultiPointsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, multiPoints_);
                    onChanged();
                } else {
                    multiPointsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder clearMultiPoints() {
                if (multiPointsBuilder_ == null) {
                    multiPoints_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                    onChanged();
                } else {
                    multiPointsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public @NotNull Builder removeMultiPoints(int index) {
                if (multiPointsBuilder_ == null) {
                    ensureMultiPointsIsMutable();
                    multiPoints_.remove(index);
                    onChanged();
                } else {
                    multiPointsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public MultiPoint.Builder getMultiPointsBuilder(
                    int index) {
                return getMultiPointsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public MultiPointOrBuilder getMultiPointsOrBuilder(
                    int index) {
                if (multiPointsBuilder_ == null) {
                    return multiPoints_.get(index);
                } else {
                    return multiPointsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public java.util.List<? extends MultiPointOrBuilder>
            getMultiPointsOrBuilderList() {
                if (multiPointsBuilder_ != null) {
                    return multiPointsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(multiPoints_);
                }
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public MultiPoint.Builder addMultiPointsBuilder() {
                return getMultiPointsFieldBuilder().addBuilder(
                        MultiPoint.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public MultiPoint.Builder addMultiPointsBuilder(
                    int index) {
                return getMultiPointsFieldBuilder().addBuilder(
                        index, MultiPoint.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.MultiPoint multiPoints = 4;</code>
             */
            public java.util.List<MultiPoint.Builder>
            getMultiPointsBuilderList() {
                return getMultiPointsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    MultiPoint, MultiPoint.Builder, MultiPointOrBuilder>
            getMultiPointsFieldBuilder() {
                if (multiPointsBuilder_ == null) {
                    multiPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            MultiPoint, MultiPoint.Builder, MultiPointOrBuilder>(
                            multiPoints_,
                            ((bitField0_ & 0x00000008) != 0),
                            getParentForChildren(),
                            isClean());
                    multiPoints_ = null;
                }
                return multiPointsBuilder_;
            }

            private java.util.@Nullable List<MultiLineString> multiLineStrings_ =
                    java.util.Collections.emptyList();

            private void ensureMultiLineStringsIsMutable() {
                if (!((bitField0_ & 0x00000010) != 0)) {
                    multiLineStrings_ = new java.util.ArrayList<MultiLineString>(multiLineStrings_);
                    bitField0_ |= 0x00000010;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    MultiLineString, MultiLineString.Builder, MultiLineStringOrBuilder> multiLineStringsBuilder_;

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public java.util.List<MultiLineString> getMultiLineStringsList() {
                if (multiLineStringsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(multiLineStrings_);
                } else {
                    return multiLineStringsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public int getMultiLineStringsCount() {
                if (multiLineStringsBuilder_ == null) {
                    return multiLineStrings_.size();
                } else {
                    return multiLineStringsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public MultiLineString getMultiLineStrings(int index) {
                if (multiLineStringsBuilder_ == null) {
                    return multiLineStrings_.get(index);
                } else {
                    return multiLineStringsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder setMultiLineStrings(
                    int index, @Nullable MultiLineString value) {
                if (multiLineStringsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiLineStringsIsMutable();
                    multiLineStrings_.set(index, value);
                    onChanged();
                } else {
                    multiLineStringsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder setMultiLineStrings(
                    int index, MultiLineString.@NotNull Builder builderForValue) {
                if (multiLineStringsBuilder_ == null) {
                    ensureMultiLineStringsIsMutable();
                    multiLineStrings_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    multiLineStringsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder addMultiLineStrings(@Nullable MultiLineString value) {
                if (multiLineStringsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiLineStringsIsMutable();
                    multiLineStrings_.add(value);
                    onChanged();
                } else {
                    multiLineStringsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder addMultiLineStrings(
                    int index, @Nullable MultiLineString value) {
                if (multiLineStringsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiLineStringsIsMutable();
                    multiLineStrings_.add(index, value);
                    onChanged();
                } else {
                    multiLineStringsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder addMultiLineStrings(
                    MultiLineString.@NotNull Builder builderForValue) {
                if (multiLineStringsBuilder_ == null) {
                    ensureMultiLineStringsIsMutable();
                    multiLineStrings_.add(builderForValue.build());
                    onChanged();
                } else {
                    multiLineStringsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder addMultiLineStrings(
                    int index, MultiLineString.@NotNull Builder builderForValue) {
                if (multiLineStringsBuilder_ == null) {
                    ensureMultiLineStringsIsMutable();
                    multiLineStrings_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    multiLineStringsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder addAllMultiLineStrings(
                    @NotNull Iterable<? extends MultiLineString> values) {
                if (multiLineStringsBuilder_ == null) {
                    ensureMultiLineStringsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, multiLineStrings_);
                    onChanged();
                } else {
                    multiLineStringsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder clearMultiLineStrings() {
                if (multiLineStringsBuilder_ == null) {
                    multiLineStrings_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                    onChanged();
                } else {
                    multiLineStringsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public @NotNull Builder removeMultiLineStrings(int index) {
                if (multiLineStringsBuilder_ == null) {
                    ensureMultiLineStringsIsMutable();
                    multiLineStrings_.remove(index);
                    onChanged();
                } else {
                    multiLineStringsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public MultiLineString.Builder getMultiLineStringsBuilder(
                    int index) {
                return getMultiLineStringsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public MultiLineStringOrBuilder getMultiLineStringsOrBuilder(
                    int index) {
                if (multiLineStringsBuilder_ == null) {
                    return multiLineStrings_.get(index);
                } else {
                    return multiLineStringsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public java.util.List<? extends MultiLineStringOrBuilder>
            getMultiLineStringsOrBuilderList() {
                if (multiLineStringsBuilder_ != null) {
                    return multiLineStringsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(multiLineStrings_);
                }
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public MultiLineString.Builder addMultiLineStringsBuilder() {
                return getMultiLineStringsFieldBuilder().addBuilder(
                        MultiLineString.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public MultiLineString.Builder addMultiLineStringsBuilder(
                    int index) {
                return getMultiLineStringsFieldBuilder().addBuilder(
                        index, MultiLineString.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.MultiLineString multiLineStrings = 5;</code>
             */
            public java.util.List<MultiLineString.Builder>
            getMultiLineStringsBuilderList() {
                return getMultiLineStringsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    MultiLineString, MultiLineString.Builder, MultiLineStringOrBuilder>
            getMultiLineStringsFieldBuilder() {
                if (multiLineStringsBuilder_ == null) {
                    multiLineStringsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            MultiLineString, MultiLineString.Builder, MultiLineStringOrBuilder>(
                            multiLineStrings_,
                            ((bitField0_ & 0x00000010) != 0),
                            getParentForChildren(),
                            isClean());
                    multiLineStrings_ = null;
                }
                return multiLineStringsBuilder_;
            }

            private java.util.@Nullable List<MultiPolygon> multiPolygons_ =
                    java.util.Collections.emptyList();

            private void ensureMultiPolygonsIsMutable() {
                if (!((bitField0_ & 0x00000020) != 0)) {
                    multiPolygons_ = new java.util.ArrayList<MultiPolygon>(multiPolygons_);
                    bitField0_ |= 0x00000020;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    MultiPolygon, MultiPolygon.Builder, MultiPolygonOrBuilder> multiPolygonsBuilder_;

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public java.util.List<MultiPolygon> getMultiPolygonsList() {
                if (multiPolygonsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(multiPolygons_);
                } else {
                    return multiPolygonsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public int getMultiPolygonsCount() {
                if (multiPolygonsBuilder_ == null) {
                    return multiPolygons_.size();
                } else {
                    return multiPolygonsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public MultiPolygon getMultiPolygons(int index) {
                if (multiPolygonsBuilder_ == null) {
                    return multiPolygons_.get(index);
                } else {
                    return multiPolygonsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder setMultiPolygons(
                    int index, @Nullable MultiPolygon value) {
                if (multiPolygonsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiPolygonsIsMutable();
                    multiPolygons_.set(index, value);
                    onChanged();
                } else {
                    multiPolygonsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder setMultiPolygons(
                    int index, MultiPolygon.@NotNull Builder builderForValue) {
                if (multiPolygonsBuilder_ == null) {
                    ensureMultiPolygonsIsMutable();
                    multiPolygons_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    multiPolygonsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder addMultiPolygons(@Nullable MultiPolygon value) {
                if (multiPolygonsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiPolygonsIsMutable();
                    multiPolygons_.add(value);
                    onChanged();
                } else {
                    multiPolygonsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder addMultiPolygons(
                    int index, @Nullable MultiPolygon value) {
                if (multiPolygonsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMultiPolygonsIsMutable();
                    multiPolygons_.add(index, value);
                    onChanged();
                } else {
                    multiPolygonsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder addMultiPolygons(
                    MultiPolygon.@NotNull Builder builderForValue) {
                if (multiPolygonsBuilder_ == null) {
                    ensureMultiPolygonsIsMutable();
                    multiPolygons_.add(builderForValue.build());
                    onChanged();
                } else {
                    multiPolygonsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder addMultiPolygons(
                    int index, MultiPolygon.@NotNull Builder builderForValue) {
                if (multiPolygonsBuilder_ == null) {
                    ensureMultiPolygonsIsMutable();
                    multiPolygons_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    multiPolygonsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder addAllMultiPolygons(
                    @NotNull Iterable<? extends MultiPolygon> values) {
                if (multiPolygonsBuilder_ == null) {
                    ensureMultiPolygonsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, multiPolygons_);
                    onChanged();
                } else {
                    multiPolygonsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder clearMultiPolygons() {
                if (multiPolygonsBuilder_ == null) {
                    multiPolygons_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000020);
                    onChanged();
                } else {
                    multiPolygonsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public @NotNull Builder removeMultiPolygons(int index) {
                if (multiPolygonsBuilder_ == null) {
                    ensureMultiPolygonsIsMutable();
                    multiPolygons_.remove(index);
                    onChanged();
                } else {
                    multiPolygonsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public MultiPolygon.Builder getMultiPolygonsBuilder(
                    int index) {
                return getMultiPolygonsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public MultiPolygonOrBuilder getMultiPolygonsOrBuilder(
                    int index) {
                if (multiPolygonsBuilder_ == null) {
                    return multiPolygons_.get(index);
                } else {
                    return multiPolygonsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public java.util.List<? extends MultiPolygonOrBuilder>
            getMultiPolygonsOrBuilderList() {
                if (multiPolygonsBuilder_ != null) {
                    return multiPolygonsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(multiPolygons_);
                }
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public MultiPolygon.Builder addMultiPolygonsBuilder() {
                return getMultiPolygonsFieldBuilder().addBuilder(
                        MultiPolygon.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public MultiPolygon.Builder addMultiPolygonsBuilder(
                    int index) {
                return getMultiPolygonsFieldBuilder().addBuilder(
                        index, MultiPolygon.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.MultiPolygon multiPolygons = 6;</code>
             */
            public java.util.List<MultiPolygon.Builder>
            getMultiPolygonsBuilderList() {
                return getMultiPolygonsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    MultiPolygon, MultiPolygon.Builder, MultiPolygonOrBuilder>
            getMultiPolygonsFieldBuilder() {
                if (multiPolygonsBuilder_ == null) {
                    multiPolygonsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            MultiPolygon, MultiPolygon.Builder, MultiPolygonOrBuilder>(
                            multiPolygons_,
                            ((bitField0_ & 0x00000020) != 0),
                            getParentForChildren(),
                            isClean());
                    multiPolygons_ = null;
                }
                return multiPolygonsBuilder_;
            }

            private java.util.@Nullable List<GeometryCollection> geometryCollections_ =
                    java.util.Collections.emptyList();

            private void ensureGeometryCollectionsIsMutable() {
                if (!((bitField0_ & 0x00000040) != 0)) {
                    geometryCollections_ = new java.util.ArrayList<GeometryCollection>(geometryCollections_);
                    bitField0_ |= 0x00000040;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    GeometryCollection, Builder, GeometryCollectionOrBuilder> geometryCollectionsBuilder_;

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public java.util.List<GeometryCollection> getGeometryCollectionsList() {
                if (geometryCollectionsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(geometryCollections_);
                } else {
                    return geometryCollectionsBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public int getGeometryCollectionsCount() {
                if (geometryCollectionsBuilder_ == null) {
                    return geometryCollections_.size();
                } else {
                    return geometryCollectionsBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public GeometryCollection getGeometryCollections(int index) {
                if (geometryCollectionsBuilder_ == null) {
                    return geometryCollections_.get(index);
                } else {
                    return geometryCollectionsBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder setGeometryCollections(
                    int index, @Nullable GeometryCollection value) {
                if (geometryCollectionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureGeometryCollectionsIsMutable();
                    geometryCollections_.set(index, value);
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder setGeometryCollections(
                    int index, @NotNull Builder builderForValue) {
                if (geometryCollectionsBuilder_ == null) {
                    ensureGeometryCollectionsIsMutable();
                    geometryCollections_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder addGeometryCollections(@Nullable GeometryCollection value) {
                if (geometryCollectionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureGeometryCollectionsIsMutable();
                    geometryCollections_.add(value);
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder addGeometryCollections(
                    int index, @Nullable GeometryCollection value) {
                if (geometryCollectionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureGeometryCollectionsIsMutable();
                    geometryCollections_.add(index, value);
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder addGeometryCollections(
                    @NotNull Builder builderForValue) {
                if (geometryCollectionsBuilder_ == null) {
                    ensureGeometryCollectionsIsMutable();
                    geometryCollections_.add(builderForValue.build());
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder addGeometryCollections(
                    int index, @NotNull Builder builderForValue) {
                if (geometryCollectionsBuilder_ == null) {
                    ensureGeometryCollectionsIsMutable();
                    geometryCollections_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder addAllGeometryCollections(
                    @NotNull Iterable<? extends GeometryCollection> values) {
                if (geometryCollectionsBuilder_ == null) {
                    ensureGeometryCollectionsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, geometryCollections_);
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder clearGeometryCollections() {
                if (geometryCollectionsBuilder_ == null) {
                    geometryCollections_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000040);
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public @NotNull Builder removeGeometryCollections(int index) {
                if (geometryCollectionsBuilder_ == null) {
                    ensureGeometryCollectionsIsMutable();
                    geometryCollections_.remove(index);
                    onChanged();
                } else {
                    geometryCollectionsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public Builder getGeometryCollectionsBuilder(
                    int index) {
                return getGeometryCollectionsFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public GeometryCollectionOrBuilder getGeometryCollectionsOrBuilder(
                    int index) {
                if (geometryCollectionsBuilder_ == null) {
                    return geometryCollections_.get(index);
                } else {
                    return geometryCollectionsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public java.util.List<? extends GeometryCollectionOrBuilder>
            getGeometryCollectionsOrBuilderList() {
                if (geometryCollectionsBuilder_ != null) {
                    return geometryCollectionsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(geometryCollections_);
                }
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public Builder addGeometryCollectionsBuilder() {
                return getGeometryCollectionsFieldBuilder().addBuilder(
                        GeometryCollection.getDefaultInstance());
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public Builder addGeometryCollectionsBuilder(
                    int index) {
                return getGeometryCollectionsFieldBuilder().addBuilder(
                        index, GeometryCollection.getDefaultInstance());
            }

            /**
             * <pre>
             * 允许嵌套
             * </pre>
             *
             * <code>repeated .pojo.GeometryCollection geometryCollections = 7;</code>
             */
            public java.util.List<Builder>
            getGeometryCollectionsBuilderList() {
                return getGeometryCollectionsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    GeometryCollection, Builder, GeometryCollectionOrBuilder>
            getGeometryCollectionsFieldBuilder() {
                if (geometryCollectionsBuilder_ == null) {
                    geometryCollectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            GeometryCollection, Builder, GeometryCollectionOrBuilder>(
                            geometryCollections_,
                            ((bitField0_ & 0x00000040) != 0),
                            getParentForChildren(),
                            isClean());
                    geometryCollections_ = null;
                }
                return geometryCollectionsBuilder_;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.GeometryCollection)
        }

        // @@protoc_insertion_point(class_scope:pojo.GeometryCollection)
        private static final @NotNull GeometryCollection DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new GeometryCollection();
        }

        public static GeometryCollection getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<GeometryCollection>
                PARSER = new com.google.protobuf.AbstractParser<GeometryCollection>() {
            @Override
            public @NotNull GeometryCollection parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new GeometryCollection(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<GeometryCollection> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<GeometryCollection> getParserForType() {
            return PARSER;
        }

        @Override
        public GeometryCollection getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface GeometryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.Geometry)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.pojo.Point point = 1;</code>
         *
         * @return Whether the point field is set.
         */
        boolean hasPoint();

        /**
         * <code>.pojo.Point point = 1;</code>
         *
         * @return The point.
         */
        Point getPoint();

        /**
         * <code>.pojo.Point point = 1;</code>
         */
        PointOrBuilder getPointOrBuilder();

        /**
         * <code>.pojo.LineString lineString = 2;</code>
         *
         * @return Whether the lineString field is set.
         */
        boolean hasLineString();

        /**
         * <code>.pojo.LineString lineString = 2;</code>
         *
         * @return The lineString.
         */
        LineString getLineString();

        /**
         * <code>.pojo.LineString lineString = 2;</code>
         */
        LineStringOrBuilder getLineStringOrBuilder();

        /**
         * <code>.pojo.Polygon polygon = 3;</code>
         *
         * @return Whether the polygon field is set.
         */
        boolean hasPolygon();

        /**
         * <code>.pojo.Polygon polygon = 3;</code>
         *
         * @return The polygon.
         */
        Polygon getPolygon();

        /**
         * <code>.pojo.Polygon polygon = 3;</code>
         */
        PolygonOrBuilder getPolygonOrBuilder();

        /**
         * <code>.pojo.MultiPoint multiPoint = 4;</code>
         *
         * @return Whether the multiPoint field is set.
         */
        boolean hasMultiPoint();

        /**
         * <code>.pojo.MultiPoint multiPoint = 4;</code>
         *
         * @return The multiPoint.
         */
        MultiPoint getMultiPoint();

        /**
         * <code>.pojo.MultiPoint multiPoint = 4;</code>
         */
        MultiPointOrBuilder getMultiPointOrBuilder();

        /**
         * <code>.pojo.MultiLineString multiLineString = 5;</code>
         *
         * @return Whether the multiLineString field is set.
         */
        boolean hasMultiLineString();

        /**
         * <code>.pojo.MultiLineString multiLineString = 5;</code>
         *
         * @return The multiLineString.
         */
        MultiLineString getMultiLineString();

        /**
         * <code>.pojo.MultiLineString multiLineString = 5;</code>
         */
        MultiLineStringOrBuilder getMultiLineStringOrBuilder();

        /**
         * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
         *
         * @return Whether the multiPolygon field is set.
         */
        boolean hasMultiPolygon();

        /**
         * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
         *
         * @return The multiPolygon.
         */
        MultiPolygon getMultiPolygon();

        /**
         * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
         */
        MultiPolygonOrBuilder getMultiPolygonOrBuilder();

        /**
         * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
         *
         * @return Whether the geometryCollection field is set.
         */
        boolean hasGeometryCollection();

        /**
         * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
         *
         * @return The geometryCollection.
         */
        GeometryCollection getGeometryCollection();

        /**
         * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
         */
        GeometryCollectionOrBuilder getGeometryCollectionOrBuilder();

        /**
         * <code>.pojo.NullGeometry nullGeometry = 8;</code>
         *
         * @return Whether the nullGeometry field is set.
         */
        boolean hasNullGeometry();

        /**
         * <code>.pojo.NullGeometry nullGeometry = 8;</code>
         *
         * @return The nullGeometry.
         */
        NullGeometry getNullGeometry();

        /**
         * <code>.pojo.NullGeometry nullGeometry = 8;</code>
         */
        NullGeometryOrBuilder getNullGeometryOrBuilder();
    }

    /**
     * <pre>
     * geometry 包含了所有jts规范中所罗列的Geometry类型 每个Geometry允许且仅允许其中一种对象非空
     * </pre>
     * <p>
     * Protobuf type {@code pojo.Geometry}
     */
    public static final class Geometry extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.Geometry)
            GeometryOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use Geometry.newBuilder() to construct.
        private Geometry(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private Geometry() {
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new Geometry();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private Geometry(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            Point.Builder subBuilder = null;
                            if (point_ != null) {
                                subBuilder = point_.toBuilder();
                            }
                            point_ = input.readMessage(Point.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(point_);
                                point_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            LineString.Builder subBuilder = null;
                            if (lineString_ != null) {
                                subBuilder = lineString_.toBuilder();
                            }
                            lineString_ = input.readMessage(LineString.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(lineString_);
                                lineString_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 26: {
                            Polygon.Builder subBuilder = null;
                            if (polygon_ != null) {
                                subBuilder = polygon_.toBuilder();
                            }
                            polygon_ = input.readMessage(Polygon.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(polygon_);
                                polygon_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 34: {
                            MultiPoint.Builder subBuilder = null;
                            if (multiPoint_ != null) {
                                subBuilder = multiPoint_.toBuilder();
                            }
                            multiPoint_ = input.readMessage(MultiPoint.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(multiPoint_);
                                multiPoint_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 42: {
                            MultiLineString.Builder subBuilder = null;
                            if (multiLineString_ != null) {
                                subBuilder = multiLineString_.toBuilder();
                            }
                            multiLineString_ = input.readMessage(MultiLineString.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(multiLineString_);
                                multiLineString_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 50: {
                            MultiPolygon.Builder subBuilder = null;
                            if (multiPolygon_ != null) {
                                subBuilder = multiPolygon_.toBuilder();
                            }
                            multiPolygon_ = input.readMessage(MultiPolygon.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(multiPolygon_);
                                multiPolygon_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 58: {
                            GeometryCollection.Builder subBuilder = null;
                            if (geometryCollection_ != null) {
                                subBuilder = geometryCollection_.toBuilder();
                            }
                            geometryCollection_ = input.readMessage(GeometryCollection.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(geometryCollection_);
                                geometryCollection_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 66: {
                            NullGeometry.Builder subBuilder = null;
                            if (nullGeometry_ != null) {
                                subBuilder = nullGeometry_.toBuilder();
                            }
                            nullGeometry_ = input.readMessage(NullGeometry.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(nullGeometry_);
                                nullGeometry_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_Geometry_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_Geometry_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Geometry.class, Builder.class);
        }

        public static final int POINT_FIELD_NUMBER = 1;
        private Point point_;

        /**
         * <code>.pojo.Point point = 1;</code>
         *
         * @return Whether the point field is set.
         */
        @Override
        public boolean hasPoint() {
            return point_ != null;
        }

        /**
         * <code>.pojo.Point point = 1;</code>
         *
         * @return The point.
         */
        @Override
        public Point getPoint() {
            return point_ == null ? Point.getDefaultInstance() : point_;
        }

        /**
         * <code>.pojo.Point point = 1;</code>
         */
        @Override
        public @NotNull PointOrBuilder getPointOrBuilder() {
            return getPoint();
        }

        public static final int LINESTRING_FIELD_NUMBER = 2;
        private LineString lineString_;

        /**
         * <code>.pojo.LineString lineString = 2;</code>
         *
         * @return Whether the lineString field is set.
         */
        @Override
        public boolean hasLineString() {
            return lineString_ != null;
        }

        /**
         * <code>.pojo.LineString lineString = 2;</code>
         *
         * @return The lineString.
         */
        @Override
        public LineString getLineString() {
            return lineString_ == null ? LineString.getDefaultInstance() : lineString_;
        }

        /**
         * <code>.pojo.LineString lineString = 2;</code>
         */
        @Override
        public @NotNull LineStringOrBuilder getLineStringOrBuilder() {
            return getLineString();
        }

        public static final int POLYGON_FIELD_NUMBER = 3;
        private Polygon polygon_;

        /**
         * <code>.pojo.Polygon polygon = 3;</code>
         *
         * @return Whether the polygon field is set.
         */
        @Override
        public boolean hasPolygon() {
            return polygon_ != null;
        }

        /**
         * <code>.pojo.Polygon polygon = 3;</code>
         *
         * @return The polygon.
         */
        @Override
        public Polygon getPolygon() {
            return polygon_ == null ? Polygon.getDefaultInstance() : polygon_;
        }

        /**
         * <code>.pojo.Polygon polygon = 3;</code>
         */
        @Override
        public @NotNull PolygonOrBuilder getPolygonOrBuilder() {
            return getPolygon();
        }

        public static final int MULTIPOINT_FIELD_NUMBER = 4;
        private MultiPoint multiPoint_;

        /**
         * <code>.pojo.MultiPoint multiPoint = 4;</code>
         *
         * @return Whether the multiPoint field is set.
         */
        @Override
        public boolean hasMultiPoint() {
            return multiPoint_ != null;
        }

        /**
         * <code>.pojo.MultiPoint multiPoint = 4;</code>
         *
         * @return The multiPoint.
         */
        @Override
        public MultiPoint getMultiPoint() {
            return multiPoint_ == null ? MultiPoint.getDefaultInstance() : multiPoint_;
        }

        /**
         * <code>.pojo.MultiPoint multiPoint = 4;</code>
         */
        @Override
        public @NotNull MultiPointOrBuilder getMultiPointOrBuilder() {
            return getMultiPoint();
        }

        public static final int MULTILINESTRING_FIELD_NUMBER = 5;
        private MultiLineString multiLineString_;

        /**
         * <code>.pojo.MultiLineString multiLineString = 5;</code>
         *
         * @return Whether the multiLineString field is set.
         */
        @Override
        public boolean hasMultiLineString() {
            return multiLineString_ != null;
        }

        /**
         * <code>.pojo.MultiLineString multiLineString = 5;</code>
         *
         * @return The multiLineString.
         */
        @Override
        public MultiLineString getMultiLineString() {
            return multiLineString_ == null ? MultiLineString.getDefaultInstance() : multiLineString_;
        }

        /**
         * <code>.pojo.MultiLineString multiLineString = 5;</code>
         */
        @Override
        public @NotNull MultiLineStringOrBuilder getMultiLineStringOrBuilder() {
            return getMultiLineString();
        }

        public static final int MULTIPOLYGON_FIELD_NUMBER = 6;
        private MultiPolygon multiPolygon_;

        /**
         * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
         *
         * @return Whether the multiPolygon field is set.
         */
        @Override
        public boolean hasMultiPolygon() {
            return multiPolygon_ != null;
        }

        /**
         * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
         *
         * @return The multiPolygon.
         */
        @Override
        public MultiPolygon getMultiPolygon() {
            return multiPolygon_ == null ? MultiPolygon.getDefaultInstance() : multiPolygon_;
        }

        /**
         * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
         */
        @Override
        public @NotNull MultiPolygonOrBuilder getMultiPolygonOrBuilder() {
            return getMultiPolygon();
        }

        public static final int GEOMETRYCOLLECTION_FIELD_NUMBER = 7;
        private GeometryCollection geometryCollection_;

        /**
         * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
         *
         * @return Whether the geometryCollection field is set.
         */
        @Override
        public boolean hasGeometryCollection() {
            return geometryCollection_ != null;
        }

        /**
         * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
         *
         * @return The geometryCollection.
         */
        @Override
        public GeometryCollection getGeometryCollection() {
            return geometryCollection_ == null ? GeometryCollection.getDefaultInstance() : geometryCollection_;
        }

        /**
         * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
         */
        @Override
        public @NotNull GeometryCollectionOrBuilder getGeometryCollectionOrBuilder() {
            return getGeometryCollection();
        }

        public static final int NULLGEOMETRY_FIELD_NUMBER = 8;
        private NullGeometry nullGeometry_;

        /**
         * <code>.pojo.NullGeometry nullGeometry = 8;</code>
         *
         * @return Whether the nullGeometry field is set.
         */
        @Override
        public boolean hasNullGeometry() {
            return nullGeometry_ != null;
        }

        /**
         * <code>.pojo.NullGeometry nullGeometry = 8;</code>
         *
         * @return The nullGeometry.
         */
        @Override
        public NullGeometry getNullGeometry() {
            return nullGeometry_ == null ? NullGeometry.getDefaultInstance() : nullGeometry_;
        }

        /**
         * <code>.pojo.NullGeometry nullGeometry = 8;</code>
         */
        @Override
        public @NotNull NullGeometryOrBuilder getNullGeometryOrBuilder() {
            return getNullGeometry();
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            if (point_ != null) {
                output.writeMessage(1, getPoint());
            }
            if (lineString_ != null) {
                output.writeMessage(2, getLineString());
            }
            if (polygon_ != null) {
                output.writeMessage(3, getPolygon());
            }
            if (multiPoint_ != null) {
                output.writeMessage(4, getMultiPoint());
            }
            if (multiLineString_ != null) {
                output.writeMessage(5, getMultiLineString());
            }
            if (multiPolygon_ != null) {
                output.writeMessage(6, getMultiPolygon());
            }
            if (geometryCollection_ != null) {
                output.writeMessage(7, getGeometryCollection());
            }
            if (nullGeometry_ != null) {
                output.writeMessage(8, getNullGeometry());
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (point_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getPoint());
            }
            if (lineString_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getLineString());
            }
            if (polygon_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getPolygon());
            }
            if (multiPoint_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, getMultiPoint());
            }
            if (multiLineString_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, getMultiLineString());
            }
            if (multiPolygon_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, getMultiPolygon());
            }
            if (geometryCollection_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, getGeometryCollection());
            }
            if (nullGeometry_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, getNullGeometry());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Geometry)) {
                return super.equals(obj);
            }
            Geometry other = (Geometry) obj;

            if (hasPoint() != other.hasPoint()) return false;
            if (hasPoint()) {
                if (!getPoint()
                        .equals(other.getPoint())) return false;
            }
            if (hasLineString() != other.hasLineString()) return false;
            if (hasLineString()) {
                if (!getLineString()
                        .equals(other.getLineString())) return false;
            }
            if (hasPolygon() != other.hasPolygon()) return false;
            if (hasPolygon()) {
                if (!getPolygon()
                        .equals(other.getPolygon())) return false;
            }
            if (hasMultiPoint() != other.hasMultiPoint()) return false;
            if (hasMultiPoint()) {
                if (!getMultiPoint()
                        .equals(other.getMultiPoint())) return false;
            }
            if (hasMultiLineString() != other.hasMultiLineString()) return false;
            if (hasMultiLineString()) {
                if (!getMultiLineString()
                        .equals(other.getMultiLineString())) return false;
            }
            if (hasMultiPolygon() != other.hasMultiPolygon()) return false;
            if (hasMultiPolygon()) {
                if (!getMultiPolygon()
                        .equals(other.getMultiPolygon())) return false;
            }
            if (hasGeometryCollection() != other.hasGeometryCollection()) return false;
            if (hasGeometryCollection()) {
                if (!getGeometryCollection()
                        .equals(other.getGeometryCollection())) return false;
            }
            if (hasNullGeometry() != other.hasNullGeometry()) return false;
            if (hasNullGeometry()) {
                if (!getNullGeometry()
                        .equals(other.getNullGeometry())) return false;
            }
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasPoint()) {
                hash = (37 * hash) + POINT_FIELD_NUMBER;
                hash = (53 * hash) + getPoint().hashCode();
            }
            if (hasLineString()) {
                hash = (37 * hash) + LINESTRING_FIELD_NUMBER;
                hash = (53 * hash) + getLineString().hashCode();
            }
            if (hasPolygon()) {
                hash = (37 * hash) + POLYGON_FIELD_NUMBER;
                hash = (53 * hash) + getPolygon().hashCode();
            }
            if (hasMultiPoint()) {
                hash = (37 * hash) + MULTIPOINT_FIELD_NUMBER;
                hash = (53 * hash) + getMultiPoint().hashCode();
            }
            if (hasMultiLineString()) {
                hash = (37 * hash) + MULTILINESTRING_FIELD_NUMBER;
                hash = (53 * hash) + getMultiLineString().hashCode();
            }
            if (hasMultiPolygon()) {
                hash = (37 * hash) + MULTIPOLYGON_FIELD_NUMBER;
                hash = (53 * hash) + getMultiPolygon().hashCode();
            }
            if (hasGeometryCollection()) {
                hash = (37 * hash) + GEOMETRYCOLLECTION_FIELD_NUMBER;
                hash = (53 * hash) + getGeometryCollection().hashCode();
            }
            if (hasNullGeometry()) {
                hash = (37 * hash) + NULLGEOMETRY_FIELD_NUMBER;
                hash = (53 * hash) + getNullGeometry().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Geometry parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Geometry parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Geometry parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Geometry parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Geometry parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Geometry parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Geometry parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Geometry parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Geometry parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Geometry parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Geometry parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Geometry parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull Geometry prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * geometry 包含了所有jts规范中所罗列的Geometry类型 每个Geometry允许且仅允许其中一种对象非空
         * </pre>
         * <p>
         * Protobuf type {@code pojo.Geometry}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.Geometry)
                GeometryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_Geometry_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_Geometry_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Geometry.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.Geometry.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                if (pointBuilder_ == null) {
                    point_ = null;
                } else {
                    point_ = null;
                    pointBuilder_ = null;
                }
                if (lineStringBuilder_ == null) {
                    lineString_ = null;
                } else {
                    lineString_ = null;
                    lineStringBuilder_ = null;
                }
                if (polygonBuilder_ == null) {
                    polygon_ = null;
                } else {
                    polygon_ = null;
                    polygonBuilder_ = null;
                }
                if (multiPointBuilder_ == null) {
                    multiPoint_ = null;
                } else {
                    multiPoint_ = null;
                    multiPointBuilder_ = null;
                }
                if (multiLineStringBuilder_ == null) {
                    multiLineString_ = null;
                } else {
                    multiLineString_ = null;
                    multiLineStringBuilder_ = null;
                }
                if (multiPolygonBuilder_ == null) {
                    multiPolygon_ = null;
                } else {
                    multiPolygon_ = null;
                    multiPolygonBuilder_ = null;
                }
                if (geometryCollectionBuilder_ == null) {
                    geometryCollection_ = null;
                } else {
                    geometryCollection_ = null;
                    geometryCollectionBuilder_ = null;
                }
                if (nullGeometryBuilder_ == null) {
                    nullGeometry_ = null;
                } else {
                    nullGeometry_ = null;
                    nullGeometryBuilder_ = null;
                }
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_Geometry_descriptor;
            }

            @Override
            public Geometry getDefaultInstanceForType() {
                return Geometry.getDefaultInstance();
            }

            @Override
            public @NotNull Geometry build() {
                Geometry result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull Geometry buildPartial() {
                Geometry result = new Geometry(this);
                if (pointBuilder_ == null) {
                    result.point_ = point_;
                } else {
                    result.point_ = pointBuilder_.build();
                }
                if (lineStringBuilder_ == null) {
                    result.lineString_ = lineString_;
                } else {
                    result.lineString_ = lineStringBuilder_.build();
                }
                if (polygonBuilder_ == null) {
                    result.polygon_ = polygon_;
                } else {
                    result.polygon_ = polygonBuilder_.build();
                }
                if (multiPointBuilder_ == null) {
                    result.multiPoint_ = multiPoint_;
                } else {
                    result.multiPoint_ = multiPointBuilder_.build();
                }
                if (multiLineStringBuilder_ == null) {
                    result.multiLineString_ = multiLineString_;
                } else {
                    result.multiLineString_ = multiLineStringBuilder_.build();
                }
                if (multiPolygonBuilder_ == null) {
                    result.multiPolygon_ = multiPolygon_;
                } else {
                    result.multiPolygon_ = multiPolygonBuilder_.build();
                }
                if (geometryCollectionBuilder_ == null) {
                    result.geometryCollection_ = geometryCollection_;
                } else {
                    result.geometryCollection_ = geometryCollectionBuilder_.build();
                }
                if (nullGeometryBuilder_ == null) {
                    result.nullGeometry_ = nullGeometry_;
                } else {
                    result.nullGeometry_ = nullGeometryBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Geometry) {
                    return mergeFrom((Geometry) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull Geometry other) {
                if (other == Geometry.getDefaultInstance()) return this;
                if (other.hasPoint()) {
                    mergePoint(other.getPoint());
                }
                if (other.hasLineString()) {
                    mergeLineString(other.getLineString());
                }
                if (other.hasPolygon()) {
                    mergePolygon(other.getPolygon());
                }
                if (other.hasMultiPoint()) {
                    mergeMultiPoint(other.getMultiPoint());
                }
                if (other.hasMultiLineString()) {
                    mergeMultiLineString(other.getMultiLineString());
                }
                if (other.hasMultiPolygon()) {
                    mergeMultiPolygon(other.getMultiPolygon());
                }
                if (other.hasGeometryCollection()) {
                    mergeGeometryCollection(other.getGeometryCollection());
                }
                if (other.hasNullGeometry()) {
                    mergeNullGeometry(other.getNullGeometry());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Geometry parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Geometry) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private @Nullable Point point_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    Point, Point.Builder, PointOrBuilder> pointBuilder_;

            /**
             * <code>.pojo.Point point = 1;</code>
             *
             * @return Whether the point field is set.
             */
            public boolean hasPoint() {
                return pointBuilder_ != null || point_ != null;
            }

            /**
             * <code>.pojo.Point point = 1;</code>
             *
             * @return The point.
             */
            public Point getPoint() {
                if (pointBuilder_ == null) {
                    return point_ == null ? Point.getDefaultInstance() : point_;
                } else {
                    return pointBuilder_.getMessage();
                }
            }

            /**
             * <code>.pojo.Point point = 1;</code>
             */
            public @NotNull Builder setPoint(@Nullable Point value) {
                if (pointBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    point_ = value;
                    onChanged();
                } else {
                    pointBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.pojo.Point point = 1;</code>
             */
            public @NotNull Builder setPoint(
                    Point.@NotNull Builder builderForValue) {
                if (pointBuilder_ == null) {
                    point_ = builderForValue.build();
                    onChanged();
                } else {
                    pointBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.pojo.Point point = 1;</code>
             */
            public @NotNull Builder mergePoint(@NotNull Point value) {
                if (pointBuilder_ == null) {
                    if (point_ != null) {
                        point_ =
                                Point.newBuilder(point_).mergeFrom(value).buildPartial();
                    } else {
                        point_ = value;
                    }
                    onChanged();
                } else {
                    pointBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.pojo.Point point = 1;</code>
             */
            public @NotNull Builder clearPoint() {
                if (pointBuilder_ == null) {
                    point_ = null;
                    onChanged();
                } else {
                    point_ = null;
                    pointBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.pojo.Point point = 1;</code>
             */
            public Point.Builder getPointBuilder() {

                onChanged();
                return getPointFieldBuilder().getBuilder();
            }

            /**
             * <code>.pojo.Point point = 1;</code>
             */
            public PointOrBuilder getPointOrBuilder() {
                if (pointBuilder_ != null) {
                    return pointBuilder_.getMessageOrBuilder();
                } else {
                    return point_ == null ?
                            Point.getDefaultInstance() : point_;
                }
            }

            /**
             * <code>.pojo.Point point = 1;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    Point, Point.Builder, PointOrBuilder>
            getPointFieldBuilder() {
                if (pointBuilder_ == null) {
                    pointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Point, Point.Builder, PointOrBuilder>(
                            getPoint(),
                            getParentForChildren(),
                            isClean());
                    point_ = null;
                }
                return pointBuilder_;
            }

            private @Nullable LineString lineString_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    LineString, LineString.Builder, LineStringOrBuilder> lineStringBuilder_;

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             *
             * @return Whether the lineString field is set.
             */
            public boolean hasLineString() {
                return lineStringBuilder_ != null || lineString_ != null;
            }

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             *
             * @return The lineString.
             */
            public LineString getLineString() {
                if (lineStringBuilder_ == null) {
                    return lineString_ == null ? LineString.getDefaultInstance() : lineString_;
                } else {
                    return lineStringBuilder_.getMessage();
                }
            }

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             */
            public @NotNull Builder setLineString(@Nullable LineString value) {
                if (lineStringBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    lineString_ = value;
                    onChanged();
                } else {
                    lineStringBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             */
            public @NotNull Builder setLineString(
                    LineString.@NotNull Builder builderForValue) {
                if (lineStringBuilder_ == null) {
                    lineString_ = builderForValue.build();
                    onChanged();
                } else {
                    lineStringBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             */
            public @NotNull Builder mergeLineString(@NotNull LineString value) {
                if (lineStringBuilder_ == null) {
                    if (lineString_ != null) {
                        lineString_ =
                                LineString.newBuilder(lineString_).mergeFrom(value).buildPartial();
                    } else {
                        lineString_ = value;
                    }
                    onChanged();
                } else {
                    lineStringBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             */
            public @NotNull Builder clearLineString() {
                if (lineStringBuilder_ == null) {
                    lineString_ = null;
                    onChanged();
                } else {
                    lineString_ = null;
                    lineStringBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             */
            public LineString.Builder getLineStringBuilder() {

                onChanged();
                return getLineStringFieldBuilder().getBuilder();
            }

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             */
            public LineStringOrBuilder getLineStringOrBuilder() {
                if (lineStringBuilder_ != null) {
                    return lineStringBuilder_.getMessageOrBuilder();
                } else {
                    return lineString_ == null ?
                            LineString.getDefaultInstance() : lineString_;
                }
            }

            /**
             * <code>.pojo.LineString lineString = 2;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    LineString, LineString.Builder, LineStringOrBuilder>
            getLineStringFieldBuilder() {
                if (lineStringBuilder_ == null) {
                    lineStringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            LineString, LineString.Builder, LineStringOrBuilder>(
                            getLineString(),
                            getParentForChildren(),
                            isClean());
                    lineString_ = null;
                }
                return lineStringBuilder_;
            }

            private @Nullable Polygon polygon_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    Polygon, Polygon.Builder, PolygonOrBuilder> polygonBuilder_;

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             *
             * @return Whether the polygon field is set.
             */
            public boolean hasPolygon() {
                return polygonBuilder_ != null || polygon_ != null;
            }

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             *
             * @return The polygon.
             */
            public Polygon getPolygon() {
                if (polygonBuilder_ == null) {
                    return polygon_ == null ? Polygon.getDefaultInstance() : polygon_;
                } else {
                    return polygonBuilder_.getMessage();
                }
            }

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             */
            public @NotNull Builder setPolygon(@Nullable Polygon value) {
                if (polygonBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    polygon_ = value;
                    onChanged();
                } else {
                    polygonBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             */
            public @NotNull Builder setPolygon(
                    Polygon.@NotNull Builder builderForValue) {
                if (polygonBuilder_ == null) {
                    polygon_ = builderForValue.build();
                    onChanged();
                } else {
                    polygonBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             */
            public @NotNull Builder mergePolygon(@NotNull Polygon value) {
                if (polygonBuilder_ == null) {
                    if (polygon_ != null) {
                        polygon_ =
                                Polygon.newBuilder(polygon_).mergeFrom(value).buildPartial();
                    } else {
                        polygon_ = value;
                    }
                    onChanged();
                } else {
                    polygonBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             */
            public @NotNull Builder clearPolygon() {
                if (polygonBuilder_ == null) {
                    polygon_ = null;
                    onChanged();
                } else {
                    polygon_ = null;
                    polygonBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             */
            public Polygon.Builder getPolygonBuilder() {

                onChanged();
                return getPolygonFieldBuilder().getBuilder();
            }

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             */
            public PolygonOrBuilder getPolygonOrBuilder() {
                if (polygonBuilder_ != null) {
                    return polygonBuilder_.getMessageOrBuilder();
                } else {
                    return polygon_ == null ?
                            Polygon.getDefaultInstance() : polygon_;
                }
            }

            /**
             * <code>.pojo.Polygon polygon = 3;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    Polygon, Polygon.Builder, PolygonOrBuilder>
            getPolygonFieldBuilder() {
                if (polygonBuilder_ == null) {
                    polygonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Polygon, Polygon.Builder, PolygonOrBuilder>(
                            getPolygon(),
                            getParentForChildren(),
                            isClean());
                    polygon_ = null;
                }
                return polygonBuilder_;
            }

            private @Nullable MultiPoint multiPoint_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    MultiPoint, MultiPoint.Builder, MultiPointOrBuilder> multiPointBuilder_;

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             *
             * @return Whether the multiPoint field is set.
             */
            public boolean hasMultiPoint() {
                return multiPointBuilder_ != null || multiPoint_ != null;
            }

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             *
             * @return The multiPoint.
             */
            public MultiPoint getMultiPoint() {
                if (multiPointBuilder_ == null) {
                    return multiPoint_ == null ? MultiPoint.getDefaultInstance() : multiPoint_;
                } else {
                    return multiPointBuilder_.getMessage();
                }
            }

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             */
            public @NotNull Builder setMultiPoint(@Nullable MultiPoint value) {
                if (multiPointBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    multiPoint_ = value;
                    onChanged();
                } else {
                    multiPointBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             */
            public @NotNull Builder setMultiPoint(
                    MultiPoint.@NotNull Builder builderForValue) {
                if (multiPointBuilder_ == null) {
                    multiPoint_ = builderForValue.build();
                    onChanged();
                } else {
                    multiPointBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             */
            public @NotNull Builder mergeMultiPoint(@NotNull MultiPoint value) {
                if (multiPointBuilder_ == null) {
                    if (multiPoint_ != null) {
                        multiPoint_ =
                                MultiPoint.newBuilder(multiPoint_).mergeFrom(value).buildPartial();
                    } else {
                        multiPoint_ = value;
                    }
                    onChanged();
                } else {
                    multiPointBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             */
            public @NotNull Builder clearMultiPoint() {
                if (multiPointBuilder_ == null) {
                    multiPoint_ = null;
                    onChanged();
                } else {
                    multiPoint_ = null;
                    multiPointBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             */
            public MultiPoint.Builder getMultiPointBuilder() {

                onChanged();
                return getMultiPointFieldBuilder().getBuilder();
            }

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             */
            public MultiPointOrBuilder getMultiPointOrBuilder() {
                if (multiPointBuilder_ != null) {
                    return multiPointBuilder_.getMessageOrBuilder();
                } else {
                    return multiPoint_ == null ?
                            MultiPoint.getDefaultInstance() : multiPoint_;
                }
            }

            /**
             * <code>.pojo.MultiPoint multiPoint = 4;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    MultiPoint, MultiPoint.Builder, MultiPointOrBuilder>
            getMultiPointFieldBuilder() {
                if (multiPointBuilder_ == null) {
                    multiPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            MultiPoint, MultiPoint.Builder, MultiPointOrBuilder>(
                            getMultiPoint(),
                            getParentForChildren(),
                            isClean());
                    multiPoint_ = null;
                }
                return multiPointBuilder_;
            }

            private @Nullable MultiLineString multiLineString_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    MultiLineString, MultiLineString.Builder, MultiLineStringOrBuilder> multiLineStringBuilder_;

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             *
             * @return Whether the multiLineString field is set.
             */
            public boolean hasMultiLineString() {
                return multiLineStringBuilder_ != null || multiLineString_ != null;
            }

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             *
             * @return The multiLineString.
             */
            public MultiLineString getMultiLineString() {
                if (multiLineStringBuilder_ == null) {
                    return multiLineString_ == null ? MultiLineString.getDefaultInstance() : multiLineString_;
                } else {
                    return multiLineStringBuilder_.getMessage();
                }
            }

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             */
            public @NotNull Builder setMultiLineString(@Nullable MultiLineString value) {
                if (multiLineStringBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    multiLineString_ = value;
                    onChanged();
                } else {
                    multiLineStringBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             */
            public @NotNull Builder setMultiLineString(
                    MultiLineString.@NotNull Builder builderForValue) {
                if (multiLineStringBuilder_ == null) {
                    multiLineString_ = builderForValue.build();
                    onChanged();
                } else {
                    multiLineStringBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             */
            public @NotNull Builder mergeMultiLineString(@NotNull MultiLineString value) {
                if (multiLineStringBuilder_ == null) {
                    if (multiLineString_ != null) {
                        multiLineString_ =
                                MultiLineString.newBuilder(multiLineString_).mergeFrom(value).buildPartial();
                    } else {
                        multiLineString_ = value;
                    }
                    onChanged();
                } else {
                    multiLineStringBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             */
            public @NotNull Builder clearMultiLineString() {
                if (multiLineStringBuilder_ == null) {
                    multiLineString_ = null;
                    onChanged();
                } else {
                    multiLineString_ = null;
                    multiLineStringBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             */
            public MultiLineString.Builder getMultiLineStringBuilder() {

                onChanged();
                return getMultiLineStringFieldBuilder().getBuilder();
            }

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             */
            public MultiLineStringOrBuilder getMultiLineStringOrBuilder() {
                if (multiLineStringBuilder_ != null) {
                    return multiLineStringBuilder_.getMessageOrBuilder();
                } else {
                    return multiLineString_ == null ?
                            MultiLineString.getDefaultInstance() : multiLineString_;
                }
            }

            /**
             * <code>.pojo.MultiLineString multiLineString = 5;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    MultiLineString, MultiLineString.Builder, MultiLineStringOrBuilder>
            getMultiLineStringFieldBuilder() {
                if (multiLineStringBuilder_ == null) {
                    multiLineStringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            MultiLineString, MultiLineString.Builder, MultiLineStringOrBuilder>(
                            getMultiLineString(),
                            getParentForChildren(),
                            isClean());
                    multiLineString_ = null;
                }
                return multiLineStringBuilder_;
            }

            private @Nullable MultiPolygon multiPolygon_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    MultiPolygon, MultiPolygon.Builder, MultiPolygonOrBuilder> multiPolygonBuilder_;

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             *
             * @return Whether the multiPolygon field is set.
             */
            public boolean hasMultiPolygon() {
                return multiPolygonBuilder_ != null || multiPolygon_ != null;
            }

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             *
             * @return The multiPolygon.
             */
            public MultiPolygon getMultiPolygon() {
                if (multiPolygonBuilder_ == null) {
                    return multiPolygon_ == null ? MultiPolygon.getDefaultInstance() : multiPolygon_;
                } else {
                    return multiPolygonBuilder_.getMessage();
                }
            }

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             */
            public @NotNull Builder setMultiPolygon(@Nullable MultiPolygon value) {
                if (multiPolygonBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    multiPolygon_ = value;
                    onChanged();
                } else {
                    multiPolygonBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             */
            public @NotNull Builder setMultiPolygon(
                    MultiPolygon.@NotNull Builder builderForValue) {
                if (multiPolygonBuilder_ == null) {
                    multiPolygon_ = builderForValue.build();
                    onChanged();
                } else {
                    multiPolygonBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             */
            public @NotNull Builder mergeMultiPolygon(@NotNull MultiPolygon value) {
                if (multiPolygonBuilder_ == null) {
                    if (multiPolygon_ != null) {
                        multiPolygon_ =
                                MultiPolygon.newBuilder(multiPolygon_).mergeFrom(value).buildPartial();
                    } else {
                        multiPolygon_ = value;
                    }
                    onChanged();
                } else {
                    multiPolygonBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             */
            public @NotNull Builder clearMultiPolygon() {
                if (multiPolygonBuilder_ == null) {
                    multiPolygon_ = null;
                    onChanged();
                } else {
                    multiPolygon_ = null;
                    multiPolygonBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             */
            public MultiPolygon.Builder getMultiPolygonBuilder() {

                onChanged();
                return getMultiPolygonFieldBuilder().getBuilder();
            }

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             */
            public MultiPolygonOrBuilder getMultiPolygonOrBuilder() {
                if (multiPolygonBuilder_ != null) {
                    return multiPolygonBuilder_.getMessageOrBuilder();
                } else {
                    return multiPolygon_ == null ?
                            MultiPolygon.getDefaultInstance() : multiPolygon_;
                }
            }

            /**
             * <code>.pojo.MultiPolygon multiPolygon = 6;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    MultiPolygon, MultiPolygon.Builder, MultiPolygonOrBuilder>
            getMultiPolygonFieldBuilder() {
                if (multiPolygonBuilder_ == null) {
                    multiPolygonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            MultiPolygon, MultiPolygon.Builder, MultiPolygonOrBuilder>(
                            getMultiPolygon(),
                            getParentForChildren(),
                            isClean());
                    multiPolygon_ = null;
                }
                return multiPolygonBuilder_;
            }

            private @Nullable GeometryCollection geometryCollection_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    GeometryCollection, GeometryCollection.Builder, GeometryCollectionOrBuilder> geometryCollectionBuilder_;

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             *
             * @return Whether the geometryCollection field is set.
             */
            public boolean hasGeometryCollection() {
                return geometryCollectionBuilder_ != null || geometryCollection_ != null;
            }

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             *
             * @return The geometryCollection.
             */
            public GeometryCollection getGeometryCollection() {
                if (geometryCollectionBuilder_ == null) {
                    return geometryCollection_ == null ? GeometryCollection.getDefaultInstance() : geometryCollection_;
                } else {
                    return geometryCollectionBuilder_.getMessage();
                }
            }

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             */
            public @NotNull Builder setGeometryCollection(@Nullable GeometryCollection value) {
                if (geometryCollectionBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    geometryCollection_ = value;
                    onChanged();
                } else {
                    geometryCollectionBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             */
            public @NotNull Builder setGeometryCollection(
                    GeometryCollection.@NotNull Builder builderForValue) {
                if (geometryCollectionBuilder_ == null) {
                    geometryCollection_ = builderForValue.build();
                    onChanged();
                } else {
                    geometryCollectionBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             */
            public @NotNull Builder mergeGeometryCollection(@NotNull GeometryCollection value) {
                if (geometryCollectionBuilder_ == null) {
                    if (geometryCollection_ != null) {
                        geometryCollection_ =
                                GeometryCollection.newBuilder(geometryCollection_).mergeFrom(value).buildPartial();
                    } else {
                        geometryCollection_ = value;
                    }
                    onChanged();
                } else {
                    geometryCollectionBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             */
            public @NotNull Builder clearGeometryCollection() {
                if (geometryCollectionBuilder_ == null) {
                    geometryCollection_ = null;
                    onChanged();
                } else {
                    geometryCollection_ = null;
                    geometryCollectionBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             */
            public GeometryCollection.Builder getGeometryCollectionBuilder() {

                onChanged();
                return getGeometryCollectionFieldBuilder().getBuilder();
            }

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             */
            public GeometryCollectionOrBuilder getGeometryCollectionOrBuilder() {
                if (geometryCollectionBuilder_ != null) {
                    return geometryCollectionBuilder_.getMessageOrBuilder();
                } else {
                    return geometryCollection_ == null ?
                            GeometryCollection.getDefaultInstance() : geometryCollection_;
                }
            }

            /**
             * <code>.pojo.GeometryCollection geometryCollection = 7;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    GeometryCollection, GeometryCollection.Builder, GeometryCollectionOrBuilder>
            getGeometryCollectionFieldBuilder() {
                if (geometryCollectionBuilder_ == null) {
                    geometryCollectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            GeometryCollection, GeometryCollection.Builder, GeometryCollectionOrBuilder>(
                            getGeometryCollection(),
                            getParentForChildren(),
                            isClean());
                    geometryCollection_ = null;
                }
                return geometryCollectionBuilder_;
            }

            private @Nullable NullGeometry nullGeometry_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    NullGeometry, NullGeometry.Builder, NullGeometryOrBuilder> nullGeometryBuilder_;

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             *
             * @return Whether the nullGeometry field is set.
             */
            public boolean hasNullGeometry() {
                return nullGeometryBuilder_ != null || nullGeometry_ != null;
            }

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             *
             * @return The nullGeometry.
             */
            public NullGeometry getNullGeometry() {
                if (nullGeometryBuilder_ == null) {
                    return nullGeometry_ == null ? NullGeometry.getDefaultInstance() : nullGeometry_;
                } else {
                    return nullGeometryBuilder_.getMessage();
                }
            }

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             */
            public @NotNull Builder setNullGeometry(@Nullable NullGeometry value) {
                if (nullGeometryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    nullGeometry_ = value;
                    onChanged();
                } else {
                    nullGeometryBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             */
            public @NotNull Builder setNullGeometry(
                    NullGeometry.@NotNull Builder builderForValue) {
                if (nullGeometryBuilder_ == null) {
                    nullGeometry_ = builderForValue.build();
                    onChanged();
                } else {
                    nullGeometryBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             */
            public @NotNull Builder mergeNullGeometry(@NotNull NullGeometry value) {
                if (nullGeometryBuilder_ == null) {
                    if (nullGeometry_ != null) {
                        nullGeometry_ =
                                NullGeometry.newBuilder(nullGeometry_).mergeFrom(value).buildPartial();
                    } else {
                        nullGeometry_ = value;
                    }
                    onChanged();
                } else {
                    nullGeometryBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             */
            public @NotNull Builder clearNullGeometry() {
                if (nullGeometryBuilder_ == null) {
                    nullGeometry_ = null;
                    onChanged();
                } else {
                    nullGeometry_ = null;
                    nullGeometryBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             */
            public NullGeometry.Builder getNullGeometryBuilder() {

                onChanged();
                return getNullGeometryFieldBuilder().getBuilder();
            }

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             */
            public NullGeometryOrBuilder getNullGeometryOrBuilder() {
                if (nullGeometryBuilder_ != null) {
                    return nullGeometryBuilder_.getMessageOrBuilder();
                } else {
                    return nullGeometry_ == null ?
                            NullGeometry.getDefaultInstance() : nullGeometry_;
                }
            }

            /**
             * <code>.pojo.NullGeometry nullGeometry = 8;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    NullGeometry, NullGeometry.Builder, NullGeometryOrBuilder>
            getNullGeometryFieldBuilder() {
                if (nullGeometryBuilder_ == null) {
                    nullGeometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            NullGeometry, NullGeometry.Builder, NullGeometryOrBuilder>(
                            getNullGeometry(),
                            getParentForChildren(),
                            isClean());
                    nullGeometry_ = null;
                }
                return nullGeometryBuilder_;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.Geometry)
        }

        // @@protoc_insertion_point(class_scope:pojo.Geometry)
        private static final @NotNull Geometry DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Geometry();
        }

        public static Geometry getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Geometry>
                PARSER = new com.google.protobuf.AbstractParser<Geometry>() {
            @Override
            public @NotNull Geometry parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Geometry(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Geometry> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<Geometry> getParserForType() {
            return PARSER;
        }

        @Override
        public Geometry getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface FeatureOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.Feature)
            com.google.protobuf.MessageOrBuilder {
    }

    /**
     * <pre>
     * Feature 仅作保留，单个Feature没有压缩优势，若确实需要，放入FeatureCollection中
     * </pre>
     * <p>
     * Protobuf type {@code pojo.Feature}
     */
    public static final class Feature extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.Feature)
            FeatureOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use Feature.newBuilder() to construct.
        private Feature(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private Feature() {
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new Feature();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private Feature(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_Feature_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_Feature_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Feature.class, Builder.class);
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Feature)) {
                return super.equals(obj);
            }
            Feature other = (Feature) obj;

            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Feature parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Feature parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Feature parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Feature parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Feature parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Feature parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Feature parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Feature parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Feature parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Feature parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Feature parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Feature parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull Feature prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Feature 仅作保留，单个Feature没有压缩优势，若确实需要，放入FeatureCollection中
         * </pre>
         * <p>
         * Protobuf type {@code pojo.Feature}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.Feature)
                FeatureOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_Feature_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_Feature_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Feature.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.Feature.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_Feature_descriptor;
            }

            @Override
            public Feature getDefaultInstanceForType() {
                return Feature.getDefaultInstance();
            }

            @Override
            public @NotNull Feature build() {
                Feature result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull Feature buildPartial() {
                Feature result = new Feature(this);
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Feature) {
                    return mergeFrom((Feature) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull Feature other) {
                if (other == Feature.getDefaultInstance()) return this;
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Feature parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Feature) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.Feature)
        }

        // @@protoc_insertion_point(class_scope:pojo.Feature)
        private static final @NotNull Feature DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Feature();
        }

        public static Feature getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Feature>
                PARSER = new com.google.protobuf.AbstractParser<Feature>() {
            @Override
            public @NotNull Feature parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Feature(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Feature> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<Feature> getParserForType() {
            return PARSER;
        }

        @Override
        public Feature getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface MapOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.Map)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * keyId、valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleKeyIds = 1;</code>
         *
         * @return A list containing the doubleKeyIds.
         */
        java.util.List<Integer> getDoubleKeyIdsList();

        /**
         * <pre>
         * keyId、valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleKeyIds = 1;</code>
         *
         * @return The count of doubleKeyIds.
         */
        int getDoubleKeyIdsCount();

        /**
         * <pre>
         * keyId、valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleKeyIds = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The doubleKeyIds at the given index.
         */
        int getDoubleKeyIds(int index);

        /**
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @return A list containing the doubleValueIds.
         */
        java.util.List<Integer> getDoubleValueIdsList();

        /**
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @return The count of doubleValueIds.
         */
        int getDoubleValueIdsCount();

        /**
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The doubleValueIds at the given index.
         */
        int getDoubleValueIds(int index);

        /**
         * <code>repeated int32 floatKeyIds = 3;</code>
         *
         * @return A list containing the floatKeyIds.
         */
        java.util.List<Integer> getFloatKeyIdsList();

        /**
         * <code>repeated int32 floatKeyIds = 3;</code>
         *
         * @return The count of floatKeyIds.
         */
        int getFloatKeyIdsCount();

        /**
         * <code>repeated int32 floatKeyIds = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The floatKeyIds at the given index.
         */
        int getFloatKeyIds(int index);

        /**
         * <code>repeated int32 floatValueIds = 4;</code>
         *
         * @return A list containing the floatValueIds.
         */
        java.util.List<Integer> getFloatValueIdsList();

        /**
         * <code>repeated int32 floatValueIds = 4;</code>
         *
         * @return The count of floatValueIds.
         */
        int getFloatValueIdsCount();

        /**
         * <code>repeated int32 floatValueIds = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The floatValueIds at the given index.
         */
        int getFloatValueIds(int index);

        /**
         * <code>repeated int32 sint32KeyIds = 5;</code>
         *
         * @return A list containing the sint32KeyIds.
         */
        java.util.List<Integer> getSint32KeyIdsList();

        /**
         * <code>repeated int32 sint32KeyIds = 5;</code>
         *
         * @return The count of sint32KeyIds.
         */
        int getSint32KeyIdsCount();

        /**
         * <code>repeated int32 sint32KeyIds = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The sint32KeyIds at the given index.
         */
        int getSint32KeyIds(int index);

        /**
         * <code>repeated int32 sint32ValueIds = 6;</code>
         *
         * @return A list containing the sint32ValueIds.
         */
        java.util.List<Integer> getSint32ValueIdsList();

        /**
         * <code>repeated int32 sint32ValueIds = 6;</code>
         *
         * @return The count of sint32ValueIds.
         */
        int getSint32ValueIdsCount();

        /**
         * <code>repeated int32 sint32ValueIds = 6;</code>
         *
         * @param index The index of the element to return.
         * @return The sint32ValueIds at the given index.
         */
        int getSint32ValueIds(int index);

        /**
         * <code>repeated int32 sint64KeyIds = 7;</code>
         *
         * @return A list containing the sint64KeyIds.
         */
        java.util.List<Integer> getSint64KeyIdsList();

        /**
         * <code>repeated int32 sint64KeyIds = 7;</code>
         *
         * @return The count of sint64KeyIds.
         */
        int getSint64KeyIdsCount();

        /**
         * <code>repeated int32 sint64KeyIds = 7;</code>
         *
         * @param index The index of the element to return.
         * @return The sint64KeyIds at the given index.
         */
        int getSint64KeyIds(int index);

        /**
         * <code>repeated int32 sint64ValueIds = 8;</code>
         *
         * @return A list containing the sint64ValueIds.
         */
        java.util.List<Integer> getSint64ValueIdsList();

        /**
         * <code>repeated int32 sint64ValueIds = 8;</code>
         *
         * @return The count of sint64ValueIds.
         */
        int getSint64ValueIdsCount();

        /**
         * <code>repeated int32 sint64ValueIds = 8;</code>
         *
         * @param index The index of the element to return.
         * @return The sint64ValueIds at the given index.
         */
        int getSint64ValueIds(int index);

        /**
         * <code>repeated int32 boolKeyIds = 9;</code>
         *
         * @return A list containing the boolKeyIds.
         */
        java.util.List<Integer> getBoolKeyIdsList();

        /**
         * <code>repeated int32 boolKeyIds = 9;</code>
         *
         * @return The count of boolKeyIds.
         */
        int getBoolKeyIdsCount();

        /**
         * <code>repeated int32 boolKeyIds = 9;</code>
         *
         * @param index The index of the element to return.
         * @return The boolKeyIds at the given index.
         */
        int getBoolKeyIds(int index);

        /**
         * <code>repeated bool boolValues = 10;</code>
         *
         * @return A list containing the boolValues.
         */
        java.util.List<Boolean> getBoolValuesList();

        /**
         * <code>repeated bool boolValues = 10;</code>
         *
         * @return The count of boolValues.
         */
        int getBoolValuesCount();

        /**
         * <code>repeated bool boolValues = 10;</code>
         *
         * @param index The index of the element to return.
         * @return The boolValues at the given index.
         */
        boolean getBoolValues(int index);

        /**
         * <code>repeated int32 stringKeyIds = 11;</code>
         *
         * @return A list containing the stringKeyIds.
         */
        java.util.List<Integer> getStringKeyIdsList();

        /**
         * <code>repeated int32 stringKeyIds = 11;</code>
         *
         * @return The count of stringKeyIds.
         */
        int getStringKeyIdsCount();

        /**
         * <code>repeated int32 stringKeyIds = 11;</code>
         *
         * @param index The index of the element to return.
         * @return The stringKeyIds at the given index.
         */
        int getStringKeyIds(int index);

        /**
         * <code>repeated int32 stringValueIds = 12;</code>
         *
         * @return A list containing the stringValueIds.
         */
        java.util.List<Integer> getStringValueIdsList();

        /**
         * <code>repeated int32 stringValueIds = 12;</code>
         *
         * @return The count of stringValueIds.
         */
        int getStringValueIdsCount();

        /**
         * <code>repeated int32 stringValueIds = 12;</code>
         *
         * @param index The index of the element to return.
         * @return The stringValueIds at the given index.
         */
        int getStringValueIds(int index);

        /**
         * <code>repeated int32 bytesKeyIds = 13;</code>
         *
         * @return A list containing the bytesKeyIds.
         */
        java.util.List<Integer> getBytesKeyIdsList();

        /**
         * <code>repeated int32 bytesKeyIds = 13;</code>
         *
         * @return The count of bytesKeyIds.
         */
        int getBytesKeyIdsCount();

        /**
         * <code>repeated int32 bytesKeyIds = 13;</code>
         *
         * @param index The index of the element to return.
         * @return The bytesKeyIds at the given index.
         */
        int getBytesKeyIds(int index);

        /**
         * <code>repeated int32 bytesValueIds = 14;</code>
         *
         * @return A list containing the bytesValueIds.
         */
        java.util.List<Integer> getBytesValueIdsList();

        /**
         * <code>repeated int32 bytesValueIds = 14;</code>
         *
         * @return The count of bytesValueIds.
         */
        int getBytesValueIdsCount();

        /**
         * <code>repeated int32 bytesValueIds = 14;</code>
         *
         * @param index The index of the element to return.
         * @return The bytesValueIds at the given index.
         */
        int getBytesValueIds(int index);

        /**
         * <pre>
         * list keyId、valueId
         * </pre>
         *
         * <code>repeated int32 listKeyIds = 15;</code>
         *
         * @return A list containing the listKeyIds.
         */
        java.util.List<Integer> getListKeyIdsList();

        /**
         * <pre>
         * list keyId、valueId
         * </pre>
         *
         * <code>repeated int32 listKeyIds = 15;</code>
         *
         * @return The count of listKeyIds.
         */
        int getListKeyIdsCount();

        /**
         * <pre>
         * list keyId、valueId
         * </pre>
         *
         * <code>repeated int32 listKeyIds = 15;</code>
         *
         * @param index The index of the element to return.
         * @return The listKeyIds at the given index.
         */
        int getListKeyIds(int index);

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        java.util.List<List>
        getListValuesList();

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        List getListValues(int index);

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        int getListValuesCount();

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        java.util.List<? extends ListOrBuilder>
        getListValuesOrBuilderList();

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        ListOrBuilder getListValuesOrBuilder(
                int index);

        /**
         * <pre>
         * children keyId、valueId
         * </pre>
         *
         * <code>repeated int32 subMapKeyIds = 17;</code>
         *
         * @return A list containing the subMapKeyIds.
         */
        java.util.List<Integer> getSubMapKeyIdsList();

        /**
         * <pre>
         * children keyId、valueId
         * </pre>
         *
         * <code>repeated int32 subMapKeyIds = 17;</code>
         *
         * @return The count of subMapKeyIds.
         */
        int getSubMapKeyIdsCount();

        /**
         * <pre>
         * children keyId、valueId
         * </pre>
         *
         * <code>repeated int32 subMapKeyIds = 17;</code>
         *
         * @param index The index of the element to return.
         * @return The subMapKeyIds at the given index.
         */
        int getSubMapKeyIds(int index);

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        java.util.List<Map>
        getSubMapValuesList();

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        Map getSubMapValues(int index);

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        int getSubMapValuesCount();

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        java.util.List<? extends MapOrBuilder>
        getSubMapValuesOrBuilderList();

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        MapOrBuilder getSubMapValuesOrBuilder(
                int index);
    }

    /**
     * <pre>
     * 属性映射 支持的属性类型 double float sint32 sint64 bool string bytes subProperty
     * 属性映射使用keyId-value或keyId-valueId格式，与FeatureCollection中的key、value结合来存实际键值
     * sint64、string等可能占用4字节及以上的对象，用valueId(int32)取代value来存储以减少体积 value本身则存放到FeatureCollection中
     * 示例 [{id:4,name:'tom'},{id:5,name:'jerry',age:4}]转换后:
     * FeatureCollection {
     *      keys = ['id','name','age'],//所有的key收集到keys中
     *      sint32Values = [4,5],//所有的int value收集到sint32Values中
     *      stringValues = ['tom','jerry'],//所有的string value收集到stringValues中
     *      //其它类型的属性也是类似的方式收集为key value
     *      propertiess = [//具体的属性用keyId-value或keyId-valueId格式来存储
     *          {sint32KeyIds=[0], sint32ValueIds=[0], stringKeyIds=[1], stringValueIds=[0]},//tom的属性 {0:0, 1:0}
     *          {sint32KeyIds=[0,2], sint32ValueIds=[1,0], stringKeyIds=[1], stringValueIds=[1]}//jerry的属性 {0:1, 1:1, 2:1}
     *      ]
     * }
     * </pre>
     * <p>
     * Protobuf type {@code pojo.Map}
     */
    public static final class Map extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.Map)
            MapOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use Map.newBuilder() to construct.
        private Map(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private Map() {
            doubleKeyIds_ = emptyIntList();
            doubleValueIds_ = emptyIntList();
            floatKeyIds_ = emptyIntList();
            floatValueIds_ = emptyIntList();
            sint32KeyIds_ = emptyIntList();
            sint32ValueIds_ = emptyIntList();
            sint64KeyIds_ = emptyIntList();
            sint64ValueIds_ = emptyIntList();
            boolKeyIds_ = emptyIntList();
            boolValues_ = emptyBooleanList();
            stringKeyIds_ = emptyIntList();
            stringValueIds_ = emptyIntList();
            bytesKeyIds_ = emptyIntList();
            bytesValueIds_ = emptyIntList();
            listKeyIds_ = emptyIntList();
            listValues_ = java.util.Collections.emptyList();
            subMapKeyIds_ = emptyIntList();
            subMapValues_ = java.util.Collections.emptyList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new Map();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private Map(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                doubleKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            doubleKeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                doubleKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                doubleKeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 16: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                doubleValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            doubleValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                                doubleValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                doubleValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 24: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                floatKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            floatKeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                                floatKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                floatKeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 32: {
                            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                floatValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            floatValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                                floatValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                floatValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 40: {
                            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                                sint32KeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            sint32KeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 42: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                                sint32KeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                sint32KeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                                sint32ValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            sint32ValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                                sint32ValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                sint32ValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                                sint64KeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            sint64KeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                                sint64KeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                sint64KeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 64: {
                            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                                sint64ValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            sint64ValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 66: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                                sint64ValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                sint64ValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 72: {
                            if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                                boolKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000100;
                            }
                            boolKeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 74: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000100) != 0) && input.getBytesUntilLimit() > 0) {
                                boolKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000100;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                boolKeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 80: {
                            if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                                boolValues_ = newBooleanList();
                                mutable_bitField0_ |= 0x00000200;
                            }
                            boolValues_.addBoolean(input.readBool());
                            break;
                        }
                        case 82: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000200) != 0) && input.getBytesUntilLimit() > 0) {
                                boolValues_ = newBooleanList();
                                mutable_bitField0_ |= 0x00000200;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                boolValues_.addBoolean(input.readBool());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 88: {
                            if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                                stringKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000400;
                            }
                            stringKeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 90: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000400) != 0) && input.getBytesUntilLimit() > 0) {
                                stringKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000400;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                stringKeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 96: {
                            if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                                stringValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000800;
                            }
                            stringValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 98: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000800) != 0) && input.getBytesUntilLimit() > 0) {
                                stringValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000800;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                stringValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 104: {
                            if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                                bytesKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00001000;
                            }
                            bytesKeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 106: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00001000) != 0) && input.getBytesUntilLimit() > 0) {
                                bytesKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00001000;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                bytesKeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 112: {
                            if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                                bytesValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00002000;
                            }
                            bytesValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 114: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00002000) != 0) && input.getBytesUntilLimit() > 0) {
                                bytesValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00002000;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                bytesValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 120: {
                            if (!((mutable_bitField0_ & 0x00004000) != 0)) {
                                listKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00004000;
                            }
                            listKeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 122: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00004000) != 0) && input.getBytesUntilLimit() > 0) {
                                listKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00004000;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                listKeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 130: {
                            if (!((mutable_bitField0_ & 0x00008000) != 0)) {
                                listValues_ = new java.util.ArrayList<List>();
                                mutable_bitField0_ |= 0x00008000;
                            }
                            listValues_.add(
                                    input.readMessage(List.parser(), extensionRegistry));
                            break;
                        }
                        case 136: {
                            if (!((mutable_bitField0_ & 0x00010000) != 0)) {
                                subMapKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00010000;
                            }
                            subMapKeyIds_.addInt(input.readInt32());
                            break;
                        }
                        case 138: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00010000) != 0) && input.getBytesUntilLimit() > 0) {
                                subMapKeyIds_ = newIntList();
                                mutable_bitField0_ |= 0x00010000;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                subMapKeyIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 146: {
                            if (!((mutable_bitField0_ & 0x00020000) != 0)) {
                                subMapValues_ = new java.util.ArrayList<Map>();
                                mutable_bitField0_ |= 0x00020000;
                            }
                            subMapValues_.add(
                                    input.readMessage(Map.parser(), extensionRegistry));
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    doubleKeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    doubleValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    floatKeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    floatValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000010) != 0)) {
                    sint32KeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000020) != 0)) {
                    sint32ValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000040) != 0)) {
                    sint64KeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000080) != 0)) {
                    sint64ValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000100) != 0)) {
                    boolKeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000200) != 0)) {
                    boolValues_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000400) != 0)) {
                    stringKeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000800) != 0)) {
                    stringValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00001000) != 0)) {
                    bytesKeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00002000) != 0)) {
                    bytesValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00004000) != 0)) {
                    listKeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00008000) != 0)) {
                    listValues_ = java.util.Collections.unmodifiableList(listValues_);
                }
                if (((mutable_bitField0_ & 0x00010000) != 0)) {
                    subMapKeyIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00020000) != 0)) {
                    subMapValues_ = java.util.Collections.unmodifiableList(subMapValues_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_Map_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_Map_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Map.class, Builder.class);
        }

        public static final int DOUBLEKEYIDS_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.IntList doubleKeyIds_;

        /**
         * <pre>
         * keyId、valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleKeyIds = 1;</code>
         *
         * @return A list containing the doubleKeyIds.
         */
        @Override
        public java.util.List<Integer>
        getDoubleKeyIdsList() {
            return doubleKeyIds_;
        }

        /**
         * <pre>
         * keyId、valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleKeyIds = 1;</code>
         *
         * @return The count of doubleKeyIds.
         */
        public int getDoubleKeyIdsCount() {
            return doubleKeyIds_.size();
        }

        /**
         * <pre>
         * keyId、valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleKeyIds = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The doubleKeyIds at the given index.
         */
        public int getDoubleKeyIds(int index) {
            return doubleKeyIds_.getInt(index);
        }

        private int doubleKeyIdsMemoizedSerializedSize = -1;

        public static final int DOUBLEVALUEIDS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.IntList doubleValueIds_;

        /**
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @return A list containing the doubleValueIds.
         */
        @Override
        public java.util.List<Integer>
        getDoubleValueIdsList() {
            return doubleValueIds_;
        }

        /**
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @return The count of doubleValueIds.
         */
        public int getDoubleValueIdsCount() {
            return doubleValueIds_.size();
        }

        /**
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The doubleValueIds at the given index.
         */
        public int getDoubleValueIds(int index) {
            return doubleValueIds_.getInt(index);
        }

        private int doubleValueIdsMemoizedSerializedSize = -1;

        public static final int FLOATKEYIDS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.IntList floatKeyIds_;

        /**
         * <code>repeated int32 floatKeyIds = 3;</code>
         *
         * @return A list containing the floatKeyIds.
         */
        @Override
        public java.util.List<Integer>
        getFloatKeyIdsList() {
            return floatKeyIds_;
        }

        /**
         * <code>repeated int32 floatKeyIds = 3;</code>
         *
         * @return The count of floatKeyIds.
         */
        public int getFloatKeyIdsCount() {
            return floatKeyIds_.size();
        }

        /**
         * <code>repeated int32 floatKeyIds = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The floatKeyIds at the given index.
         */
        public int getFloatKeyIds(int index) {
            return floatKeyIds_.getInt(index);
        }

        private int floatKeyIdsMemoizedSerializedSize = -1;

        public static final int FLOATVALUEIDS_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList floatValueIds_;

        /**
         * <code>repeated int32 floatValueIds = 4;</code>
         *
         * @return A list containing the floatValueIds.
         */
        @Override
        public java.util.List<Integer>
        getFloatValueIdsList() {
            return floatValueIds_;
        }

        /**
         * <code>repeated int32 floatValueIds = 4;</code>
         *
         * @return The count of floatValueIds.
         */
        public int getFloatValueIdsCount() {
            return floatValueIds_.size();
        }

        /**
         * <code>repeated int32 floatValueIds = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The floatValueIds at the given index.
         */
        public int getFloatValueIds(int index) {
            return floatValueIds_.getInt(index);
        }

        private int floatValueIdsMemoizedSerializedSize = -1;

        public static final int SINT32KEYIDS_FIELD_NUMBER = 5;
        private com.google.protobuf.Internal.IntList sint32KeyIds_;

        /**
         * <code>repeated int32 sint32KeyIds = 5;</code>
         *
         * @return A list containing the sint32KeyIds.
         */
        @Override
        public java.util.List<Integer>
        getSint32KeyIdsList() {
            return sint32KeyIds_;
        }

        /**
         * <code>repeated int32 sint32KeyIds = 5;</code>
         *
         * @return The count of sint32KeyIds.
         */
        public int getSint32KeyIdsCount() {
            return sint32KeyIds_.size();
        }

        /**
         * <code>repeated int32 sint32KeyIds = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The sint32KeyIds at the given index.
         */
        public int getSint32KeyIds(int index) {
            return sint32KeyIds_.getInt(index);
        }

        private int sint32KeyIdsMemoizedSerializedSize = -1;

        public static final int SINT32VALUEIDS_FIELD_NUMBER = 6;
        private com.google.protobuf.Internal.IntList sint32ValueIds_;

        /**
         * <code>repeated int32 sint32ValueIds = 6;</code>
         *
         * @return A list containing the sint32ValueIds.
         */
        @Override
        public java.util.List<Integer>
        getSint32ValueIdsList() {
            return sint32ValueIds_;
        }

        /**
         * <code>repeated int32 sint32ValueIds = 6;</code>
         *
         * @return The count of sint32ValueIds.
         */
        public int getSint32ValueIdsCount() {
            return sint32ValueIds_.size();
        }

        /**
         * <code>repeated int32 sint32ValueIds = 6;</code>
         *
         * @param index The index of the element to return.
         * @return The sint32ValueIds at the given index.
         */
        public int getSint32ValueIds(int index) {
            return sint32ValueIds_.getInt(index);
        }

        private int sint32ValueIdsMemoizedSerializedSize = -1;

        public static final int SINT64KEYIDS_FIELD_NUMBER = 7;
        private com.google.protobuf.Internal.IntList sint64KeyIds_;

        /**
         * <code>repeated int32 sint64KeyIds = 7;</code>
         *
         * @return A list containing the sint64KeyIds.
         */
        @Override
        public java.util.List<Integer>
        getSint64KeyIdsList() {
            return sint64KeyIds_;
        }

        /**
         * <code>repeated int32 sint64KeyIds = 7;</code>
         *
         * @return The count of sint64KeyIds.
         */
        public int getSint64KeyIdsCount() {
            return sint64KeyIds_.size();
        }

        /**
         * <code>repeated int32 sint64KeyIds = 7;</code>
         *
         * @param index The index of the element to return.
         * @return The sint64KeyIds at the given index.
         */
        public int getSint64KeyIds(int index) {
            return sint64KeyIds_.getInt(index);
        }

        private int sint64KeyIdsMemoizedSerializedSize = -1;

        public static final int SINT64VALUEIDS_FIELD_NUMBER = 8;
        private com.google.protobuf.Internal.IntList sint64ValueIds_;

        /**
         * <code>repeated int32 sint64ValueIds = 8;</code>
         *
         * @return A list containing the sint64ValueIds.
         */
        @Override
        public java.util.List<Integer>
        getSint64ValueIdsList() {
            return sint64ValueIds_;
        }

        /**
         * <code>repeated int32 sint64ValueIds = 8;</code>
         *
         * @return The count of sint64ValueIds.
         */
        public int getSint64ValueIdsCount() {
            return sint64ValueIds_.size();
        }

        /**
         * <code>repeated int32 sint64ValueIds = 8;</code>
         *
         * @param index The index of the element to return.
         * @return The sint64ValueIds at the given index.
         */
        public int getSint64ValueIds(int index) {
            return sint64ValueIds_.getInt(index);
        }

        private int sint64ValueIdsMemoizedSerializedSize = -1;

        public static final int BOOLKEYIDS_FIELD_NUMBER = 9;
        private com.google.protobuf.Internal.IntList boolKeyIds_;

        /**
         * <code>repeated int32 boolKeyIds = 9;</code>
         *
         * @return A list containing the boolKeyIds.
         */
        @Override
        public java.util.List<Integer>
        getBoolKeyIdsList() {
            return boolKeyIds_;
        }

        /**
         * <code>repeated int32 boolKeyIds = 9;</code>
         *
         * @return The count of boolKeyIds.
         */
        public int getBoolKeyIdsCount() {
            return boolKeyIds_.size();
        }

        /**
         * <code>repeated int32 boolKeyIds = 9;</code>
         *
         * @param index The index of the element to return.
         * @return The boolKeyIds at the given index.
         */
        public int getBoolKeyIds(int index) {
            return boolKeyIds_.getInt(index);
        }

        private int boolKeyIdsMemoizedSerializedSize = -1;

        public static final int BOOLVALUES_FIELD_NUMBER = 10;
        private com.google.protobuf.Internal.BooleanList boolValues_;

        /**
         * <code>repeated bool boolValues = 10;</code>
         *
         * @return A list containing the boolValues.
         */
        @Override
        public java.util.List<Boolean>
        getBoolValuesList() {
            return boolValues_;
        }

        /**
         * <code>repeated bool boolValues = 10;</code>
         *
         * @return The count of boolValues.
         */
        public int getBoolValuesCount() {
            return boolValues_.size();
        }

        /**
         * <code>repeated bool boolValues = 10;</code>
         *
         * @param index The index of the element to return.
         * @return The boolValues at the given index.
         */
        public boolean getBoolValues(int index) {
            return boolValues_.getBoolean(index);
        }

        private int boolValuesMemoizedSerializedSize = -1;

        public static final int STRINGKEYIDS_FIELD_NUMBER = 11;
        private com.google.protobuf.Internal.IntList stringKeyIds_;

        /**
         * <code>repeated int32 stringKeyIds = 11;</code>
         *
         * @return A list containing the stringKeyIds.
         */
        @Override
        public java.util.List<Integer>
        getStringKeyIdsList() {
            return stringKeyIds_;
        }

        /**
         * <code>repeated int32 stringKeyIds = 11;</code>
         *
         * @return The count of stringKeyIds.
         */
        public int getStringKeyIdsCount() {
            return stringKeyIds_.size();
        }

        /**
         * <code>repeated int32 stringKeyIds = 11;</code>
         *
         * @param index The index of the element to return.
         * @return The stringKeyIds at the given index.
         */
        public int getStringKeyIds(int index) {
            return stringKeyIds_.getInt(index);
        }

        private int stringKeyIdsMemoizedSerializedSize = -1;

        public static final int STRINGVALUEIDS_FIELD_NUMBER = 12;
        private com.google.protobuf.Internal.IntList stringValueIds_;

        /**
         * <code>repeated int32 stringValueIds = 12;</code>
         *
         * @return A list containing the stringValueIds.
         */
        @Override
        public java.util.List<Integer>
        getStringValueIdsList() {
            return stringValueIds_;
        }

        /**
         * <code>repeated int32 stringValueIds = 12;</code>
         *
         * @return The count of stringValueIds.
         */
        public int getStringValueIdsCount() {
            return stringValueIds_.size();
        }

        /**
         * <code>repeated int32 stringValueIds = 12;</code>
         *
         * @param index The index of the element to return.
         * @return The stringValueIds at the given index.
         */
        public int getStringValueIds(int index) {
            return stringValueIds_.getInt(index);
        }

        private int stringValueIdsMemoizedSerializedSize = -1;

        public static final int BYTESKEYIDS_FIELD_NUMBER = 13;
        private com.google.protobuf.Internal.IntList bytesKeyIds_;

        /**
         * <code>repeated int32 bytesKeyIds = 13;</code>
         *
         * @return A list containing the bytesKeyIds.
         */
        @Override
        public java.util.List<Integer>
        getBytesKeyIdsList() {
            return bytesKeyIds_;
        }

        /**
         * <code>repeated int32 bytesKeyIds = 13;</code>
         *
         * @return The count of bytesKeyIds.
         */
        public int getBytesKeyIdsCount() {
            return bytesKeyIds_.size();
        }

        /**
         * <code>repeated int32 bytesKeyIds = 13;</code>
         *
         * @param index The index of the element to return.
         * @return The bytesKeyIds at the given index.
         */
        public int getBytesKeyIds(int index) {
            return bytesKeyIds_.getInt(index);
        }

        private int bytesKeyIdsMemoizedSerializedSize = -1;

        public static final int BYTESVALUEIDS_FIELD_NUMBER = 14;
        private com.google.protobuf.Internal.IntList bytesValueIds_;

        /**
         * <code>repeated int32 bytesValueIds = 14;</code>
         *
         * @return A list containing the bytesValueIds.
         */
        @Override
        public java.util.List<Integer>
        getBytesValueIdsList() {
            return bytesValueIds_;
        }

        /**
         * <code>repeated int32 bytesValueIds = 14;</code>
         *
         * @return The count of bytesValueIds.
         */
        public int getBytesValueIdsCount() {
            return bytesValueIds_.size();
        }

        /**
         * <code>repeated int32 bytesValueIds = 14;</code>
         *
         * @param index The index of the element to return.
         * @return The bytesValueIds at the given index.
         */
        public int getBytesValueIds(int index) {
            return bytesValueIds_.getInt(index);
        }

        private int bytesValueIdsMemoizedSerializedSize = -1;

        public static final int LISTKEYIDS_FIELD_NUMBER = 15;
        private com.google.protobuf.Internal.IntList listKeyIds_;

        /**
         * <pre>
         * list keyId、valueId
         * </pre>
         *
         * <code>repeated int32 listKeyIds = 15;</code>
         *
         * @return A list containing the listKeyIds.
         */
        @Override
        public java.util.List<Integer>
        getListKeyIdsList() {
            return listKeyIds_;
        }

        /**
         * <pre>
         * list keyId、valueId
         * </pre>
         *
         * <code>repeated int32 listKeyIds = 15;</code>
         *
         * @return The count of listKeyIds.
         */
        public int getListKeyIdsCount() {
            return listKeyIds_.size();
        }

        /**
         * <pre>
         * list keyId、valueId
         * </pre>
         *
         * <code>repeated int32 listKeyIds = 15;</code>
         *
         * @param index The index of the element to return.
         * @return The listKeyIds at the given index.
         */
        public int getListKeyIds(int index) {
            return listKeyIds_.getInt(index);
        }

        private int listKeyIdsMemoizedSerializedSize = -1;

        public static final int LISTVALUES_FIELD_NUMBER = 16;
        private java.util.List<List> listValues_;

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        @Override
        public java.util.List<List> getListValuesList() {
            return listValues_;
        }

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        @Override
        public java.util.List<? extends ListOrBuilder>
        getListValuesOrBuilderList() {
            return listValues_;
        }

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        @Override
        public int getListValuesCount() {
            return listValues_.size();
        }

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        @Override
        public List getListValues(int index) {
            return listValues_.get(index);
        }

        /**
         * <code>repeated .pojo.List listValues = 16;</code>
         */
        @Override
        public ListOrBuilder getListValuesOrBuilder(
                int index) {
            return listValues_.get(index);
        }

        public static final int SUBMAPKEYIDS_FIELD_NUMBER = 17;
        private com.google.protobuf.Internal.IntList subMapKeyIds_;

        /**
         * <pre>
         * children keyId、valueId
         * </pre>
         *
         * <code>repeated int32 subMapKeyIds = 17;</code>
         *
         * @return A list containing the subMapKeyIds.
         */
        @Override
        public java.util.List<Integer>
        getSubMapKeyIdsList() {
            return subMapKeyIds_;
        }

        /**
         * <pre>
         * children keyId、valueId
         * </pre>
         *
         * <code>repeated int32 subMapKeyIds = 17;</code>
         *
         * @return The count of subMapKeyIds.
         */
        public int getSubMapKeyIdsCount() {
            return subMapKeyIds_.size();
        }

        /**
         * <pre>
         * children keyId、valueId
         * </pre>
         *
         * <code>repeated int32 subMapKeyIds = 17;</code>
         *
         * @param index The index of the element to return.
         * @return The subMapKeyIds at the given index.
         */
        public int getSubMapKeyIds(int index) {
            return subMapKeyIds_.getInt(index);
        }

        private int subMapKeyIdsMemoizedSerializedSize = -1;

        public static final int SUBMAPVALUES_FIELD_NUMBER = 18;
        private java.util.List<Map> subMapValues_;

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        @Override
        public java.util.List<Map> getSubMapValuesList() {
            return subMapValues_;
        }

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        @Override
        public java.util.List<? extends MapOrBuilder>
        getSubMapValuesOrBuilderList() {
            return subMapValues_;
        }

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        @Override
        public int getSubMapValuesCount() {
            return subMapValues_.size();
        }

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        @Override
        public Map getSubMapValues(int index) {
            return subMapValues_.get(index);
        }

        /**
         * <code>repeated .pojo.Map subMapValues = 18;</code>
         */
        @Override
        public MapOrBuilder getSubMapValuesOrBuilder(
                int index) {
            return subMapValues_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (getDoubleKeyIdsList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(doubleKeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < doubleKeyIds_.size(); i++) {
                output.writeInt32NoTag(doubleKeyIds_.getInt(i));
            }
            if (getDoubleValueIdsList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(doubleValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < doubleValueIds_.size(); i++) {
                output.writeInt32NoTag(doubleValueIds_.getInt(i));
            }
            if (getFloatKeyIdsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(floatKeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < floatKeyIds_.size(); i++) {
                output.writeInt32NoTag(floatKeyIds_.getInt(i));
            }
            if (getFloatValueIdsList().size() > 0) {
                output.writeUInt32NoTag(34);
                output.writeUInt32NoTag(floatValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < floatValueIds_.size(); i++) {
                output.writeInt32NoTag(floatValueIds_.getInt(i));
            }
            if (getSint32KeyIdsList().size() > 0) {
                output.writeUInt32NoTag(42);
                output.writeUInt32NoTag(sint32KeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < sint32KeyIds_.size(); i++) {
                output.writeInt32NoTag(sint32KeyIds_.getInt(i));
            }
            if (getSint32ValueIdsList().size() > 0) {
                output.writeUInt32NoTag(50);
                output.writeUInt32NoTag(sint32ValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < sint32ValueIds_.size(); i++) {
                output.writeInt32NoTag(sint32ValueIds_.getInt(i));
            }
            if (getSint64KeyIdsList().size() > 0) {
                output.writeUInt32NoTag(58);
                output.writeUInt32NoTag(sint64KeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < sint64KeyIds_.size(); i++) {
                output.writeInt32NoTag(sint64KeyIds_.getInt(i));
            }
            if (getSint64ValueIdsList().size() > 0) {
                output.writeUInt32NoTag(66);
                output.writeUInt32NoTag(sint64ValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < sint64ValueIds_.size(); i++) {
                output.writeInt32NoTag(sint64ValueIds_.getInt(i));
            }
            if (getBoolKeyIdsList().size() > 0) {
                output.writeUInt32NoTag(74);
                output.writeUInt32NoTag(boolKeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < boolKeyIds_.size(); i++) {
                output.writeInt32NoTag(boolKeyIds_.getInt(i));
            }
            if (getBoolValuesList().size() > 0) {
                output.writeUInt32NoTag(82);
                output.writeUInt32NoTag(boolValuesMemoizedSerializedSize);
            }
            for (int i = 0; i < boolValues_.size(); i++) {
                output.writeBoolNoTag(boolValues_.getBoolean(i));
            }
            if (getStringKeyIdsList().size() > 0) {
                output.writeUInt32NoTag(90);
                output.writeUInt32NoTag(stringKeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < stringKeyIds_.size(); i++) {
                output.writeInt32NoTag(stringKeyIds_.getInt(i));
            }
            if (getStringValueIdsList().size() > 0) {
                output.writeUInt32NoTag(98);
                output.writeUInt32NoTag(stringValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < stringValueIds_.size(); i++) {
                output.writeInt32NoTag(stringValueIds_.getInt(i));
            }
            if (getBytesKeyIdsList().size() > 0) {
                output.writeUInt32NoTag(106);
                output.writeUInt32NoTag(bytesKeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < bytesKeyIds_.size(); i++) {
                output.writeInt32NoTag(bytesKeyIds_.getInt(i));
            }
            if (getBytesValueIdsList().size() > 0) {
                output.writeUInt32NoTag(114);
                output.writeUInt32NoTag(bytesValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < bytesValueIds_.size(); i++) {
                output.writeInt32NoTag(bytesValueIds_.getInt(i));
            }
            if (getListKeyIdsList().size() > 0) {
                output.writeUInt32NoTag(122);
                output.writeUInt32NoTag(listKeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < listKeyIds_.size(); i++) {
                output.writeInt32NoTag(listKeyIds_.getInt(i));
            }
            for (int i = 0; i < listValues_.size(); i++) {
                output.writeMessage(16, listValues_.get(i));
            }
            if (getSubMapKeyIdsList().size() > 0) {
                output.writeUInt32NoTag(138);
                output.writeUInt32NoTag(subMapKeyIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < subMapKeyIds_.size(); i++) {
                output.writeInt32NoTag(subMapKeyIds_.getInt(i));
            }
            for (int i = 0; i < subMapValues_.size(); i++) {
                output.writeMessage(18, subMapValues_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                for (int i = 0; i < doubleKeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(doubleKeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getDoubleKeyIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                doubleKeyIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < doubleValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(doubleValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getDoubleValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                doubleValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < floatKeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(floatKeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getFloatKeyIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                floatKeyIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < floatValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(floatValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getFloatValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                floatValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < sint32KeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(sint32KeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getSint32KeyIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                sint32KeyIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < sint32ValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(sint32ValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getSint32ValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                sint32ValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < sint64KeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(sint64KeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getSint64KeyIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                sint64KeyIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < sint64ValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(sint64ValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getSint64ValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                sint64ValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < boolKeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(boolKeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getBoolKeyIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                boolKeyIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 1 * getBoolValuesList().size();
                size += dataSize;
                if (!getBoolValuesList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                boolValuesMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < stringKeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(stringKeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getStringKeyIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                stringKeyIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < stringValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(stringValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getStringValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                stringValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < bytesKeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(bytesKeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getBytesKeyIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                bytesKeyIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < bytesValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(bytesValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getBytesValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                bytesValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < listKeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(listKeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getListKeyIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                listKeyIdsMemoizedSerializedSize = dataSize;
            }
            for (int i = 0; i < listValues_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(16, listValues_.get(i));
            }
            {
                int dataSize = 0;
                for (int i = 0; i < subMapKeyIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(subMapKeyIds_.getInt(i));
                }
                size += dataSize;
                if (!getSubMapKeyIdsList().isEmpty()) {
                    size += 2;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                subMapKeyIdsMemoizedSerializedSize = dataSize;
            }
            for (int i = 0; i < subMapValues_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(18, subMapValues_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Map)) {
                return super.equals(obj);
            }
            Map other = (Map) obj;

            if (!getDoubleKeyIdsList()
                    .equals(other.getDoubleKeyIdsList())) return false;
            if (!getDoubleValueIdsList()
                    .equals(other.getDoubleValueIdsList())) return false;
            if (!getFloatKeyIdsList()
                    .equals(other.getFloatKeyIdsList())) return false;
            if (!getFloatValueIdsList()
                    .equals(other.getFloatValueIdsList())) return false;
            if (!getSint32KeyIdsList()
                    .equals(other.getSint32KeyIdsList())) return false;
            if (!getSint32ValueIdsList()
                    .equals(other.getSint32ValueIdsList())) return false;
            if (!getSint64KeyIdsList()
                    .equals(other.getSint64KeyIdsList())) return false;
            if (!getSint64ValueIdsList()
                    .equals(other.getSint64ValueIdsList())) return false;
            if (!getBoolKeyIdsList()
                    .equals(other.getBoolKeyIdsList())) return false;
            if (!getBoolValuesList()
                    .equals(other.getBoolValuesList())) return false;
            if (!getStringKeyIdsList()
                    .equals(other.getStringKeyIdsList())) return false;
            if (!getStringValueIdsList()
                    .equals(other.getStringValueIdsList())) return false;
            if (!getBytesKeyIdsList()
                    .equals(other.getBytesKeyIdsList())) return false;
            if (!getBytesValueIdsList()
                    .equals(other.getBytesValueIdsList())) return false;
            if (!getListKeyIdsList()
                    .equals(other.getListKeyIdsList())) return false;
            if (!getListValuesList()
                    .equals(other.getListValuesList())) return false;
            if (!getSubMapKeyIdsList()
                    .equals(other.getSubMapKeyIdsList())) return false;
            if (!getSubMapValuesList()
                    .equals(other.getSubMapValuesList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getDoubleKeyIdsCount() > 0) {
                hash = (37 * hash) + DOUBLEKEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getDoubleKeyIdsList().hashCode();
            }
            if (getDoubleValueIdsCount() > 0) {
                hash = (37 * hash) + DOUBLEVALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getDoubleValueIdsList().hashCode();
            }
            if (getFloatKeyIdsCount() > 0) {
                hash = (37 * hash) + FLOATKEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getFloatKeyIdsList().hashCode();
            }
            if (getFloatValueIdsCount() > 0) {
                hash = (37 * hash) + FLOATVALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getFloatValueIdsList().hashCode();
            }
            if (getSint32KeyIdsCount() > 0) {
                hash = (37 * hash) + SINT32KEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getSint32KeyIdsList().hashCode();
            }
            if (getSint32ValueIdsCount() > 0) {
                hash = (37 * hash) + SINT32VALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getSint32ValueIdsList().hashCode();
            }
            if (getSint64KeyIdsCount() > 0) {
                hash = (37 * hash) + SINT64KEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getSint64KeyIdsList().hashCode();
            }
            if (getSint64ValueIdsCount() > 0) {
                hash = (37 * hash) + SINT64VALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getSint64ValueIdsList().hashCode();
            }
            if (getBoolKeyIdsCount() > 0) {
                hash = (37 * hash) + BOOLKEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getBoolKeyIdsList().hashCode();
            }
            if (getBoolValuesCount() > 0) {
                hash = (37 * hash) + BOOLVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getBoolValuesList().hashCode();
            }
            if (getStringKeyIdsCount() > 0) {
                hash = (37 * hash) + STRINGKEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getStringKeyIdsList().hashCode();
            }
            if (getStringValueIdsCount() > 0) {
                hash = (37 * hash) + STRINGVALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getStringValueIdsList().hashCode();
            }
            if (getBytesKeyIdsCount() > 0) {
                hash = (37 * hash) + BYTESKEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getBytesKeyIdsList().hashCode();
            }
            if (getBytesValueIdsCount() > 0) {
                hash = (37 * hash) + BYTESVALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getBytesValueIdsList().hashCode();
            }
            if (getListKeyIdsCount() > 0) {
                hash = (37 * hash) + LISTKEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getListKeyIdsList().hashCode();
            }
            if (getListValuesCount() > 0) {
                hash = (37 * hash) + LISTVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getListValuesList().hashCode();
            }
            if (getSubMapKeyIdsCount() > 0) {
                hash = (37 * hash) + SUBMAPKEYIDS_FIELD_NUMBER;
                hash = (53 * hash) + getSubMapKeyIdsList().hashCode();
            }
            if (getSubMapValuesCount() > 0) {
                hash = (37 * hash) + SUBMAPVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getSubMapValuesList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Map parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Map parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Map parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Map parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Map parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Map parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Map parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Map parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Map parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Map parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Map parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Map parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull Map prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * 属性映射 支持的属性类型 double float sint32 sint64 bool string bytes subProperty
         * 属性映射使用keyId-value或keyId-valueId格式，与FeatureCollection中的key、value结合来存实际键值
         * sint64、string等可能占用4字节及以上的对象，用valueId(int32)取代value来存储以减少体积 value本身则存放到FeatureCollection中
         * 示例 [{id:4,name:'tom'},{id:5,name:'jerry',age:4}]转换后:
         * FeatureCollection {
         *      keys = ['id','name','age'],//所有的key收集到keys中
         *      sint32Values = [4,5],//所有的int value收集到sint32Values中
         *      stringValues = ['tom','jerry'],//所有的string value收集到stringValues中
         *      //其它类型的属性也是类似的方式收集为key value
         *      propertiess = [//具体的属性用keyId-value或keyId-valueId格式来存储
         *          {sint32KeyIds=[0], sint32ValueIds=[0], stringKeyIds=[1], stringValueIds=[0]},//tom的属性 {0:0, 1:0}
         *          {sint32KeyIds=[0,2], sint32ValueIds=[1,0], stringKeyIds=[1], stringValueIds=[1]}//jerry的属性 {0:1, 1:1, 2:1}
         *      ]
         * }
         * </pre>
         * <p>
         * Protobuf type {@code pojo.Map}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.Map)
                MapOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_Map_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_Map_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Map.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.Map.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getListValuesFieldBuilder();
                    getSubMapValuesFieldBuilder();
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                doubleKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000001);
                doubleValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000002);
                floatKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000004);
                floatValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                sint32KeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000010);
                sint32ValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000020);
                sint64KeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000040);
                sint64ValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000080);
                boolKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000100);
                boolValues_ = emptyBooleanList();
                bitField0_ = (bitField0_ & ~0x00000200);
                stringKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000400);
                stringValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000800);
                bytesKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00001000);
                bytesValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00002000);
                listKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00004000);
                if (listValuesBuilder_ == null) {
                    listValues_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00008000);
                } else {
                    listValuesBuilder_.clear();
                }
                subMapKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00010000);
                if (subMapValuesBuilder_ == null) {
                    subMapValues_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00020000);
                } else {
                    subMapValuesBuilder_.clear();
                }
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_Map_descriptor;
            }

            @Override
            public Map getDefaultInstanceForType() {
                return Map.getDefaultInstance();
            }

            @Override
            public @NotNull Map build() {
                Map result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull Map buildPartial() {
                Map result = new Map(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    doubleKeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.doubleKeyIds_ = doubleKeyIds_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    doubleValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.doubleValueIds_ = doubleValueIds_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    floatKeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.floatKeyIds_ = floatKeyIds_;
                if (((bitField0_ & 0x00000008) != 0)) {
                    floatValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.floatValueIds_ = floatValueIds_;
                if (((bitField0_ & 0x00000010) != 0)) {
                    sint32KeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000010);
                }
                result.sint32KeyIds_ = sint32KeyIds_;
                if (((bitField0_ & 0x00000020) != 0)) {
                    sint32ValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.sint32ValueIds_ = sint32ValueIds_;
                if (((bitField0_ & 0x00000040) != 0)) {
                    sint64KeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.sint64KeyIds_ = sint64KeyIds_;
                if (((bitField0_ & 0x00000080) != 0)) {
                    sint64ValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000080);
                }
                result.sint64ValueIds_ = sint64ValueIds_;
                if (((bitField0_ & 0x00000100) != 0)) {
                    boolKeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000100);
                }
                result.boolKeyIds_ = boolKeyIds_;
                if (((bitField0_ & 0x00000200) != 0)) {
                    boolValues_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000200);
                }
                result.boolValues_ = boolValues_;
                if (((bitField0_ & 0x00000400) != 0)) {
                    stringKeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000400);
                }
                result.stringKeyIds_ = stringKeyIds_;
                if (((bitField0_ & 0x00000800) != 0)) {
                    stringValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000800);
                }
                result.stringValueIds_ = stringValueIds_;
                if (((bitField0_ & 0x00001000) != 0)) {
                    bytesKeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00001000);
                }
                result.bytesKeyIds_ = bytesKeyIds_;
                if (((bitField0_ & 0x00002000) != 0)) {
                    bytesValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00002000);
                }
                result.bytesValueIds_ = bytesValueIds_;
                if (((bitField0_ & 0x00004000) != 0)) {
                    listKeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00004000);
                }
                result.listKeyIds_ = listKeyIds_;
                if (listValuesBuilder_ == null) {
                    if (((bitField0_ & 0x00008000) != 0)) {
                        listValues_ = java.util.Collections.unmodifiableList(listValues_);
                        bitField0_ = (bitField0_ & ~0x00008000);
                    }
                    result.listValues_ = listValues_;
                } else {
                    result.listValues_ = listValuesBuilder_.build();
                }
                if (((bitField0_ & 0x00010000) != 0)) {
                    subMapKeyIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00010000);
                }
                result.subMapKeyIds_ = subMapKeyIds_;
                if (subMapValuesBuilder_ == null) {
                    if (((bitField0_ & 0x00020000) != 0)) {
                        subMapValues_ = java.util.Collections.unmodifiableList(subMapValues_);
                        bitField0_ = (bitField0_ & ~0x00020000);
                    }
                    result.subMapValues_ = subMapValues_;
                } else {
                    result.subMapValues_ = subMapValuesBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Map) {
                    return mergeFrom((Map) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull Map other) {
                if (other == Map.getDefaultInstance()) return this;
                if (!other.doubleKeyIds_.isEmpty()) {
                    if (doubleKeyIds_.isEmpty()) {
                        doubleKeyIds_ = other.doubleKeyIds_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureDoubleKeyIdsIsMutable();
                        doubleKeyIds_.addAll(other.doubleKeyIds_);
                    }
                    onChanged();
                }
                if (!other.doubleValueIds_.isEmpty()) {
                    if (doubleValueIds_.isEmpty()) {
                        doubleValueIds_ = other.doubleValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureDoubleValueIdsIsMutable();
                        doubleValueIds_.addAll(other.doubleValueIds_);
                    }
                    onChanged();
                }
                if (!other.floatKeyIds_.isEmpty()) {
                    if (floatKeyIds_.isEmpty()) {
                        floatKeyIds_ = other.floatKeyIds_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureFloatKeyIdsIsMutable();
                        floatKeyIds_.addAll(other.floatKeyIds_);
                    }
                    onChanged();
                }
                if (!other.floatValueIds_.isEmpty()) {
                    if (floatValueIds_.isEmpty()) {
                        floatValueIds_ = other.floatValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureFloatValueIdsIsMutable();
                        floatValueIds_.addAll(other.floatValueIds_);
                    }
                    onChanged();
                }
                if (!other.sint32KeyIds_.isEmpty()) {
                    if (sint32KeyIds_.isEmpty()) {
                        sint32KeyIds_ = other.sint32KeyIds_;
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        ensureSint32KeyIdsIsMutable();
                        sint32KeyIds_.addAll(other.sint32KeyIds_);
                    }
                    onChanged();
                }
                if (!other.sint32ValueIds_.isEmpty()) {
                    if (sint32ValueIds_.isEmpty()) {
                        sint32ValueIds_ = other.sint32ValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureSint32ValueIdsIsMutable();
                        sint32ValueIds_.addAll(other.sint32ValueIds_);
                    }
                    onChanged();
                }
                if (!other.sint64KeyIds_.isEmpty()) {
                    if (sint64KeyIds_.isEmpty()) {
                        sint64KeyIds_ = other.sint64KeyIds_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureSint64KeyIdsIsMutable();
                        sint64KeyIds_.addAll(other.sint64KeyIds_);
                    }
                    onChanged();
                }
                if (!other.sint64ValueIds_.isEmpty()) {
                    if (sint64ValueIds_.isEmpty()) {
                        sint64ValueIds_ = other.sint64ValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000080);
                    } else {
                        ensureSint64ValueIdsIsMutable();
                        sint64ValueIds_.addAll(other.sint64ValueIds_);
                    }
                    onChanged();
                }
                if (!other.boolKeyIds_.isEmpty()) {
                    if (boolKeyIds_.isEmpty()) {
                        boolKeyIds_ = other.boolKeyIds_;
                        bitField0_ = (bitField0_ & ~0x00000100);
                    } else {
                        ensureBoolKeyIdsIsMutable();
                        boolKeyIds_.addAll(other.boolKeyIds_);
                    }
                    onChanged();
                }
                if (!other.boolValues_.isEmpty()) {
                    if (boolValues_.isEmpty()) {
                        boolValues_ = other.boolValues_;
                        bitField0_ = (bitField0_ & ~0x00000200);
                    } else {
                        ensureBoolValuesIsMutable();
                        boolValues_.addAll(other.boolValues_);
                    }
                    onChanged();
                }
                if (!other.stringKeyIds_.isEmpty()) {
                    if (stringKeyIds_.isEmpty()) {
                        stringKeyIds_ = other.stringKeyIds_;
                        bitField0_ = (bitField0_ & ~0x00000400);
                    } else {
                        ensureStringKeyIdsIsMutable();
                        stringKeyIds_.addAll(other.stringKeyIds_);
                    }
                    onChanged();
                }
                if (!other.stringValueIds_.isEmpty()) {
                    if (stringValueIds_.isEmpty()) {
                        stringValueIds_ = other.stringValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000800);
                    } else {
                        ensureStringValueIdsIsMutable();
                        stringValueIds_.addAll(other.stringValueIds_);
                    }
                    onChanged();
                }
                if (!other.bytesKeyIds_.isEmpty()) {
                    if (bytesKeyIds_.isEmpty()) {
                        bytesKeyIds_ = other.bytesKeyIds_;
                        bitField0_ = (bitField0_ & ~0x00001000);
                    } else {
                        ensureBytesKeyIdsIsMutable();
                        bytesKeyIds_.addAll(other.bytesKeyIds_);
                    }
                    onChanged();
                }
                if (!other.bytesValueIds_.isEmpty()) {
                    if (bytesValueIds_.isEmpty()) {
                        bytesValueIds_ = other.bytesValueIds_;
                        bitField0_ = (bitField0_ & ~0x00002000);
                    } else {
                        ensureBytesValueIdsIsMutable();
                        bytesValueIds_.addAll(other.bytesValueIds_);
                    }
                    onChanged();
                }
                if (!other.listKeyIds_.isEmpty()) {
                    if (listKeyIds_.isEmpty()) {
                        listKeyIds_ = other.listKeyIds_;
                        bitField0_ = (bitField0_ & ~0x00004000);
                    } else {
                        ensureListKeyIdsIsMutable();
                        listKeyIds_.addAll(other.listKeyIds_);
                    }
                    onChanged();
                }
                if (listValuesBuilder_ == null) {
                    if (!other.listValues_.isEmpty()) {
                        if (listValues_.isEmpty()) {
                            listValues_ = other.listValues_;
                            bitField0_ = (bitField0_ & ~0x00008000);
                        } else {
                            ensureListValuesIsMutable();
                            listValues_.addAll(other.listValues_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.listValues_.isEmpty()) {
                        if (listValuesBuilder_.isEmpty()) {
                            listValuesBuilder_.dispose();
                            listValuesBuilder_ = null;
                            listValues_ = other.listValues_;
                            bitField0_ = (bitField0_ & ~0x00008000);
                            listValuesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getListValuesFieldBuilder() : null;
                        } else {
                            listValuesBuilder_.addAllMessages(other.listValues_);
                        }
                    }
                }
                if (!other.subMapKeyIds_.isEmpty()) {
                    if (subMapKeyIds_.isEmpty()) {
                        subMapKeyIds_ = other.subMapKeyIds_;
                        bitField0_ = (bitField0_ & ~0x00010000);
                    } else {
                        ensureSubMapKeyIdsIsMutable();
                        subMapKeyIds_.addAll(other.subMapKeyIds_);
                    }
                    onChanged();
                }
                if (subMapValuesBuilder_ == null) {
                    if (!other.subMapValues_.isEmpty()) {
                        if (subMapValues_.isEmpty()) {
                            subMapValues_ = other.subMapValues_;
                            bitField0_ = (bitField0_ & ~0x00020000);
                        } else {
                            ensureSubMapValuesIsMutable();
                            subMapValues_.addAll(other.subMapValues_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.subMapValues_.isEmpty()) {
                        if (subMapValuesBuilder_.isEmpty()) {
                            subMapValuesBuilder_.dispose();
                            subMapValuesBuilder_ = null;
                            subMapValues_ = other.subMapValues_;
                            bitField0_ = (bitField0_ & ~0x00020000);
                            subMapValuesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getSubMapValuesFieldBuilder() : null;
                        } else {
                            subMapValuesBuilder_.addAllMessages(other.subMapValues_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Map parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Map) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.Internal.IntList doubleKeyIds_ = emptyIntList();

            private void ensureDoubleKeyIdsIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    doubleKeyIds_ = mutableCopy(doubleKeyIds_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <pre>
             * keyId、valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleKeyIds = 1;</code>
             *
             * @return A list containing the doubleKeyIds.
             */
            public java.util.List<Integer>
            getDoubleKeyIdsList() {
                return ((bitField0_ & 0x00000001) != 0) ?
                        java.util.Collections.unmodifiableList(doubleKeyIds_) : doubleKeyIds_;
            }

            /**
             * <pre>
             * keyId、valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleKeyIds = 1;</code>
             *
             * @return The count of doubleKeyIds.
             */
            public int getDoubleKeyIdsCount() {
                return doubleKeyIds_.size();
            }

            /**
             * <pre>
             * keyId、valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleKeyIds = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The doubleKeyIds at the given index.
             */
            public int getDoubleKeyIds(int index) {
                return doubleKeyIds_.getInt(index);
            }

            /**
             * <pre>
             * keyId、valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleKeyIds = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The doubleKeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setDoubleKeyIds(
                    int index, int value) {
                ensureDoubleKeyIdsIsMutable();
                doubleKeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * keyId、valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleKeyIds = 1;</code>
             *
             * @param value The doubleKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addDoubleKeyIds(int value) {
                ensureDoubleKeyIdsIsMutable();
                doubleKeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * keyId、valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleKeyIds = 1;</code>
             *
             * @param values The doubleKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllDoubleKeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureDoubleKeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, doubleKeyIds_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * keyId、valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleKeyIds = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearDoubleKeyIds() {
                doubleKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList doubleValueIds_ = emptyIntList();

            private void ensureDoubleValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    doubleValueIds_ = mutableCopy(doubleValueIds_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @return A list containing the doubleValueIds.
             */
            public java.util.List<Integer>
            getDoubleValueIdsList() {
                return ((bitField0_ & 0x00000002) != 0) ?
                        java.util.Collections.unmodifiableList(doubleValueIds_) : doubleValueIds_;
            }

            /**
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @return The count of doubleValueIds.
             */
            public int getDoubleValueIdsCount() {
                return doubleValueIds_.size();
            }

            /**
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The doubleValueIds at the given index.
             */
            public int getDoubleValueIds(int index) {
                return doubleValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The doubleValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setDoubleValueIds(
                    int index, int value) {
                ensureDoubleValueIdsIsMutable();
                doubleValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @param value The doubleValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addDoubleValueIds(int value) {
                ensureDoubleValueIdsIsMutable();
                doubleValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @param values The doubleValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllDoubleValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureDoubleValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, doubleValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearDoubleValueIds() {
                doubleValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList floatKeyIds_ = emptyIntList();

            private void ensureFloatKeyIdsIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    floatKeyIds_ = mutableCopy(floatKeyIds_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated int32 floatKeyIds = 3;</code>
             *
             * @return A list containing the floatKeyIds.
             */
            public java.util.List<Integer>
            getFloatKeyIdsList() {
                return ((bitField0_ & 0x00000004) != 0) ?
                        java.util.Collections.unmodifiableList(floatKeyIds_) : floatKeyIds_;
            }

            /**
             * <code>repeated int32 floatKeyIds = 3;</code>
             *
             * @return The count of floatKeyIds.
             */
            public int getFloatKeyIdsCount() {
                return floatKeyIds_.size();
            }

            /**
             * <code>repeated int32 floatKeyIds = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The floatKeyIds at the given index.
             */
            public int getFloatKeyIds(int index) {
                return floatKeyIds_.getInt(index);
            }

            /**
             * <code>repeated int32 floatKeyIds = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The floatKeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setFloatKeyIds(
                    int index, int value) {
                ensureFloatKeyIdsIsMutable();
                floatKeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatKeyIds = 3;</code>
             *
             * @param value The floatKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addFloatKeyIds(int value) {
                ensureFloatKeyIdsIsMutable();
                floatKeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatKeyIds = 3;</code>
             *
             * @param values The floatKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllFloatKeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureFloatKeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, floatKeyIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatKeyIds = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearFloatKeyIds() {
                floatKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList floatValueIds_ = emptyIntList();

            private void ensureFloatValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    floatValueIds_ = mutableCopy(floatValueIds_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <code>repeated int32 floatValueIds = 4;</code>
             *
             * @return A list containing the floatValueIds.
             */
            public java.util.List<Integer>
            getFloatValueIdsList() {
                return ((bitField0_ & 0x00000008) != 0) ?
                        java.util.Collections.unmodifiableList(floatValueIds_) : floatValueIds_;
            }

            /**
             * <code>repeated int32 floatValueIds = 4;</code>
             *
             * @return The count of floatValueIds.
             */
            public int getFloatValueIdsCount() {
                return floatValueIds_.size();
            }

            /**
             * <code>repeated int32 floatValueIds = 4;</code>
             *
             * @param index The index of the element to return.
             * @return The floatValueIds at the given index.
             */
            public int getFloatValueIds(int index) {
                return floatValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 floatValueIds = 4;</code>
             *
             * @param index The index to set the value at.
             * @param value The floatValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setFloatValueIds(
                    int index, int value) {
                ensureFloatValueIdsIsMutable();
                floatValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatValueIds = 4;</code>
             *
             * @param value The floatValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addFloatValueIds(int value) {
                ensureFloatValueIdsIsMutable();
                floatValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatValueIds = 4;</code>
             *
             * @param values The floatValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllFloatValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureFloatValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, floatValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatValueIds = 4;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearFloatValueIds() {
                floatValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList sint32KeyIds_ = emptyIntList();

            private void ensureSint32KeyIdsIsMutable() {
                if (!((bitField0_ & 0x00000010) != 0)) {
                    sint32KeyIds_ = mutableCopy(sint32KeyIds_);
                    bitField0_ |= 0x00000010;
                }
            }

            /**
             * <code>repeated int32 sint32KeyIds = 5;</code>
             *
             * @return A list containing the sint32KeyIds.
             */
            public java.util.List<Integer>
            getSint32KeyIdsList() {
                return ((bitField0_ & 0x00000010) != 0) ?
                        java.util.Collections.unmodifiableList(sint32KeyIds_) : sint32KeyIds_;
            }

            /**
             * <code>repeated int32 sint32KeyIds = 5;</code>
             *
             * @return The count of sint32KeyIds.
             */
            public int getSint32KeyIdsCount() {
                return sint32KeyIds_.size();
            }

            /**
             * <code>repeated int32 sint32KeyIds = 5;</code>
             *
             * @param index The index of the element to return.
             * @return The sint32KeyIds at the given index.
             */
            public int getSint32KeyIds(int index) {
                return sint32KeyIds_.getInt(index);
            }

            /**
             * <code>repeated int32 sint32KeyIds = 5;</code>
             *
             * @param index The index to set the value at.
             * @param value The sint32KeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSint32KeyIds(
                    int index, int value) {
                ensureSint32KeyIdsIsMutable();
                sint32KeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32KeyIds = 5;</code>
             *
             * @param value The sint32KeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSint32KeyIds(int value) {
                ensureSint32KeyIdsIsMutable();
                sint32KeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32KeyIds = 5;</code>
             *
             * @param values The sint32KeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSint32KeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSint32KeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sint32KeyIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32KeyIds = 5;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSint32KeyIds() {
                sint32KeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList sint32ValueIds_ = emptyIntList();

            private void ensureSint32ValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000020) != 0)) {
                    sint32ValueIds_ = mutableCopy(sint32ValueIds_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <code>repeated int32 sint32ValueIds = 6;</code>
             *
             * @return A list containing the sint32ValueIds.
             */
            public java.util.List<Integer>
            getSint32ValueIdsList() {
                return ((bitField0_ & 0x00000020) != 0) ?
                        java.util.Collections.unmodifiableList(sint32ValueIds_) : sint32ValueIds_;
            }

            /**
             * <code>repeated int32 sint32ValueIds = 6;</code>
             *
             * @return The count of sint32ValueIds.
             */
            public int getSint32ValueIdsCount() {
                return sint32ValueIds_.size();
            }

            /**
             * <code>repeated int32 sint32ValueIds = 6;</code>
             *
             * @param index The index of the element to return.
             * @return The sint32ValueIds at the given index.
             */
            public int getSint32ValueIds(int index) {
                return sint32ValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 sint32ValueIds = 6;</code>
             *
             * @param index The index to set the value at.
             * @param value The sint32ValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSint32ValueIds(
                    int index, int value) {
                ensureSint32ValueIdsIsMutable();
                sint32ValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32ValueIds = 6;</code>
             *
             * @param value The sint32ValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSint32ValueIds(int value) {
                ensureSint32ValueIdsIsMutable();
                sint32ValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32ValueIds = 6;</code>
             *
             * @param values The sint32ValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSint32ValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSint32ValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sint32ValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32ValueIds = 6;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSint32ValueIds() {
                sint32ValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList sint64KeyIds_ = emptyIntList();

            private void ensureSint64KeyIdsIsMutable() {
                if (!((bitField0_ & 0x00000040) != 0)) {
                    sint64KeyIds_ = mutableCopy(sint64KeyIds_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <code>repeated int32 sint64KeyIds = 7;</code>
             *
             * @return A list containing the sint64KeyIds.
             */
            public java.util.List<Integer>
            getSint64KeyIdsList() {
                return ((bitField0_ & 0x00000040) != 0) ?
                        java.util.Collections.unmodifiableList(sint64KeyIds_) : sint64KeyIds_;
            }

            /**
             * <code>repeated int32 sint64KeyIds = 7;</code>
             *
             * @return The count of sint64KeyIds.
             */
            public int getSint64KeyIdsCount() {
                return sint64KeyIds_.size();
            }

            /**
             * <code>repeated int32 sint64KeyIds = 7;</code>
             *
             * @param index The index of the element to return.
             * @return The sint64KeyIds at the given index.
             */
            public int getSint64KeyIds(int index) {
                return sint64KeyIds_.getInt(index);
            }

            /**
             * <code>repeated int32 sint64KeyIds = 7;</code>
             *
             * @param index The index to set the value at.
             * @param value The sint64KeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSint64KeyIds(
                    int index, int value) {
                ensureSint64KeyIdsIsMutable();
                sint64KeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64KeyIds = 7;</code>
             *
             * @param value The sint64KeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSint64KeyIds(int value) {
                ensureSint64KeyIdsIsMutable();
                sint64KeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64KeyIds = 7;</code>
             *
             * @param values The sint64KeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSint64KeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSint64KeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sint64KeyIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64KeyIds = 7;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSint64KeyIds() {
                sint64KeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList sint64ValueIds_ = emptyIntList();

            private void ensureSint64ValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000080) != 0)) {
                    sint64ValueIds_ = mutableCopy(sint64ValueIds_);
                    bitField0_ |= 0x00000080;
                }
            }

            /**
             * <code>repeated int32 sint64ValueIds = 8;</code>
             *
             * @return A list containing the sint64ValueIds.
             */
            public java.util.List<Integer>
            getSint64ValueIdsList() {
                return ((bitField0_ & 0x00000080) != 0) ?
                        java.util.Collections.unmodifiableList(sint64ValueIds_) : sint64ValueIds_;
            }

            /**
             * <code>repeated int32 sint64ValueIds = 8;</code>
             *
             * @return The count of sint64ValueIds.
             */
            public int getSint64ValueIdsCount() {
                return sint64ValueIds_.size();
            }

            /**
             * <code>repeated int32 sint64ValueIds = 8;</code>
             *
             * @param index The index of the element to return.
             * @return The sint64ValueIds at the given index.
             */
            public int getSint64ValueIds(int index) {
                return sint64ValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 sint64ValueIds = 8;</code>
             *
             * @param index The index to set the value at.
             * @param value The sint64ValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSint64ValueIds(
                    int index, int value) {
                ensureSint64ValueIdsIsMutable();
                sint64ValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64ValueIds = 8;</code>
             *
             * @param value The sint64ValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSint64ValueIds(int value) {
                ensureSint64ValueIdsIsMutable();
                sint64ValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64ValueIds = 8;</code>
             *
             * @param values The sint64ValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSint64ValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSint64ValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sint64ValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64ValueIds = 8;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSint64ValueIds() {
                sint64ValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000080);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList boolKeyIds_ = emptyIntList();

            private void ensureBoolKeyIdsIsMutable() {
                if (!((bitField0_ & 0x00000100) != 0)) {
                    boolKeyIds_ = mutableCopy(boolKeyIds_);
                    bitField0_ |= 0x00000100;
                }
            }

            /**
             * <code>repeated int32 boolKeyIds = 9;</code>
             *
             * @return A list containing the boolKeyIds.
             */
            public java.util.List<Integer>
            getBoolKeyIdsList() {
                return ((bitField0_ & 0x00000100) != 0) ?
                        java.util.Collections.unmodifiableList(boolKeyIds_) : boolKeyIds_;
            }

            /**
             * <code>repeated int32 boolKeyIds = 9;</code>
             *
             * @return The count of boolKeyIds.
             */
            public int getBoolKeyIdsCount() {
                return boolKeyIds_.size();
            }

            /**
             * <code>repeated int32 boolKeyIds = 9;</code>
             *
             * @param index The index of the element to return.
             * @return The boolKeyIds at the given index.
             */
            public int getBoolKeyIds(int index) {
                return boolKeyIds_.getInt(index);
            }

            /**
             * <code>repeated int32 boolKeyIds = 9;</code>
             *
             * @param index The index to set the value at.
             * @param value The boolKeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setBoolKeyIds(
                    int index, int value) {
                ensureBoolKeyIdsIsMutable();
                boolKeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 boolKeyIds = 9;</code>
             *
             * @param value The boolKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addBoolKeyIds(int value) {
                ensureBoolKeyIdsIsMutable();
                boolKeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 boolKeyIds = 9;</code>
             *
             * @param values The boolKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllBoolKeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureBoolKeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, boolKeyIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 boolKeyIds = 9;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearBoolKeyIds() {
                boolKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000100);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.BooleanList boolValues_ = emptyBooleanList();

            private void ensureBoolValuesIsMutable() {
                if (!((bitField0_ & 0x00000200) != 0)) {
                    boolValues_ = mutableCopy(boolValues_);
                    bitField0_ |= 0x00000200;
                }
            }

            /**
             * <code>repeated bool boolValues = 10;</code>
             *
             * @return A list containing the boolValues.
             */
            public java.util.List<Boolean>
            getBoolValuesList() {
                return ((bitField0_ & 0x00000200) != 0) ?
                        java.util.Collections.unmodifiableList(boolValues_) : boolValues_;
            }

            /**
             * <code>repeated bool boolValues = 10;</code>
             *
             * @return The count of boolValues.
             */
            public int getBoolValuesCount() {
                return boolValues_.size();
            }

            /**
             * <code>repeated bool boolValues = 10;</code>
             *
             * @param index The index of the element to return.
             * @return The boolValues at the given index.
             */
            public boolean getBoolValues(int index) {
                return boolValues_.getBoolean(index);
            }

            /**
             * <code>repeated bool boolValues = 10;</code>
             *
             * @param index The index to set the value at.
             * @param value The boolValues to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setBoolValues(
                    int index, boolean value) {
                ensureBoolValuesIsMutable();
                boolValues_.setBoolean(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bool boolValues = 10;</code>
             *
             * @param value The boolValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addBoolValues(boolean value) {
                ensureBoolValuesIsMutable();
                boolValues_.addBoolean(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bool boolValues = 10;</code>
             *
             * @param values The boolValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllBoolValues(
                    @NotNull Iterable<? extends Boolean> values) {
                ensureBoolValuesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, boolValues_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bool boolValues = 10;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearBoolValues() {
                boolValues_ = emptyBooleanList();
                bitField0_ = (bitField0_ & ~0x00000200);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList stringKeyIds_ = emptyIntList();

            private void ensureStringKeyIdsIsMutable() {
                if (!((bitField0_ & 0x00000400) != 0)) {
                    stringKeyIds_ = mutableCopy(stringKeyIds_);
                    bitField0_ |= 0x00000400;
                }
            }

            /**
             * <code>repeated int32 stringKeyIds = 11;</code>
             *
             * @return A list containing the stringKeyIds.
             */
            public java.util.List<Integer>
            getStringKeyIdsList() {
                return ((bitField0_ & 0x00000400) != 0) ?
                        java.util.Collections.unmodifiableList(stringKeyIds_) : stringKeyIds_;
            }

            /**
             * <code>repeated int32 stringKeyIds = 11;</code>
             *
             * @return The count of stringKeyIds.
             */
            public int getStringKeyIdsCount() {
                return stringKeyIds_.size();
            }

            /**
             * <code>repeated int32 stringKeyIds = 11;</code>
             *
             * @param index The index of the element to return.
             * @return The stringKeyIds at the given index.
             */
            public int getStringKeyIds(int index) {
                return stringKeyIds_.getInt(index);
            }

            /**
             * <code>repeated int32 stringKeyIds = 11;</code>
             *
             * @param index The index to set the value at.
             * @param value The stringKeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setStringKeyIds(
                    int index, int value) {
                ensureStringKeyIdsIsMutable();
                stringKeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringKeyIds = 11;</code>
             *
             * @param value The stringKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addStringKeyIds(int value) {
                ensureStringKeyIdsIsMutable();
                stringKeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringKeyIds = 11;</code>
             *
             * @param values The stringKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllStringKeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureStringKeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, stringKeyIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringKeyIds = 11;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearStringKeyIds() {
                stringKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000400);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList stringValueIds_ = emptyIntList();

            private void ensureStringValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000800) != 0)) {
                    stringValueIds_ = mutableCopy(stringValueIds_);
                    bitField0_ |= 0x00000800;
                }
            }

            /**
             * <code>repeated int32 stringValueIds = 12;</code>
             *
             * @return A list containing the stringValueIds.
             */
            public java.util.List<Integer>
            getStringValueIdsList() {
                return ((bitField0_ & 0x00000800) != 0) ?
                        java.util.Collections.unmodifiableList(stringValueIds_) : stringValueIds_;
            }

            /**
             * <code>repeated int32 stringValueIds = 12;</code>
             *
             * @return The count of stringValueIds.
             */
            public int getStringValueIdsCount() {
                return stringValueIds_.size();
            }

            /**
             * <code>repeated int32 stringValueIds = 12;</code>
             *
             * @param index The index of the element to return.
             * @return The stringValueIds at the given index.
             */
            public int getStringValueIds(int index) {
                return stringValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 stringValueIds = 12;</code>
             *
             * @param index The index to set the value at.
             * @param value The stringValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setStringValueIds(
                    int index, int value) {
                ensureStringValueIdsIsMutable();
                stringValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringValueIds = 12;</code>
             *
             * @param value The stringValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addStringValueIds(int value) {
                ensureStringValueIdsIsMutable();
                stringValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringValueIds = 12;</code>
             *
             * @param values The stringValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllStringValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureStringValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, stringValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringValueIds = 12;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearStringValueIds() {
                stringValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000800);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList bytesKeyIds_ = emptyIntList();

            private void ensureBytesKeyIdsIsMutable() {
                if (!((bitField0_ & 0x00001000) != 0)) {
                    bytesKeyIds_ = mutableCopy(bytesKeyIds_);
                    bitField0_ |= 0x00001000;
                }
            }

            /**
             * <code>repeated int32 bytesKeyIds = 13;</code>
             *
             * @return A list containing the bytesKeyIds.
             */
            public java.util.List<Integer>
            getBytesKeyIdsList() {
                return ((bitField0_ & 0x00001000) != 0) ?
                        java.util.Collections.unmodifiableList(bytesKeyIds_) : bytesKeyIds_;
            }

            /**
             * <code>repeated int32 bytesKeyIds = 13;</code>
             *
             * @return The count of bytesKeyIds.
             */
            public int getBytesKeyIdsCount() {
                return bytesKeyIds_.size();
            }

            /**
             * <code>repeated int32 bytesKeyIds = 13;</code>
             *
             * @param index The index of the element to return.
             * @return The bytesKeyIds at the given index.
             */
            public int getBytesKeyIds(int index) {
                return bytesKeyIds_.getInt(index);
            }

            /**
             * <code>repeated int32 bytesKeyIds = 13;</code>
             *
             * @param index The index to set the value at.
             * @param value The bytesKeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setBytesKeyIds(
                    int index, int value) {
                ensureBytesKeyIdsIsMutable();
                bytesKeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesKeyIds = 13;</code>
             *
             * @param value The bytesKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addBytesKeyIds(int value) {
                ensureBytesKeyIdsIsMutable();
                bytesKeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesKeyIds = 13;</code>
             *
             * @param values The bytesKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllBytesKeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureBytesKeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, bytesKeyIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesKeyIds = 13;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearBytesKeyIds() {
                bytesKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00001000);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList bytesValueIds_ = emptyIntList();

            private void ensureBytesValueIdsIsMutable() {
                if (!((bitField0_ & 0x00002000) != 0)) {
                    bytesValueIds_ = mutableCopy(bytesValueIds_);
                    bitField0_ |= 0x00002000;
                }
            }

            /**
             * <code>repeated int32 bytesValueIds = 14;</code>
             *
             * @return A list containing the bytesValueIds.
             */
            public java.util.List<Integer>
            getBytesValueIdsList() {
                return ((bitField0_ & 0x00002000) != 0) ?
                        java.util.Collections.unmodifiableList(bytesValueIds_) : bytesValueIds_;
            }

            /**
             * <code>repeated int32 bytesValueIds = 14;</code>
             *
             * @return The count of bytesValueIds.
             */
            public int getBytesValueIdsCount() {
                return bytesValueIds_.size();
            }

            /**
             * <code>repeated int32 bytesValueIds = 14;</code>
             *
             * @param index The index of the element to return.
             * @return The bytesValueIds at the given index.
             */
            public int getBytesValueIds(int index) {
                return bytesValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 bytesValueIds = 14;</code>
             *
             * @param index The index to set the value at.
             * @param value The bytesValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setBytesValueIds(
                    int index, int value) {
                ensureBytesValueIdsIsMutable();
                bytesValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesValueIds = 14;</code>
             *
             * @param value The bytesValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addBytesValueIds(int value) {
                ensureBytesValueIdsIsMutable();
                bytesValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesValueIds = 14;</code>
             *
             * @param values The bytesValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllBytesValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureBytesValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, bytesValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesValueIds = 14;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearBytesValueIds() {
                bytesValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00002000);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList listKeyIds_ = emptyIntList();

            private void ensureListKeyIdsIsMutable() {
                if (!((bitField0_ & 0x00004000) != 0)) {
                    listKeyIds_ = mutableCopy(listKeyIds_);
                    bitField0_ |= 0x00004000;
                }
            }

            /**
             * <pre>
             * list keyId、valueId
             * </pre>
             *
             * <code>repeated int32 listKeyIds = 15;</code>
             *
             * @return A list containing the listKeyIds.
             */
            public java.util.List<Integer>
            getListKeyIdsList() {
                return ((bitField0_ & 0x00004000) != 0) ?
                        java.util.Collections.unmodifiableList(listKeyIds_) : listKeyIds_;
            }

            /**
             * <pre>
             * list keyId、valueId
             * </pre>
             *
             * <code>repeated int32 listKeyIds = 15;</code>
             *
             * @return The count of listKeyIds.
             */
            public int getListKeyIdsCount() {
                return listKeyIds_.size();
            }

            /**
             * <pre>
             * list keyId、valueId
             * </pre>
             *
             * <code>repeated int32 listKeyIds = 15;</code>
             *
             * @param index The index of the element to return.
             * @return The listKeyIds at the given index.
             */
            public int getListKeyIds(int index) {
                return listKeyIds_.getInt(index);
            }

            /**
             * <pre>
             * list keyId、valueId
             * </pre>
             *
             * <code>repeated int32 listKeyIds = 15;</code>
             *
             * @param index The index to set the value at.
             * @param value The listKeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setListKeyIds(
                    int index, int value) {
                ensureListKeyIdsIsMutable();
                listKeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * list keyId、valueId
             * </pre>
             *
             * <code>repeated int32 listKeyIds = 15;</code>
             *
             * @param value The listKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addListKeyIds(int value) {
                ensureListKeyIdsIsMutable();
                listKeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * list keyId、valueId
             * </pre>
             *
             * <code>repeated int32 listKeyIds = 15;</code>
             *
             * @param values The listKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllListKeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureListKeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, listKeyIds_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * list keyId、valueId
             * </pre>
             *
             * <code>repeated int32 listKeyIds = 15;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearListKeyIds() {
                listKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00004000);
                onChanged();
                return this;
            }

            private java.util.@Nullable List<List> listValues_ =
                    java.util.Collections.emptyList();

            private void ensureListValuesIsMutable() {
                if (!((bitField0_ & 0x00008000) != 0)) {
                    listValues_ = new java.util.ArrayList<List>(listValues_);
                    bitField0_ |= 0x00008000;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    List, List.Builder, ListOrBuilder> listValuesBuilder_;

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public java.util.List<List> getListValuesList() {
                if (listValuesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(listValues_);
                } else {
                    return listValuesBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public int getListValuesCount() {
                if (listValuesBuilder_ == null) {
                    return listValues_.size();
                } else {
                    return listValuesBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public List getListValues(int index) {
                if (listValuesBuilder_ == null) {
                    return listValues_.get(index);
                } else {
                    return listValuesBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder setListValues(
                    int index, @Nullable List value) {
                if (listValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureListValuesIsMutable();
                    listValues_.set(index, value);
                    onChanged();
                } else {
                    listValuesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder setListValues(
                    int index, List.@NotNull Builder builderForValue) {
                if (listValuesBuilder_ == null) {
                    ensureListValuesIsMutable();
                    listValues_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    listValuesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder addListValues(@Nullable List value) {
                if (listValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureListValuesIsMutable();
                    listValues_.add(value);
                    onChanged();
                } else {
                    listValuesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder addListValues(
                    int index, @Nullable List value) {
                if (listValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureListValuesIsMutable();
                    listValues_.add(index, value);
                    onChanged();
                } else {
                    listValuesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder addListValues(
                    List.@NotNull Builder builderForValue) {
                if (listValuesBuilder_ == null) {
                    ensureListValuesIsMutable();
                    listValues_.add(builderForValue.build());
                    onChanged();
                } else {
                    listValuesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder addListValues(
                    int index, List.@NotNull Builder builderForValue) {
                if (listValuesBuilder_ == null) {
                    ensureListValuesIsMutable();
                    listValues_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    listValuesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder addAllListValues(
                    @NotNull Iterable<? extends List> values) {
                if (listValuesBuilder_ == null) {
                    ensureListValuesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, listValues_);
                    onChanged();
                } else {
                    listValuesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder clearListValues() {
                if (listValuesBuilder_ == null) {
                    listValues_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00008000);
                    onChanged();
                } else {
                    listValuesBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public @NotNull Builder removeListValues(int index) {
                if (listValuesBuilder_ == null) {
                    ensureListValuesIsMutable();
                    listValues_.remove(index);
                    onChanged();
                } else {
                    listValuesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public List.Builder getListValuesBuilder(
                    int index) {
                return getListValuesFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public ListOrBuilder getListValuesOrBuilder(
                    int index) {
                if (listValuesBuilder_ == null) {
                    return listValues_.get(index);
                } else {
                    return listValuesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public java.util.List<? extends ListOrBuilder>
            getListValuesOrBuilderList() {
                if (listValuesBuilder_ != null) {
                    return listValuesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(listValues_);
                }
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public List.Builder addListValuesBuilder() {
                return getListValuesFieldBuilder().addBuilder(
                        List.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public List.Builder addListValuesBuilder(
                    int index) {
                return getListValuesFieldBuilder().addBuilder(
                        index, List.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.List listValues = 16;</code>
             */
            public java.util.List<List.Builder>
            getListValuesBuilderList() {
                return getListValuesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    List, List.Builder, ListOrBuilder>
            getListValuesFieldBuilder() {
                if (listValuesBuilder_ == null) {
                    listValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            List, List.Builder, ListOrBuilder>(
                            listValues_,
                            ((bitField0_ & 0x00008000) != 0),
                            getParentForChildren(),
                            isClean());
                    listValues_ = null;
                }
                return listValuesBuilder_;
            }

            private com.google.protobuf.Internal.IntList subMapKeyIds_ = emptyIntList();

            private void ensureSubMapKeyIdsIsMutable() {
                if (!((bitField0_ & 0x00010000) != 0)) {
                    subMapKeyIds_ = mutableCopy(subMapKeyIds_);
                    bitField0_ |= 0x00010000;
                }
            }

            /**
             * <pre>
             * children keyId、valueId
             * </pre>
             *
             * <code>repeated int32 subMapKeyIds = 17;</code>
             *
             * @return A list containing the subMapKeyIds.
             */
            public java.util.List<Integer>
            getSubMapKeyIdsList() {
                return ((bitField0_ & 0x00010000) != 0) ?
                        java.util.Collections.unmodifiableList(subMapKeyIds_) : subMapKeyIds_;
            }

            /**
             * <pre>
             * children keyId、valueId
             * </pre>
             *
             * <code>repeated int32 subMapKeyIds = 17;</code>
             *
             * @return The count of subMapKeyIds.
             */
            public int getSubMapKeyIdsCount() {
                return subMapKeyIds_.size();
            }

            /**
             * <pre>
             * children keyId、valueId
             * </pre>
             *
             * <code>repeated int32 subMapKeyIds = 17;</code>
             *
             * @param index The index of the element to return.
             * @return The subMapKeyIds at the given index.
             */
            public int getSubMapKeyIds(int index) {
                return subMapKeyIds_.getInt(index);
            }

            /**
             * <pre>
             * children keyId、valueId
             * </pre>
             *
             * <code>repeated int32 subMapKeyIds = 17;</code>
             *
             * @param index The index to set the value at.
             * @param value The subMapKeyIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSubMapKeyIds(
                    int index, int value) {
                ensureSubMapKeyIdsIsMutable();
                subMapKeyIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * children keyId、valueId
             * </pre>
             *
             * <code>repeated int32 subMapKeyIds = 17;</code>
             *
             * @param value The subMapKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSubMapKeyIds(int value) {
                ensureSubMapKeyIdsIsMutable();
                subMapKeyIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * children keyId、valueId
             * </pre>
             *
             * <code>repeated int32 subMapKeyIds = 17;</code>
             *
             * @param values The subMapKeyIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSubMapKeyIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSubMapKeyIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, subMapKeyIds_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * children keyId、valueId
             * </pre>
             *
             * <code>repeated int32 subMapKeyIds = 17;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSubMapKeyIds() {
                subMapKeyIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00010000);
                onChanged();
                return this;
            }

            private java.util.@Nullable List<Map> subMapValues_ =
                    java.util.Collections.emptyList();

            private void ensureSubMapValuesIsMutable() {
                if (!((bitField0_ & 0x00020000) != 0)) {
                    subMapValues_ = new java.util.ArrayList<Map>(subMapValues_);
                    bitField0_ |= 0x00020000;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    Map, Builder, MapOrBuilder> subMapValuesBuilder_;

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public java.util.List<Map> getSubMapValuesList() {
                if (subMapValuesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(subMapValues_);
                } else {
                    return subMapValuesBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public int getSubMapValuesCount() {
                if (subMapValuesBuilder_ == null) {
                    return subMapValues_.size();
                } else {
                    return subMapValuesBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public Map getSubMapValues(int index) {
                if (subMapValuesBuilder_ == null) {
                    return subMapValues_.get(index);
                } else {
                    return subMapValuesBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder setSubMapValues(
                    int index, @Nullable Map value) {
                if (subMapValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSubMapValuesIsMutable();
                    subMapValues_.set(index, value);
                    onChanged();
                } else {
                    subMapValuesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder setSubMapValues(
                    int index, @NotNull Builder builderForValue) {
                if (subMapValuesBuilder_ == null) {
                    ensureSubMapValuesIsMutable();
                    subMapValues_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    subMapValuesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder addSubMapValues(@Nullable Map value) {
                if (subMapValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSubMapValuesIsMutable();
                    subMapValues_.add(value);
                    onChanged();
                } else {
                    subMapValuesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder addSubMapValues(
                    int index, @Nullable Map value) {
                if (subMapValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSubMapValuesIsMutable();
                    subMapValues_.add(index, value);
                    onChanged();
                } else {
                    subMapValuesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder addSubMapValues(
                    @NotNull Builder builderForValue) {
                if (subMapValuesBuilder_ == null) {
                    ensureSubMapValuesIsMutable();
                    subMapValues_.add(builderForValue.build());
                    onChanged();
                } else {
                    subMapValuesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder addSubMapValues(
                    int index, @NotNull Builder builderForValue) {
                if (subMapValuesBuilder_ == null) {
                    ensureSubMapValuesIsMutable();
                    subMapValues_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    subMapValuesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder addAllSubMapValues(
                    @NotNull Iterable<? extends Map> values) {
                if (subMapValuesBuilder_ == null) {
                    ensureSubMapValuesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, subMapValues_);
                    onChanged();
                } else {
                    subMapValuesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder clearSubMapValues() {
                if (subMapValuesBuilder_ == null) {
                    subMapValues_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00020000);
                    onChanged();
                } else {
                    subMapValuesBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public @NotNull Builder removeSubMapValues(int index) {
                if (subMapValuesBuilder_ == null) {
                    ensureSubMapValuesIsMutable();
                    subMapValues_.remove(index);
                    onChanged();
                } else {
                    subMapValuesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public Builder getSubMapValuesBuilder(
                    int index) {
                return getSubMapValuesFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public MapOrBuilder getSubMapValuesOrBuilder(
                    int index) {
                if (subMapValuesBuilder_ == null) {
                    return subMapValues_.get(index);
                } else {
                    return subMapValuesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public java.util.List<? extends MapOrBuilder>
            getSubMapValuesOrBuilderList() {
                if (subMapValuesBuilder_ != null) {
                    return subMapValuesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(subMapValues_);
                }
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public Builder addSubMapValuesBuilder() {
                return getSubMapValuesFieldBuilder().addBuilder(
                        Map.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public Builder addSubMapValuesBuilder(
                    int index) {
                return getSubMapValuesFieldBuilder().addBuilder(
                        index, Map.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.Map subMapValues = 18;</code>
             */
            public java.util.List<Builder>
            getSubMapValuesBuilderList() {
                return getSubMapValuesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    Map, Builder, MapOrBuilder>
            getSubMapValuesFieldBuilder() {
                if (subMapValuesBuilder_ == null) {
                    subMapValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            Map, Builder, MapOrBuilder>(
                            subMapValues_,
                            ((bitField0_ & 0x00020000) != 0),
                            getParentForChildren(),
                            isClean());
                    subMapValues_ = null;
                }
                return subMapValuesBuilder_;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.Map)
        }

        // @@protoc_insertion_point(class_scope:pojo.Map)
        private static final @NotNull Map DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Map();
        }

        public static Map getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Map>
                PARSER = new com.google.protobuf.AbstractParser<Map>() {
            @Override
            public @NotNull Map parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Map(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Map> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<Map> getParserForType() {
            return PARSER;
        }

        @Override
        public Map getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ListOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.List)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
         * </pre>
         *
         * <code>repeated int32 indexes = 1;</code>
         *
         * @return A list containing the indexes.
         */
        java.util.List<Integer> getIndexesList();

        /**
         * <pre>
         * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
         * </pre>
         *
         * <code>repeated int32 indexes = 1;</code>
         *
         * @return The count of indexes.
         */
        int getIndexesCount();

        /**
         * <pre>
         * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
         * </pre>
         *
         * <code>repeated int32 indexes = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The indexes at the given index.
         */
        int getIndexes(int index);

        /**
         * <pre>
         * 数组值id，按数组先后顺序填入
         * valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @return A list containing the doubleValueIds.
         */
        java.util.List<Integer> getDoubleValueIdsList();

        /**
         * <pre>
         * 数组值id，按数组先后顺序填入
         * valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @return The count of doubleValueIds.
         */
        int getDoubleValueIdsCount();

        /**
         * <pre>
         * 数组值id，按数组先后顺序填入
         * valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The doubleValueIds at the given index.
         */
        int getDoubleValueIds(int index);

        /**
         * <code>repeated int32 floatValueIds = 3;</code>
         *
         * @return A list containing the floatValueIds.
         */
        java.util.List<Integer> getFloatValueIdsList();

        /**
         * <code>repeated int32 floatValueIds = 3;</code>
         *
         * @return The count of floatValueIds.
         */
        int getFloatValueIdsCount();

        /**
         * <code>repeated int32 floatValueIds = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The floatValueIds at the given index.
         */
        int getFloatValueIds(int index);

        /**
         * <code>repeated int32 sint32ValueIds = 4;</code>
         *
         * @return A list containing the sint32ValueIds.
         */
        java.util.List<Integer> getSint32ValueIdsList();

        /**
         * <code>repeated int32 sint32ValueIds = 4;</code>
         *
         * @return The count of sint32ValueIds.
         */
        int getSint32ValueIdsCount();

        /**
         * <code>repeated int32 sint32ValueIds = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The sint32ValueIds at the given index.
         */
        int getSint32ValueIds(int index);

        /**
         * <code>repeated int32 sint64ValueIds = 5;</code>
         *
         * @return A list containing the sint64ValueIds.
         */
        java.util.List<Integer> getSint64ValueIdsList();

        /**
         * <code>repeated int32 sint64ValueIds = 5;</code>
         *
         * @return The count of sint64ValueIds.
         */
        int getSint64ValueIdsCount();

        /**
         * <code>repeated int32 sint64ValueIds = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The sint64ValueIds at the given index.
         */
        int getSint64ValueIds(int index);

        /**
         * <code>repeated bool boolValues = 6;</code>
         *
         * @return A list containing the boolValues.
         */
        java.util.List<Boolean> getBoolValuesList();

        /**
         * <code>repeated bool boolValues = 6;</code>
         *
         * @return The count of boolValues.
         */
        int getBoolValuesCount();

        /**
         * <code>repeated bool boolValues = 6;</code>
         *
         * @param index The index of the element to return.
         * @return The boolValues at the given index.
         */
        boolean getBoolValues(int index);

        /**
         * <code>repeated int32 stringValueIds = 7;</code>
         *
         * @return A list containing the stringValueIds.
         */
        java.util.List<Integer> getStringValueIdsList();

        /**
         * <code>repeated int32 stringValueIds = 7;</code>
         *
         * @return The count of stringValueIds.
         */
        int getStringValueIdsCount();

        /**
         * <code>repeated int32 stringValueIds = 7;</code>
         *
         * @param index The index of the element to return.
         * @return The stringValueIds at the given index.
         */
        int getStringValueIds(int index);

        /**
         * <code>repeated int32 bytesValueIds = 8;</code>
         *
         * @return A list containing the bytesValueIds.
         */
        java.util.List<Integer> getBytesValueIdsList();

        /**
         * <code>repeated int32 bytesValueIds = 8;</code>
         *
         * @return The count of bytesValueIds.
         */
        int getBytesValueIdsCount();

        /**
         * <code>repeated int32 bytesValueIds = 8;</code>
         *
         * @param index The index of the element to return.
         * @return The bytesValueIds at the given index.
         */
        int getBytesValueIds(int index);

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        java.util.List<Map>
        getMapValuesList();

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        Map getMapValues(int index);

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        int getMapValuesCount();

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        java.util.List<? extends MapOrBuilder>
        getMapValuesOrBuilderList();

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        MapOrBuilder getMapValuesOrBuilder(
                int index);

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        java.util.List<List>
        getSubListValuesList();

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        List getSubListValues(int index);

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        int getSubListValuesCount();

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        java.util.List<? extends ListOrBuilder>
        getSubListValuesOrBuilderList();

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        ListOrBuilder getSubListValuesOrBuilder(
                int index);
    }

    /**
     * <pre>
     * list 属性
     * </pre>
     * <p>
     * Protobuf type {@code pojo.List}
     */
    public static final class List extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.List)
            ListOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use List.newBuilder() to construct.
        private List(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private List() {
            indexes_ = emptyIntList();
            doubleValueIds_ = emptyIntList();
            floatValueIds_ = emptyIntList();
            sint32ValueIds_ = emptyIntList();
            sint64ValueIds_ = emptyIntList();
            boolValues_ = emptyBooleanList();
            stringValueIds_ = emptyIntList();
            bytesValueIds_ = emptyIntList();
            mapValues_ = java.util.Collections.emptyList();
            subListValues_ = java.util.Collections.emptyList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new List();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private List(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                indexes_ = newIntList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            indexes_.addInt(input.readInt32());
                            break;
                        }
                        case 10: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                indexes_ = newIntList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                indexes_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 16: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                doubleValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            doubleValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                                doubleValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                doubleValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 24: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                floatValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            floatValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                                floatValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                floatValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 32: {
                            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                sint32ValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            sint32ValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                                sint32ValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                sint32ValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 40: {
                            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                                sint64ValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            sint64ValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 42: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                                sint64ValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                sint64ValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                                boolValues_ = newBooleanList();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            boolValues_.addBoolean(input.readBool());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                                boolValues_ = newBooleanList();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                boolValues_.addBoolean(input.readBool());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                                stringValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            stringValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                                stringValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                stringValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 64: {
                            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                                bytesValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            bytesValueIds_.addInt(input.readInt32());
                            break;
                        }
                        case 66: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                                bytesValueIds_ = newIntList();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                bytesValueIds_.addInt(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 74: {
                            if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                                mapValues_ = new java.util.ArrayList<Map>();
                                mutable_bitField0_ |= 0x00000100;
                            }
                            mapValues_.add(
                                    input.readMessage(Map.parser(), extensionRegistry));
                            break;
                        }
                        case 82: {
                            if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                                subListValues_ = new java.util.ArrayList<List>();
                                mutable_bitField0_ |= 0x00000200;
                            }
                            subListValues_.add(
                                    input.readMessage(List.parser(), extensionRegistry));
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    indexes_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    doubleValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    floatValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    sint32ValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000010) != 0)) {
                    sint64ValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000020) != 0)) {
                    boolValues_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000040) != 0)) {
                    stringValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000080) != 0)) {
                    bytesValueIds_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000100) != 0)) {
                    mapValues_ = java.util.Collections.unmodifiableList(mapValues_);
                }
                if (((mutable_bitField0_ & 0x00000200) != 0)) {
                    subListValues_ = java.util.Collections.unmodifiableList(subListValues_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_List_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_List_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            List.class, Builder.class);
        }

        public static final int INDEXES_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.IntList indexes_;

        /**
         * <pre>
         * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
         * </pre>
         *
         * <code>repeated int32 indexes = 1;</code>
         *
         * @return A list containing the indexes.
         */
        @Override
        public java.util.List<Integer>
        getIndexesList() {
            return indexes_;
        }

        /**
         * <pre>
         * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
         * </pre>
         *
         * <code>repeated int32 indexes = 1;</code>
         *
         * @return The count of indexes.
         */
        public int getIndexesCount() {
            return indexes_.size();
        }

        /**
         * <pre>
         * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
         * </pre>
         *
         * <code>repeated int32 indexes = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The indexes at the given index.
         */
        public int getIndexes(int index) {
            return indexes_.getInt(index);
        }

        private int indexesMemoizedSerializedSize = -1;

        public static final int DOUBLEVALUEIDS_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.IntList doubleValueIds_;

        /**
         * <pre>
         * 数组值id，按数组先后顺序填入
         * valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @return A list containing the doubleValueIds.
         */
        @Override
        public java.util.List<Integer>
        getDoubleValueIdsList() {
            return doubleValueIds_;
        }

        /**
         * <pre>
         * 数组值id，按数组先后顺序填入
         * valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @return The count of doubleValueIds.
         */
        public int getDoubleValueIdsCount() {
            return doubleValueIds_.size();
        }

        /**
         * <pre>
         * 数组值id，按数组先后顺序填入
         * valueId/value
         * </pre>
         *
         * <code>repeated int32 doubleValueIds = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The doubleValueIds at the given index.
         */
        public int getDoubleValueIds(int index) {
            return doubleValueIds_.getInt(index);
        }

        private int doubleValueIdsMemoizedSerializedSize = -1;

        public static final int FLOATVALUEIDS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.IntList floatValueIds_;

        /**
         * <code>repeated int32 floatValueIds = 3;</code>
         *
         * @return A list containing the floatValueIds.
         */
        @Override
        public java.util.List<Integer>
        getFloatValueIdsList() {
            return floatValueIds_;
        }

        /**
         * <code>repeated int32 floatValueIds = 3;</code>
         *
         * @return The count of floatValueIds.
         */
        public int getFloatValueIdsCount() {
            return floatValueIds_.size();
        }

        /**
         * <code>repeated int32 floatValueIds = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The floatValueIds at the given index.
         */
        public int getFloatValueIds(int index) {
            return floatValueIds_.getInt(index);
        }

        private int floatValueIdsMemoizedSerializedSize = -1;

        public static final int SINT32VALUEIDS_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList sint32ValueIds_;

        /**
         * <code>repeated int32 sint32ValueIds = 4;</code>
         *
         * @return A list containing the sint32ValueIds.
         */
        @Override
        public java.util.List<Integer>
        getSint32ValueIdsList() {
            return sint32ValueIds_;
        }

        /**
         * <code>repeated int32 sint32ValueIds = 4;</code>
         *
         * @return The count of sint32ValueIds.
         */
        public int getSint32ValueIdsCount() {
            return sint32ValueIds_.size();
        }

        /**
         * <code>repeated int32 sint32ValueIds = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The sint32ValueIds at the given index.
         */
        public int getSint32ValueIds(int index) {
            return sint32ValueIds_.getInt(index);
        }

        private int sint32ValueIdsMemoizedSerializedSize = -1;

        public static final int SINT64VALUEIDS_FIELD_NUMBER = 5;
        private com.google.protobuf.Internal.IntList sint64ValueIds_;

        /**
         * <code>repeated int32 sint64ValueIds = 5;</code>
         *
         * @return A list containing the sint64ValueIds.
         */
        @Override
        public java.util.List<Integer>
        getSint64ValueIdsList() {
            return sint64ValueIds_;
        }

        /**
         * <code>repeated int32 sint64ValueIds = 5;</code>
         *
         * @return The count of sint64ValueIds.
         */
        public int getSint64ValueIdsCount() {
            return sint64ValueIds_.size();
        }

        /**
         * <code>repeated int32 sint64ValueIds = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The sint64ValueIds at the given index.
         */
        public int getSint64ValueIds(int index) {
            return sint64ValueIds_.getInt(index);
        }

        private int sint64ValueIdsMemoizedSerializedSize = -1;

        public static final int BOOLVALUES_FIELD_NUMBER = 6;
        private com.google.protobuf.Internal.BooleanList boolValues_;

        /**
         * <code>repeated bool boolValues = 6;</code>
         *
         * @return A list containing the boolValues.
         */
        @Override
        public java.util.List<Boolean>
        getBoolValuesList() {
            return boolValues_;
        }

        /**
         * <code>repeated bool boolValues = 6;</code>
         *
         * @return The count of boolValues.
         */
        public int getBoolValuesCount() {
            return boolValues_.size();
        }

        /**
         * <code>repeated bool boolValues = 6;</code>
         *
         * @param index The index of the element to return.
         * @return The boolValues at the given index.
         */
        public boolean getBoolValues(int index) {
            return boolValues_.getBoolean(index);
        }

        private int boolValuesMemoizedSerializedSize = -1;

        public static final int STRINGVALUEIDS_FIELD_NUMBER = 7;
        private com.google.protobuf.Internal.IntList stringValueIds_;

        /**
         * <code>repeated int32 stringValueIds = 7;</code>
         *
         * @return A list containing the stringValueIds.
         */
        @Override
        public java.util.List<Integer>
        getStringValueIdsList() {
            return stringValueIds_;
        }

        /**
         * <code>repeated int32 stringValueIds = 7;</code>
         *
         * @return The count of stringValueIds.
         */
        public int getStringValueIdsCount() {
            return stringValueIds_.size();
        }

        /**
         * <code>repeated int32 stringValueIds = 7;</code>
         *
         * @param index The index of the element to return.
         * @return The stringValueIds at the given index.
         */
        public int getStringValueIds(int index) {
            return stringValueIds_.getInt(index);
        }

        private int stringValueIdsMemoizedSerializedSize = -1;

        public static final int BYTESVALUEIDS_FIELD_NUMBER = 8;
        private com.google.protobuf.Internal.IntList bytesValueIds_;

        /**
         * <code>repeated int32 bytesValueIds = 8;</code>
         *
         * @return A list containing the bytesValueIds.
         */
        @Override
        public java.util.List<Integer>
        getBytesValueIdsList() {
            return bytesValueIds_;
        }

        /**
         * <code>repeated int32 bytesValueIds = 8;</code>
         *
         * @return The count of bytesValueIds.
         */
        public int getBytesValueIdsCount() {
            return bytesValueIds_.size();
        }

        /**
         * <code>repeated int32 bytesValueIds = 8;</code>
         *
         * @param index The index of the element to return.
         * @return The bytesValueIds at the given index.
         */
        public int getBytesValueIds(int index) {
            return bytesValueIds_.getInt(index);
        }

        private int bytesValueIdsMemoizedSerializedSize = -1;

        public static final int MAPVALUES_FIELD_NUMBER = 9;
        private java.util.List<Map> mapValues_;

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        @Override
        public java.util.List<Map> getMapValuesList() {
            return mapValues_;
        }

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        @Override
        public java.util.List<? extends MapOrBuilder>
        getMapValuesOrBuilderList() {
            return mapValues_;
        }

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        @Override
        public int getMapValuesCount() {
            return mapValues_.size();
        }

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        @Override
        public Map getMapValues(int index) {
            return mapValues_.get(index);
        }

        /**
         * <pre>
         * map
         * </pre>
         *
         * <code>repeated .pojo.Map mapValues = 9;</code>
         */
        @Override
        public MapOrBuilder getMapValuesOrBuilder(
                int index) {
            return mapValues_.get(index);
        }

        public static final int SUBLISTVALUES_FIELD_NUMBER = 10;
        private java.util.List<List> subListValues_;

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        @Override
        public java.util.List<List> getSubListValuesList() {
            return subListValues_;
        }

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        @Override
        public java.util.List<? extends ListOrBuilder>
        getSubListValuesOrBuilderList() {
            return subListValues_;
        }

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        @Override
        public int getSubListValuesCount() {
            return subListValues_.size();
        }

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        @Override
        public List getSubListValues(int index) {
            return subListValues_.get(index);
        }

        /**
         * <pre>
         * children
         * </pre>
         *
         * <code>repeated .pojo.List subListValues = 10;</code>
         */
        @Override
        public ListOrBuilder getSubListValuesOrBuilder(
                int index) {
            return subListValues_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (getIndexesList().size() > 0) {
                output.writeUInt32NoTag(10);
                output.writeUInt32NoTag(indexesMemoizedSerializedSize);
            }
            for (int i = 0; i < indexes_.size(); i++) {
                output.writeInt32NoTag(indexes_.getInt(i));
            }
            if (getDoubleValueIdsList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(doubleValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < doubleValueIds_.size(); i++) {
                output.writeInt32NoTag(doubleValueIds_.getInt(i));
            }
            if (getFloatValueIdsList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(floatValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < floatValueIds_.size(); i++) {
                output.writeInt32NoTag(floatValueIds_.getInt(i));
            }
            if (getSint32ValueIdsList().size() > 0) {
                output.writeUInt32NoTag(34);
                output.writeUInt32NoTag(sint32ValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < sint32ValueIds_.size(); i++) {
                output.writeInt32NoTag(sint32ValueIds_.getInt(i));
            }
            if (getSint64ValueIdsList().size() > 0) {
                output.writeUInt32NoTag(42);
                output.writeUInt32NoTag(sint64ValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < sint64ValueIds_.size(); i++) {
                output.writeInt32NoTag(sint64ValueIds_.getInt(i));
            }
            if (getBoolValuesList().size() > 0) {
                output.writeUInt32NoTag(50);
                output.writeUInt32NoTag(boolValuesMemoizedSerializedSize);
            }
            for (int i = 0; i < boolValues_.size(); i++) {
                output.writeBoolNoTag(boolValues_.getBoolean(i));
            }
            if (getStringValueIdsList().size() > 0) {
                output.writeUInt32NoTag(58);
                output.writeUInt32NoTag(stringValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < stringValueIds_.size(); i++) {
                output.writeInt32NoTag(stringValueIds_.getInt(i));
            }
            if (getBytesValueIdsList().size() > 0) {
                output.writeUInt32NoTag(66);
                output.writeUInt32NoTag(bytesValueIdsMemoizedSerializedSize);
            }
            for (int i = 0; i < bytesValueIds_.size(); i++) {
                output.writeInt32NoTag(bytesValueIds_.getInt(i));
            }
            for (int i = 0; i < mapValues_.size(); i++) {
                output.writeMessage(9, mapValues_.get(i));
            }
            for (int i = 0; i < subListValues_.size(); i++) {
                output.writeMessage(10, subListValues_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                for (int i = 0; i < indexes_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(indexes_.getInt(i));
                }
                size += dataSize;
                if (!getIndexesList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                indexesMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < doubleValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(doubleValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getDoubleValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                doubleValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < floatValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(floatValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getFloatValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                floatValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < sint32ValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(sint32ValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getSint32ValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                sint32ValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < sint64ValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(sint64ValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getSint64ValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                sint64ValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 1 * getBoolValuesList().size();
                size += dataSize;
                if (!getBoolValuesList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                boolValuesMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < stringValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(stringValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getStringValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                stringValueIdsMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < bytesValueIds_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(bytesValueIds_.getInt(i));
                }
                size += dataSize;
                if (!getBytesValueIdsList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                bytesValueIdsMemoizedSerializedSize = dataSize;
            }
            for (int i = 0; i < mapValues_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, mapValues_.get(i));
            }
            for (int i = 0; i < subListValues_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(10, subListValues_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof List)) {
                return super.equals(obj);
            }
            List other = (List) obj;

            if (!getIndexesList()
                    .equals(other.getIndexesList())) return false;
            if (!getDoubleValueIdsList()
                    .equals(other.getDoubleValueIdsList())) return false;
            if (!getFloatValueIdsList()
                    .equals(other.getFloatValueIdsList())) return false;
            if (!getSint32ValueIdsList()
                    .equals(other.getSint32ValueIdsList())) return false;
            if (!getSint64ValueIdsList()
                    .equals(other.getSint64ValueIdsList())) return false;
            if (!getBoolValuesList()
                    .equals(other.getBoolValuesList())) return false;
            if (!getStringValueIdsList()
                    .equals(other.getStringValueIdsList())) return false;
            if (!getBytesValueIdsList()
                    .equals(other.getBytesValueIdsList())) return false;
            if (!getMapValuesList()
                    .equals(other.getMapValuesList())) return false;
            if (!getSubListValuesList()
                    .equals(other.getSubListValuesList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getIndexesCount() > 0) {
                hash = (37 * hash) + INDEXES_FIELD_NUMBER;
                hash = (53 * hash) + getIndexesList().hashCode();
            }
            if (getDoubleValueIdsCount() > 0) {
                hash = (37 * hash) + DOUBLEVALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getDoubleValueIdsList().hashCode();
            }
            if (getFloatValueIdsCount() > 0) {
                hash = (37 * hash) + FLOATVALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getFloatValueIdsList().hashCode();
            }
            if (getSint32ValueIdsCount() > 0) {
                hash = (37 * hash) + SINT32VALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getSint32ValueIdsList().hashCode();
            }
            if (getSint64ValueIdsCount() > 0) {
                hash = (37 * hash) + SINT64VALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getSint64ValueIdsList().hashCode();
            }
            if (getBoolValuesCount() > 0) {
                hash = (37 * hash) + BOOLVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getBoolValuesList().hashCode();
            }
            if (getStringValueIdsCount() > 0) {
                hash = (37 * hash) + STRINGVALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getStringValueIdsList().hashCode();
            }
            if (getBytesValueIdsCount() > 0) {
                hash = (37 * hash) + BYTESVALUEIDS_FIELD_NUMBER;
                hash = (53 * hash) + getBytesValueIdsList().hashCode();
            }
            if (getMapValuesCount() > 0) {
                hash = (37 * hash) + MAPVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getMapValuesList().hashCode();
            }
            if (getSubListValuesCount() > 0) {
                hash = (37 * hash) + SUBLISTVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getSubListValuesList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static List parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static List parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static List parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static List parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static List parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static List parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static List parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static List parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static List parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static List parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static List parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static List parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull List prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * list 属性
         * </pre>
         * <p>
         * Protobuf type {@code pojo.List}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.List)
                ListOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_List_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_List_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                List.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.List.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getMapValuesFieldBuilder();
                    getSubListValuesFieldBuilder();
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                indexes_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000001);
                doubleValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000002);
                floatValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000004);
                sint32ValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                sint64ValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000010);
                boolValues_ = emptyBooleanList();
                bitField0_ = (bitField0_ & ~0x00000020);
                stringValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000040);
                bytesValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000080);
                if (mapValuesBuilder_ == null) {
                    mapValues_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000100);
                } else {
                    mapValuesBuilder_.clear();
                }
                if (subListValuesBuilder_ == null) {
                    subListValues_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000200);
                } else {
                    subListValuesBuilder_.clear();
                }
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_List_descriptor;
            }

            @Override
            public List getDefaultInstanceForType() {
                return List.getDefaultInstance();
            }

            @Override
            public @NotNull List build() {
                List result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull List buildPartial() {
                List result = new List(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    indexes_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.indexes_ = indexes_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    doubleValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.doubleValueIds_ = doubleValueIds_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    floatValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.floatValueIds_ = floatValueIds_;
                if (((bitField0_ & 0x00000008) != 0)) {
                    sint32ValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.sint32ValueIds_ = sint32ValueIds_;
                if (((bitField0_ & 0x00000010) != 0)) {
                    sint64ValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000010);
                }
                result.sint64ValueIds_ = sint64ValueIds_;
                if (((bitField0_ & 0x00000020) != 0)) {
                    boolValues_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.boolValues_ = boolValues_;
                if (((bitField0_ & 0x00000040) != 0)) {
                    stringValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.stringValueIds_ = stringValueIds_;
                if (((bitField0_ & 0x00000080) != 0)) {
                    bytesValueIds_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000080);
                }
                result.bytesValueIds_ = bytesValueIds_;
                if (mapValuesBuilder_ == null) {
                    if (((bitField0_ & 0x00000100) != 0)) {
                        mapValues_ = java.util.Collections.unmodifiableList(mapValues_);
                        bitField0_ = (bitField0_ & ~0x00000100);
                    }
                    result.mapValues_ = mapValues_;
                } else {
                    result.mapValues_ = mapValuesBuilder_.build();
                }
                if (subListValuesBuilder_ == null) {
                    if (((bitField0_ & 0x00000200) != 0)) {
                        subListValues_ = java.util.Collections.unmodifiableList(subListValues_);
                        bitField0_ = (bitField0_ & ~0x00000200);
                    }
                    result.subListValues_ = subListValues_;
                } else {
                    result.subListValues_ = subListValuesBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof List) {
                    return mergeFrom((List) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull List other) {
                if (other == List.getDefaultInstance()) return this;
                if (!other.indexes_.isEmpty()) {
                    if (indexes_.isEmpty()) {
                        indexes_ = other.indexes_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureIndexesIsMutable();
                        indexes_.addAll(other.indexes_);
                    }
                    onChanged();
                }
                if (!other.doubleValueIds_.isEmpty()) {
                    if (doubleValueIds_.isEmpty()) {
                        doubleValueIds_ = other.doubleValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureDoubleValueIdsIsMutable();
                        doubleValueIds_.addAll(other.doubleValueIds_);
                    }
                    onChanged();
                }
                if (!other.floatValueIds_.isEmpty()) {
                    if (floatValueIds_.isEmpty()) {
                        floatValueIds_ = other.floatValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureFloatValueIdsIsMutable();
                        floatValueIds_.addAll(other.floatValueIds_);
                    }
                    onChanged();
                }
                if (!other.sint32ValueIds_.isEmpty()) {
                    if (sint32ValueIds_.isEmpty()) {
                        sint32ValueIds_ = other.sint32ValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureSint32ValueIdsIsMutable();
                        sint32ValueIds_.addAll(other.sint32ValueIds_);
                    }
                    onChanged();
                }
                if (!other.sint64ValueIds_.isEmpty()) {
                    if (sint64ValueIds_.isEmpty()) {
                        sint64ValueIds_ = other.sint64ValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        ensureSint64ValueIdsIsMutable();
                        sint64ValueIds_.addAll(other.sint64ValueIds_);
                    }
                    onChanged();
                }
                if (!other.boolValues_.isEmpty()) {
                    if (boolValues_.isEmpty()) {
                        boolValues_ = other.boolValues_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureBoolValuesIsMutable();
                        boolValues_.addAll(other.boolValues_);
                    }
                    onChanged();
                }
                if (!other.stringValueIds_.isEmpty()) {
                    if (stringValueIds_.isEmpty()) {
                        stringValueIds_ = other.stringValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureStringValueIdsIsMutable();
                        stringValueIds_.addAll(other.stringValueIds_);
                    }
                    onChanged();
                }
                if (!other.bytesValueIds_.isEmpty()) {
                    if (bytesValueIds_.isEmpty()) {
                        bytesValueIds_ = other.bytesValueIds_;
                        bitField0_ = (bitField0_ & ~0x00000080);
                    } else {
                        ensureBytesValueIdsIsMutable();
                        bytesValueIds_.addAll(other.bytesValueIds_);
                    }
                    onChanged();
                }
                if (mapValuesBuilder_ == null) {
                    if (!other.mapValues_.isEmpty()) {
                        if (mapValues_.isEmpty()) {
                            mapValues_ = other.mapValues_;
                            bitField0_ = (bitField0_ & ~0x00000100);
                        } else {
                            ensureMapValuesIsMutable();
                            mapValues_.addAll(other.mapValues_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.mapValues_.isEmpty()) {
                        if (mapValuesBuilder_.isEmpty()) {
                            mapValuesBuilder_.dispose();
                            mapValuesBuilder_ = null;
                            mapValues_ = other.mapValues_;
                            bitField0_ = (bitField0_ & ~0x00000100);
                            mapValuesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getMapValuesFieldBuilder() : null;
                        } else {
                            mapValuesBuilder_.addAllMessages(other.mapValues_);
                        }
                    }
                }
                if (subListValuesBuilder_ == null) {
                    if (!other.subListValues_.isEmpty()) {
                        if (subListValues_.isEmpty()) {
                            subListValues_ = other.subListValues_;
                            bitField0_ = (bitField0_ & ~0x00000200);
                        } else {
                            ensureSubListValuesIsMutable();
                            subListValues_.addAll(other.subListValues_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.subListValues_.isEmpty()) {
                        if (subListValuesBuilder_.isEmpty()) {
                            subListValuesBuilder_.dispose();
                            subListValuesBuilder_ = null;
                            subListValues_ = other.subListValues_;
                            bitField0_ = (bitField0_ & ~0x00000200);
                            subListValuesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getSubListValuesFieldBuilder() : null;
                        } else {
                            subListValuesBuilder_.addAllMessages(other.subListValues_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                List parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (List) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.Internal.IntList indexes_ = emptyIntList();

            private void ensureIndexesIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    indexes_ = mutableCopy(indexes_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <pre>
             * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
             * </pre>
             *
             * <code>repeated int32 indexes = 1;</code>
             *
             * @return A list containing the indexes.
             */
            public java.util.List<Integer>
            getIndexesList() {
                return ((bitField0_ & 0x00000001) != 0) ?
                        java.util.Collections.unmodifiableList(indexes_) : indexes_;
            }

            /**
             * <pre>
             * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
             * </pre>
             *
             * <code>repeated int32 indexes = 1;</code>
             *
             * @return The count of indexes.
             */
            public int getIndexesCount() {
                return indexes_.size();
            }

            /**
             * <pre>
             * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
             * </pre>
             *
             * <code>repeated int32 indexes = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The indexes at the given index.
             */
            public int getIndexes(int index) {
                return indexes_.getInt(index);
            }

            /**
             * <pre>
             * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
             * </pre>
             *
             * <code>repeated int32 indexes = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The indexes to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setIndexes(
                    int index, int value) {
                ensureIndexesIsMutable();
                indexes_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
             * </pre>
             *
             * <code>repeated int32 indexes = 1;</code>
             *
             * @param value The indexes to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addIndexes(int value) {
                ensureIndexesIsMutable();
                indexes_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
             * </pre>
             *
             * <code>repeated int32 indexes = 1;</code>
             *
             * @param values The indexes to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllIndexes(
                    @NotNull Iterable<? extends Integer> values) {
                ensureIndexesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, indexes_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * indexes 标注list中的第n个元素的类型是什么类型，如[1L,2D,'SSS'] 的indexes为 [5,2,7]
             * </pre>
             *
             * <code>repeated int32 indexes = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearIndexes() {
                indexes_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList doubleValueIds_ = emptyIntList();

            private void ensureDoubleValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    doubleValueIds_ = mutableCopy(doubleValueIds_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <pre>
             * 数组值id，按数组先后顺序填入
             * valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @return A list containing the doubleValueIds.
             */
            public java.util.List<Integer>
            getDoubleValueIdsList() {
                return ((bitField0_ & 0x00000002) != 0) ?
                        java.util.Collections.unmodifiableList(doubleValueIds_) : doubleValueIds_;
            }

            /**
             * <pre>
             * 数组值id，按数组先后顺序填入
             * valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @return The count of doubleValueIds.
             */
            public int getDoubleValueIdsCount() {
                return doubleValueIds_.size();
            }

            /**
             * <pre>
             * 数组值id，按数组先后顺序填入
             * valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The doubleValueIds at the given index.
             */
            public int getDoubleValueIds(int index) {
                return doubleValueIds_.getInt(index);
            }

            /**
             * <pre>
             * 数组值id，按数组先后顺序填入
             * valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The doubleValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setDoubleValueIds(
                    int index, int value) {
                ensureDoubleValueIdsIsMutable();
                doubleValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 数组值id，按数组先后顺序填入
             * valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @param value The doubleValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addDoubleValueIds(int value) {
                ensureDoubleValueIdsIsMutable();
                doubleValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 数组值id，按数组先后顺序填入
             * valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @param values The doubleValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllDoubleValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureDoubleValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, doubleValueIds_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * 数组值id，按数组先后顺序填入
             * valueId/value
             * </pre>
             *
             * <code>repeated int32 doubleValueIds = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearDoubleValueIds() {
                doubleValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList floatValueIds_ = emptyIntList();

            private void ensureFloatValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    floatValueIds_ = mutableCopy(floatValueIds_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated int32 floatValueIds = 3;</code>
             *
             * @return A list containing the floatValueIds.
             */
            public java.util.List<Integer>
            getFloatValueIdsList() {
                return ((bitField0_ & 0x00000004) != 0) ?
                        java.util.Collections.unmodifiableList(floatValueIds_) : floatValueIds_;
            }

            /**
             * <code>repeated int32 floatValueIds = 3;</code>
             *
             * @return The count of floatValueIds.
             */
            public int getFloatValueIdsCount() {
                return floatValueIds_.size();
            }

            /**
             * <code>repeated int32 floatValueIds = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The floatValueIds at the given index.
             */
            public int getFloatValueIds(int index) {
                return floatValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 floatValueIds = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The floatValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setFloatValueIds(
                    int index, int value) {
                ensureFloatValueIdsIsMutable();
                floatValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatValueIds = 3;</code>
             *
             * @param value The floatValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addFloatValueIds(int value) {
                ensureFloatValueIdsIsMutable();
                floatValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatValueIds = 3;</code>
             *
             * @param values The floatValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllFloatValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureFloatValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, floatValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 floatValueIds = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearFloatValueIds() {
                floatValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList sint32ValueIds_ = emptyIntList();

            private void ensureSint32ValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    sint32ValueIds_ = mutableCopy(sint32ValueIds_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <code>repeated int32 sint32ValueIds = 4;</code>
             *
             * @return A list containing the sint32ValueIds.
             */
            public java.util.List<Integer>
            getSint32ValueIdsList() {
                return ((bitField0_ & 0x00000008) != 0) ?
                        java.util.Collections.unmodifiableList(sint32ValueIds_) : sint32ValueIds_;
            }

            /**
             * <code>repeated int32 sint32ValueIds = 4;</code>
             *
             * @return The count of sint32ValueIds.
             */
            public int getSint32ValueIdsCount() {
                return sint32ValueIds_.size();
            }

            /**
             * <code>repeated int32 sint32ValueIds = 4;</code>
             *
             * @param index The index of the element to return.
             * @return The sint32ValueIds at the given index.
             */
            public int getSint32ValueIds(int index) {
                return sint32ValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 sint32ValueIds = 4;</code>
             *
             * @param index The index to set the value at.
             * @param value The sint32ValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSint32ValueIds(
                    int index, int value) {
                ensureSint32ValueIdsIsMutable();
                sint32ValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32ValueIds = 4;</code>
             *
             * @param value The sint32ValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSint32ValueIds(int value) {
                ensureSint32ValueIdsIsMutable();
                sint32ValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32ValueIds = 4;</code>
             *
             * @param values The sint32ValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSint32ValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSint32ValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sint32ValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint32ValueIds = 4;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSint32ValueIds() {
                sint32ValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList sint64ValueIds_ = emptyIntList();

            private void ensureSint64ValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000010) != 0)) {
                    sint64ValueIds_ = mutableCopy(sint64ValueIds_);
                    bitField0_ |= 0x00000010;
                }
            }

            /**
             * <code>repeated int32 sint64ValueIds = 5;</code>
             *
             * @return A list containing the sint64ValueIds.
             */
            public java.util.List<Integer>
            getSint64ValueIdsList() {
                return ((bitField0_ & 0x00000010) != 0) ?
                        java.util.Collections.unmodifiableList(sint64ValueIds_) : sint64ValueIds_;
            }

            /**
             * <code>repeated int32 sint64ValueIds = 5;</code>
             *
             * @return The count of sint64ValueIds.
             */
            public int getSint64ValueIdsCount() {
                return sint64ValueIds_.size();
            }

            /**
             * <code>repeated int32 sint64ValueIds = 5;</code>
             *
             * @param index The index of the element to return.
             * @return The sint64ValueIds at the given index.
             */
            public int getSint64ValueIds(int index) {
                return sint64ValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 sint64ValueIds = 5;</code>
             *
             * @param index The index to set the value at.
             * @param value The sint64ValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSint64ValueIds(
                    int index, int value) {
                ensureSint64ValueIdsIsMutable();
                sint64ValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64ValueIds = 5;</code>
             *
             * @param value The sint64ValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSint64ValueIds(int value) {
                ensureSint64ValueIdsIsMutable();
                sint64ValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64ValueIds = 5;</code>
             *
             * @param values The sint64ValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSint64ValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSint64ValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sint64ValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 sint64ValueIds = 5;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSint64ValueIds() {
                sint64ValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.BooleanList boolValues_ = emptyBooleanList();

            private void ensureBoolValuesIsMutable() {
                if (!((bitField0_ & 0x00000020) != 0)) {
                    boolValues_ = mutableCopy(boolValues_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <code>repeated bool boolValues = 6;</code>
             *
             * @return A list containing the boolValues.
             */
            public java.util.List<Boolean>
            getBoolValuesList() {
                return ((bitField0_ & 0x00000020) != 0) ?
                        java.util.Collections.unmodifiableList(boolValues_) : boolValues_;
            }

            /**
             * <code>repeated bool boolValues = 6;</code>
             *
             * @return The count of boolValues.
             */
            public int getBoolValuesCount() {
                return boolValues_.size();
            }

            /**
             * <code>repeated bool boolValues = 6;</code>
             *
             * @param index The index of the element to return.
             * @return The boolValues at the given index.
             */
            public boolean getBoolValues(int index) {
                return boolValues_.getBoolean(index);
            }

            /**
             * <code>repeated bool boolValues = 6;</code>
             *
             * @param index The index to set the value at.
             * @param value The boolValues to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setBoolValues(
                    int index, boolean value) {
                ensureBoolValuesIsMutable();
                boolValues_.setBoolean(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bool boolValues = 6;</code>
             *
             * @param value The boolValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addBoolValues(boolean value) {
                ensureBoolValuesIsMutable();
                boolValues_.addBoolean(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bool boolValues = 6;</code>
             *
             * @param values The boolValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllBoolValues(
                    @NotNull Iterable<? extends Boolean> values) {
                ensureBoolValuesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, boolValues_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bool boolValues = 6;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearBoolValues() {
                boolValues_ = emptyBooleanList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList stringValueIds_ = emptyIntList();

            private void ensureStringValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000040) != 0)) {
                    stringValueIds_ = mutableCopy(stringValueIds_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <code>repeated int32 stringValueIds = 7;</code>
             *
             * @return A list containing the stringValueIds.
             */
            public java.util.List<Integer>
            getStringValueIdsList() {
                return ((bitField0_ & 0x00000040) != 0) ?
                        java.util.Collections.unmodifiableList(stringValueIds_) : stringValueIds_;
            }

            /**
             * <code>repeated int32 stringValueIds = 7;</code>
             *
             * @return The count of stringValueIds.
             */
            public int getStringValueIdsCount() {
                return stringValueIds_.size();
            }

            /**
             * <code>repeated int32 stringValueIds = 7;</code>
             *
             * @param index The index of the element to return.
             * @return The stringValueIds at the given index.
             */
            public int getStringValueIds(int index) {
                return stringValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 stringValueIds = 7;</code>
             *
             * @param index The index to set the value at.
             * @param value The stringValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setStringValueIds(
                    int index, int value) {
                ensureStringValueIdsIsMutable();
                stringValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringValueIds = 7;</code>
             *
             * @param value The stringValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addStringValueIds(int value) {
                ensureStringValueIdsIsMutable();
                stringValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringValueIds = 7;</code>
             *
             * @param values The stringValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllStringValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureStringValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, stringValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 stringValueIds = 7;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearStringValueIds() {
                stringValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList bytesValueIds_ = emptyIntList();

            private void ensureBytesValueIdsIsMutable() {
                if (!((bitField0_ & 0x00000080) != 0)) {
                    bytesValueIds_ = mutableCopy(bytesValueIds_);
                    bitField0_ |= 0x00000080;
                }
            }

            /**
             * <code>repeated int32 bytesValueIds = 8;</code>
             *
             * @return A list containing the bytesValueIds.
             */
            public java.util.List<Integer>
            getBytesValueIdsList() {
                return ((bitField0_ & 0x00000080) != 0) ?
                        java.util.Collections.unmodifiableList(bytesValueIds_) : bytesValueIds_;
            }

            /**
             * <code>repeated int32 bytesValueIds = 8;</code>
             *
             * @return The count of bytesValueIds.
             */
            public int getBytesValueIdsCount() {
                return bytesValueIds_.size();
            }

            /**
             * <code>repeated int32 bytesValueIds = 8;</code>
             *
             * @param index The index of the element to return.
             * @return The bytesValueIds at the given index.
             */
            public int getBytesValueIds(int index) {
                return bytesValueIds_.getInt(index);
            }

            /**
             * <code>repeated int32 bytesValueIds = 8;</code>
             *
             * @param index The index to set the value at.
             * @param value The bytesValueIds to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setBytesValueIds(
                    int index, int value) {
                ensureBytesValueIdsIsMutable();
                bytesValueIds_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesValueIds = 8;</code>
             *
             * @param value The bytesValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addBytesValueIds(int value) {
                ensureBytesValueIdsIsMutable();
                bytesValueIds_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesValueIds = 8;</code>
             *
             * @param values The bytesValueIds to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllBytesValueIds(
                    @NotNull Iterable<? extends Integer> values) {
                ensureBytesValueIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, bytesValueIds_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated int32 bytesValueIds = 8;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearBytesValueIds() {
                bytesValueIds_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000080);
                onChanged();
                return this;
            }

            private java.util.@Nullable List<Map> mapValues_ =
                    java.util.Collections.emptyList();

            private void ensureMapValuesIsMutable() {
                if (!((bitField0_ & 0x00000100) != 0)) {
                    mapValues_ = new java.util.ArrayList<Map>(mapValues_);
                    bitField0_ |= 0x00000100;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    Map, Map.Builder, MapOrBuilder> mapValuesBuilder_;

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public java.util.List<Map> getMapValuesList() {
                if (mapValuesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(mapValues_);
                } else {
                    return mapValuesBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public int getMapValuesCount() {
                if (mapValuesBuilder_ == null) {
                    return mapValues_.size();
                } else {
                    return mapValuesBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public Map getMapValues(int index) {
                if (mapValuesBuilder_ == null) {
                    return mapValues_.get(index);
                } else {
                    return mapValuesBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder setMapValues(
                    int index, @Nullable Map value) {
                if (mapValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMapValuesIsMutable();
                    mapValues_.set(index, value);
                    onChanged();
                } else {
                    mapValuesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder setMapValues(
                    int index, Map.@NotNull Builder builderForValue) {
                if (mapValuesBuilder_ == null) {
                    ensureMapValuesIsMutable();
                    mapValues_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    mapValuesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder addMapValues(@Nullable Map value) {
                if (mapValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMapValuesIsMutable();
                    mapValues_.add(value);
                    onChanged();
                } else {
                    mapValuesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder addMapValues(
                    int index, @Nullable Map value) {
                if (mapValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMapValuesIsMutable();
                    mapValues_.add(index, value);
                    onChanged();
                } else {
                    mapValuesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder addMapValues(
                    Map.@NotNull Builder builderForValue) {
                if (mapValuesBuilder_ == null) {
                    ensureMapValuesIsMutable();
                    mapValues_.add(builderForValue.build());
                    onChanged();
                } else {
                    mapValuesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder addMapValues(
                    int index, Map.@NotNull Builder builderForValue) {
                if (mapValuesBuilder_ == null) {
                    ensureMapValuesIsMutable();
                    mapValues_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    mapValuesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder addAllMapValues(
                    @NotNull Iterable<? extends Map> values) {
                if (mapValuesBuilder_ == null) {
                    ensureMapValuesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, mapValues_);
                    onChanged();
                } else {
                    mapValuesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder clearMapValues() {
                if (mapValuesBuilder_ == null) {
                    mapValues_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000100);
                    onChanged();
                } else {
                    mapValuesBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public @NotNull Builder removeMapValues(int index) {
                if (mapValuesBuilder_ == null) {
                    ensureMapValuesIsMutable();
                    mapValues_.remove(index);
                    onChanged();
                } else {
                    mapValuesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public Map.Builder getMapValuesBuilder(
                    int index) {
                return getMapValuesFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public MapOrBuilder getMapValuesOrBuilder(
                    int index) {
                if (mapValuesBuilder_ == null) {
                    return mapValues_.get(index);
                } else {
                    return mapValuesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public java.util.List<? extends MapOrBuilder>
            getMapValuesOrBuilderList() {
                if (mapValuesBuilder_ != null) {
                    return mapValuesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(mapValues_);
                }
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public Map.Builder addMapValuesBuilder() {
                return getMapValuesFieldBuilder().addBuilder(
                        Map.getDefaultInstance());
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public Map.Builder addMapValuesBuilder(
                    int index) {
                return getMapValuesFieldBuilder().addBuilder(
                        index, Map.getDefaultInstance());
            }

            /**
             * <pre>
             * map
             * </pre>
             *
             * <code>repeated .pojo.Map mapValues = 9;</code>
             */
            public java.util.List<Map.Builder>
            getMapValuesBuilderList() {
                return getMapValuesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    Map, Map.Builder, MapOrBuilder>
            getMapValuesFieldBuilder() {
                if (mapValuesBuilder_ == null) {
                    mapValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            Map, Map.Builder, MapOrBuilder>(
                            mapValues_,
                            ((bitField0_ & 0x00000100) != 0),
                            getParentForChildren(),
                            isClean());
                    mapValues_ = null;
                }
                return mapValuesBuilder_;
            }

            private java.util.@Nullable List<List> subListValues_ =
                    java.util.Collections.emptyList();

            private void ensureSubListValuesIsMutable() {
                if (!((bitField0_ & 0x00000200) != 0)) {
                    subListValues_ = new java.util.ArrayList<List>(subListValues_);
                    bitField0_ |= 0x00000200;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    List, Builder, ListOrBuilder> subListValuesBuilder_;

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public java.util.List<List> getSubListValuesList() {
                if (subListValuesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(subListValues_);
                } else {
                    return subListValuesBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public int getSubListValuesCount() {
                if (subListValuesBuilder_ == null) {
                    return subListValues_.size();
                } else {
                    return subListValuesBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public List getSubListValues(int index) {
                if (subListValuesBuilder_ == null) {
                    return subListValues_.get(index);
                } else {
                    return subListValuesBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder setSubListValues(
                    int index, @Nullable List value) {
                if (subListValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSubListValuesIsMutable();
                    subListValues_.set(index, value);
                    onChanged();
                } else {
                    subListValuesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder setSubListValues(
                    int index, @NotNull Builder builderForValue) {
                if (subListValuesBuilder_ == null) {
                    ensureSubListValuesIsMutable();
                    subListValues_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    subListValuesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder addSubListValues(@Nullable List value) {
                if (subListValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSubListValuesIsMutable();
                    subListValues_.add(value);
                    onChanged();
                } else {
                    subListValuesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder addSubListValues(
                    int index, @Nullable List value) {
                if (subListValuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSubListValuesIsMutable();
                    subListValues_.add(index, value);
                    onChanged();
                } else {
                    subListValuesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder addSubListValues(
                    @NotNull Builder builderForValue) {
                if (subListValuesBuilder_ == null) {
                    ensureSubListValuesIsMutable();
                    subListValues_.add(builderForValue.build());
                    onChanged();
                } else {
                    subListValuesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder addSubListValues(
                    int index, @NotNull Builder builderForValue) {
                if (subListValuesBuilder_ == null) {
                    ensureSubListValuesIsMutable();
                    subListValues_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    subListValuesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder addAllSubListValues(
                    @NotNull Iterable<? extends List> values) {
                if (subListValuesBuilder_ == null) {
                    ensureSubListValuesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, subListValues_);
                    onChanged();
                } else {
                    subListValuesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder clearSubListValues() {
                if (subListValuesBuilder_ == null) {
                    subListValues_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000200);
                    onChanged();
                } else {
                    subListValuesBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public @NotNull Builder removeSubListValues(int index) {
                if (subListValuesBuilder_ == null) {
                    ensureSubListValuesIsMutable();
                    subListValues_.remove(index);
                    onChanged();
                } else {
                    subListValuesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public Builder getSubListValuesBuilder(
                    int index) {
                return getSubListValuesFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public ListOrBuilder getSubListValuesOrBuilder(
                    int index) {
                if (subListValuesBuilder_ == null) {
                    return subListValues_.get(index);
                } else {
                    return subListValuesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public java.util.List<? extends ListOrBuilder>
            getSubListValuesOrBuilderList() {
                if (subListValuesBuilder_ != null) {
                    return subListValuesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(subListValues_);
                }
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public Builder addSubListValuesBuilder() {
                return getSubListValuesFieldBuilder().addBuilder(
                        List.getDefaultInstance());
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public Builder addSubListValuesBuilder(
                    int index) {
                return getSubListValuesFieldBuilder().addBuilder(
                        index, List.getDefaultInstance());
            }

            /**
             * <pre>
             * children
             * </pre>
             *
             * <code>repeated .pojo.List subListValues = 10;</code>
             */
            public java.util.List<Builder>
            getSubListValuesBuilderList() {
                return getSubListValuesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    List, Builder, ListOrBuilder>
            getSubListValuesFieldBuilder() {
                if (subListValuesBuilder_ == null) {
                    subListValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            List, Builder, ListOrBuilder>(
                            subListValues_,
                            ((bitField0_ & 0x00000200) != 0),
                            getParentForChildren(),
                            isClean());
                    subListValues_ = null;
                }
                return subListValuesBuilder_;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.List)
        }

        // @@protoc_insertion_point(class_scope:pojo.List)
        private static final @NotNull List DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new List();
        }

        public static List getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<List>
                PARSER = new com.google.protobuf.AbstractParser<List>() {
            @Override
            public @NotNull List parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new List(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<List> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<List> getParserForType() {
            return PARSER;
        }

        @Override
        public List getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface FeatureCollectionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pojo.FeatureCollection)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * key id、value id对应的具体值
         * </pre>
         *
         * <code>repeated string keys = 1;</code>
         *
         * @return A list containing the keys.
         */
        java.util.List<String>
        getKeysList();

        /**
         * <pre>
         * key id、value id对应的具体值
         * </pre>
         *
         * <code>repeated string keys = 1;</code>
         *
         * @return The count of keys.
         */
        int getKeysCount();

        /**
         * <pre>
         * key id、value id对应的具体值
         * </pre>
         *
         * <code>repeated string keys = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The keys at the given index.
         */
        String getKeys(int index);

        /**
         * <pre>
         * key id、value id对应的具体值
         * </pre>
         *
         * <code>repeated string keys = 1;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the keys at the given index.
         */
        com.google.protobuf.ByteString
        getKeysBytes(int index);

        /**
         * <code>repeated double doubleValues = 2;</code>
         *
         * @return A list containing the doubleValues.
         */
        java.util.List<Double> getDoubleValuesList();

        /**
         * <code>repeated double doubleValues = 2;</code>
         *
         * @return The count of doubleValues.
         */
        int getDoubleValuesCount();

        /**
         * <code>repeated double doubleValues = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The doubleValues at the given index.
         */
        double getDoubleValues(int index);

        /**
         * <code>repeated float floatValues = 3;</code>
         *
         * @return A list containing the floatValues.
         */
        java.util.List<Float> getFloatValuesList();

        /**
         * <code>repeated float floatValues = 3;</code>
         *
         * @return The count of floatValues.
         */
        int getFloatValuesCount();

        /**
         * <code>repeated float floatValues = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The floatValues at the given index.
         */
        float getFloatValues(int index);

        /**
         * <code>repeated sint32 sint32Values = 4;</code>
         *
         * @return A list containing the sint32Values.
         */
        java.util.List<Integer> getSint32ValuesList();

        /**
         * <code>repeated sint32 sint32Values = 4;</code>
         *
         * @return The count of sint32Values.
         */
        int getSint32ValuesCount();

        /**
         * <code>repeated sint32 sint32Values = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The sint32Values at the given index.
         */
        int getSint32Values(int index);

        /**
         * <code>repeated sint64 sint64Values = 5;</code>
         *
         * @return A list containing the sint64Values.
         */
        java.util.List<Long> getSint64ValuesList();

        /**
         * <code>repeated sint64 sint64Values = 5;</code>
         *
         * @return The count of sint64Values.
         */
        int getSint64ValuesCount();

        /**
         * <code>repeated sint64 sint64Values = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The sint64Values at the given index.
         */
        long getSint64Values(int index);

        /**
         * <code>repeated string stringValues = 6;</code>
         *
         * @return A list containing the stringValues.
         */
        java.util.List<String>
        getStringValuesList();

        /**
         * <code>repeated string stringValues = 6;</code>
         *
         * @return The count of stringValues.
         */
        int getStringValuesCount();

        /**
         * <code>repeated string stringValues = 6;</code>
         *
         * @param index The index of the element to return.
         * @return The stringValues at the given index.
         */
        String getStringValues(int index);

        /**
         * <code>repeated string stringValues = 6;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the stringValues at the given index.
         */
        com.google.protobuf.ByteString
        getStringValuesBytes(int index);

        /**
         * <code>repeated bytes bytesValues = 7;</code>
         *
         * @return A list containing the bytesValues.
         */
        java.util.List<com.google.protobuf.ByteString> getBytesValuesList();

        /**
         * <code>repeated bytes bytesValues = 7;</code>
         *
         * @return The count of bytesValues.
         */
        int getBytesValuesCount();

        /**
         * <code>repeated bytes bytesValues = 7;</code>
         *
         * @param index The index of the element to return.
         * @return The bytesValues at the given index.
         */
        com.google.protobuf.ByteString getBytesValues(int index);

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        java.util.List<Geometry>
        getGeometriesList();

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        Geometry getGeometries(int index);

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        int getGeometriesCount();

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        java.util.List<? extends GeometryOrBuilder>
        getGeometriesOrBuilderList();

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        GeometryOrBuilder getGeometriesOrBuilder(
                int index);

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        java.util.List<Map>
        getPropertiessList();

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        Map getPropertiess(int index);

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        int getPropertiessCount();

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        java.util.List<? extends MapOrBuilder>
        getPropertiessOrBuilderList();

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        MapOrBuilder getPropertiessOrBuilder(
                int index);

        /**
         * <pre>
         * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
         * </pre>
         *
         * <code>.pojo.Map headers = 10;</code>
         *
         * @return Whether the headers field is set.
         */
        boolean hasHeaders();

        /**
         * <pre>
         * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
         * </pre>
         *
         * <code>.pojo.Map headers = 10;</code>
         *
         * @return The headers.
         */
        Map getHeaders();

        /**
         * <pre>
         * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
         * </pre>
         *
         * <code>.pojo.Map headers = 10;</code>
         */
        MapOrBuilder getHeadersOrBuilder();
    }

    /**
     * <pre>
     * FeatureCollection
     * </pre>
     * <p>
     * Protobuf type {@code pojo.FeatureCollection}
     */
    public static final class FeatureCollection extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:pojo.FeatureCollection)
            FeatureCollectionOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use FeatureCollection.newBuilder() to construct.
        private FeatureCollection(com.google.protobuf.GeneratedMessageV3.@NotNull Builder<?> builder) {
            super(builder);
        }

        private FeatureCollection() {
            keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            doubleValues_ = emptyDoubleList();
            floatValues_ = emptyFloatList();
            sint32Values_ = emptyIntList();
            sint64Values_ = emptyLongList();
            stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bytesValues_ = java.util.Collections.emptyList();
            geometries_ = java.util.Collections.emptyList();
            propertiess_ = java.util.Collections.emptyList();
        }

        @Override
        @SuppressWarnings({"unused"})
        protected @NotNull Object newInstance(
                UnusedPrivateParameter unused) {
            return new FeatureCollection();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private FeatureCollection(
                com.google.protobuf.@NotNull CodedInputStream input,
                com.google.protobuf.@Nullable ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            String s = input.readStringRequireUtf8();
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                keys_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            keys_.add(s);
                            break;
                        }
                        case 17: {
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                doubleValues_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            doubleValues_.addDouble(input.readDouble());
                            break;
                        }
                        case 18: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                                doubleValues_ = newDoubleList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                doubleValues_.addDouble(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 29: {
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                floatValues_ = newFloatList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            floatValues_.addFloat(input.readFloat());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                                floatValues_ = newFloatList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                floatValues_.addFloat(input.readFloat());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 32: {
                            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                sint32Values_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            sint32Values_.addInt(input.readSInt32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                                sint32Values_ = newIntList();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                sint32Values_.addInt(input.readSInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 40: {
                            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                                sint64Values_ = newLongList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            sint64Values_.addLong(input.readSInt64());
                            break;
                        }
                        case 42: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                                sint64Values_ = newLongList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                sint64Values_.addLong(input.readSInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 50: {
                            String s = input.readStringRequireUtf8();
                            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                                stringValues_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            stringValues_.add(s);
                            break;
                        }
                        case 58: {
                            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                                bytesValues_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            bytesValues_.add(input.readBytes());
                            break;
                        }
                        case 66: {
                            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                                geometries_ = new java.util.ArrayList<Geometry>();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            geometries_.add(
                                    input.readMessage(Geometry.parser(), extensionRegistry));
                            break;
                        }
                        case 74: {
                            if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                                propertiess_ = new java.util.ArrayList<Map>();
                                mutable_bitField0_ |= 0x00000100;
                            }
                            propertiess_.add(
                                    input.readMessage(Map.parser(), extensionRegistry));
                            break;
                        }
                        case 82: {
                            Map.Builder subBuilder = null;
                            if (headers_ != null) {
                                subBuilder = headers_.toBuilder();
                            }
                            headers_ = input.readMessage(Map.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(headers_);
                                headers_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    keys_ = keys_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    doubleValues_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    floatValues_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    sint32Values_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000010) != 0)) {
                    sint64Values_.makeImmutable(); // C
                }
                if (((mutable_bitField0_ & 0x00000020) != 0)) {
                    stringValues_ = stringValues_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000040) != 0)) {
                    bytesValues_ = java.util.Collections.unmodifiableList(bytesValues_); // C
                }
                if (((mutable_bitField0_ & 0x00000080) != 0)) {
                    geometries_ = java.util.Collections.unmodifiableList(geometries_);
                }
                if (((mutable_bitField0_ & 0x00000100) != 0)) {
                    propertiess_ = java.util.Collections.unmodifiableList(propertiess_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ProtoFeature.internal_static_pojo_FeatureCollection_descriptor;
        }

        @Override
        protected @NotNull FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ProtoFeature.internal_static_pojo_FeatureCollection_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            FeatureCollection.class, Builder.class);
        }

        public static final int KEYS_FIELD_NUMBER = 1;
        private com.google.protobuf.LazyStringList keys_;

        /**
         * <pre>
         * key id、value id对应的具体值
         * </pre>
         *
         * <code>repeated string keys = 1;</code>
         *
         * @return A list containing the keys.
         */
        public com.google.protobuf.ProtocolStringList
        getKeysList() {
            return keys_;
        }

        /**
         * <pre>
         * key id、value id对应的具体值
         * </pre>
         *
         * <code>repeated string keys = 1;</code>
         *
         * @return The count of keys.
         */
        public int getKeysCount() {
            return keys_.size();
        }

        /**
         * <pre>
         * key id、value id对应的具体值
         * </pre>
         *
         * <code>repeated string keys = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The keys at the given index.
         */
        public String getKeys(int index) {
            return keys_.get(index);
        }

        /**
         * <pre>
         * key id、value id对应的具体值
         * </pre>
         *
         * <code>repeated string keys = 1;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the keys at the given index.
         */
        public com.google.protobuf.ByteString
        getKeysBytes(int index) {
            return keys_.getByteString(index);
        }

        public static final int DOUBLEVALUES_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.DoubleList doubleValues_;

        /**
         * <code>repeated double doubleValues = 2;</code>
         *
         * @return A list containing the doubleValues.
         */
        @Override
        public java.util.List<Double>
        getDoubleValuesList() {
            return doubleValues_;
        }

        /**
         * <code>repeated double doubleValues = 2;</code>
         *
         * @return The count of doubleValues.
         */
        public int getDoubleValuesCount() {
            return doubleValues_.size();
        }

        /**
         * <code>repeated double doubleValues = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The doubleValues at the given index.
         */
        public double getDoubleValues(int index) {
            return doubleValues_.getDouble(index);
        }

        private int doubleValuesMemoizedSerializedSize = -1;

        public static final int FLOATVALUES_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.FloatList floatValues_;

        /**
         * <code>repeated float floatValues = 3;</code>
         *
         * @return A list containing the floatValues.
         */
        @Override
        public java.util.List<Float>
        getFloatValuesList() {
            return floatValues_;
        }

        /**
         * <code>repeated float floatValues = 3;</code>
         *
         * @return The count of floatValues.
         */
        public int getFloatValuesCount() {
            return floatValues_.size();
        }

        /**
         * <code>repeated float floatValues = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The floatValues at the given index.
         */
        public float getFloatValues(int index) {
            return floatValues_.getFloat(index);
        }

        private int floatValuesMemoizedSerializedSize = -1;

        public static final int SINT32VALUES_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList sint32Values_;

        /**
         * <code>repeated sint32 sint32Values = 4;</code>
         *
         * @return A list containing the sint32Values.
         */
        @Override
        public java.util.List<Integer>
        getSint32ValuesList() {
            return sint32Values_;
        }

        /**
         * <code>repeated sint32 sint32Values = 4;</code>
         *
         * @return The count of sint32Values.
         */
        public int getSint32ValuesCount() {
            return sint32Values_.size();
        }

        /**
         * <code>repeated sint32 sint32Values = 4;</code>
         *
         * @param index The index of the element to return.
         * @return The sint32Values at the given index.
         */
        public int getSint32Values(int index) {
            return sint32Values_.getInt(index);
        }

        private int sint32ValuesMemoizedSerializedSize = -1;

        public static final int SINT64VALUES_FIELD_NUMBER = 5;
        private com.google.protobuf.Internal.LongList sint64Values_;

        /**
         * <code>repeated sint64 sint64Values = 5;</code>
         *
         * @return A list containing the sint64Values.
         */
        @Override
        public java.util.List<Long>
        getSint64ValuesList() {
            return sint64Values_;
        }

        /**
         * <code>repeated sint64 sint64Values = 5;</code>
         *
         * @return The count of sint64Values.
         */
        public int getSint64ValuesCount() {
            return sint64Values_.size();
        }

        /**
         * <code>repeated sint64 sint64Values = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The sint64Values at the given index.
         */
        public long getSint64Values(int index) {
            return sint64Values_.getLong(index);
        }

        private int sint64ValuesMemoizedSerializedSize = -1;

        public static final int STRINGVALUES_FIELD_NUMBER = 6;
        private com.google.protobuf.LazyStringList stringValues_;

        /**
         * <code>repeated string stringValues = 6;</code>
         *
         * @return A list containing the stringValues.
         */
        public com.google.protobuf.ProtocolStringList
        getStringValuesList() {
            return stringValues_;
        }

        /**
         * <code>repeated string stringValues = 6;</code>
         *
         * @return The count of stringValues.
         */
        public int getStringValuesCount() {
            return stringValues_.size();
        }

        /**
         * <code>repeated string stringValues = 6;</code>
         *
         * @param index The index of the element to return.
         * @return The stringValues at the given index.
         */
        public String getStringValues(int index) {
            return stringValues_.get(index);
        }

        /**
         * <code>repeated string stringValues = 6;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the stringValues at the given index.
         */
        public com.google.protobuf.ByteString
        getStringValuesBytes(int index) {
            return stringValues_.getByteString(index);
        }

        public static final int BYTESVALUES_FIELD_NUMBER = 7;
        private java.util.List<com.google.protobuf.ByteString> bytesValues_;

        /**
         * <code>repeated bytes bytesValues = 7;</code>
         *
         * @return A list containing the bytesValues.
         */
        @Override
        public java.util.List<com.google.protobuf.ByteString>
        getBytesValuesList() {
            return bytesValues_;
        }

        /**
         * <code>repeated bytes bytesValues = 7;</code>
         *
         * @return The count of bytesValues.
         */
        public int getBytesValuesCount() {
            return bytesValues_.size();
        }

        /**
         * <code>repeated bytes bytesValues = 7;</code>
         *
         * @param index The index of the element to return.
         * @return The bytesValues at the given index.
         */
        public com.google.protobuf.ByteString getBytesValues(int index) {
            return bytesValues_.get(index);
        }

        public static final int GEOMETRIES_FIELD_NUMBER = 8;
        private java.util.List<Geometry> geometries_;

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        @Override
        public java.util.List<Geometry> getGeometriesList() {
            return geometries_;
        }

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        @Override
        public java.util.List<? extends GeometryOrBuilder>
        getGeometriesOrBuilderList() {
            return geometries_;
        }

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        @Override
        public int getGeometriesCount() {
            return geometries_.size();
        }

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        @Override
        public Geometry getGeometries(int index) {
            return geometries_.get(index);
        }

        /**
         * <pre>
         * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
         * </pre>
         *
         * <code>repeated .pojo.Geometry geometries = 8;</code>
         */
        @Override
        public GeometryOrBuilder getGeometriesOrBuilder(
                int index) {
            return geometries_.get(index);
        }

        public static final int PROPERTIESS_FIELD_NUMBER = 9;
        private java.util.List<Map> propertiess_;

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        @Override
        public java.util.List<Map> getPropertiessList() {
            return propertiess_;
        }

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        @Override
        public java.util.List<? extends MapOrBuilder>
        getPropertiessOrBuilderList() {
            return propertiess_;
        }

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        @Override
        public int getPropertiessCount() {
            return propertiess_.size();
        }

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        @Override
        public Map getPropertiess(int index) {
            return propertiess_.get(index);
        }

        /**
         * <code>repeated .pojo.Map propertiess = 9;</code>
         */
        @Override
        public MapOrBuilder getPropertiessOrBuilder(
                int index) {
            return propertiess_.get(index);
        }

        public static final int HEADERS_FIELD_NUMBER = 10;
        private Map headers_;

        /**
         * <pre>
         * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
         * </pre>
         *
         * <code>.pojo.Map headers = 10;</code>
         *
         * @return Whether the headers field is set.
         */
        @Override
        public boolean hasHeaders() {
            return headers_ != null;
        }

        /**
         * <pre>
         * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
         * </pre>
         *
         * <code>.pojo.Map headers = 10;</code>
         *
         * @return The headers.
         */
        @Override
        public Map getHeaders() {
            return headers_ == null ? Map.getDefaultInstance() : headers_;
        }

        /**
         * <pre>
         * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
         * </pre>
         *
         * <code>.pojo.Map headers = 10;</code>
         */
        @Override
        public @NotNull MapOrBuilder getHeadersOrBuilder() {
            return getHeaders();
        }

        private byte memoizedIsInitialized = -1;

        @Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @Override
        public void writeTo(com.google.protobuf.@NotNull CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < keys_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keys_.getRaw(i));
            }
            if (getDoubleValuesList().size() > 0) {
                output.writeUInt32NoTag(18);
                output.writeUInt32NoTag(doubleValuesMemoizedSerializedSize);
            }
            for (int i = 0; i < doubleValues_.size(); i++) {
                output.writeDoubleNoTag(doubleValues_.getDouble(i));
            }
            if (getFloatValuesList().size() > 0) {
                output.writeUInt32NoTag(26);
                output.writeUInt32NoTag(floatValuesMemoizedSerializedSize);
            }
            for (int i = 0; i < floatValues_.size(); i++) {
                output.writeFloatNoTag(floatValues_.getFloat(i));
            }
            if (getSint32ValuesList().size() > 0) {
                output.writeUInt32NoTag(34);
                output.writeUInt32NoTag(sint32ValuesMemoizedSerializedSize);
            }
            for (int i = 0; i < sint32Values_.size(); i++) {
                output.writeSInt32NoTag(sint32Values_.getInt(i));
            }
            if (getSint64ValuesList().size() > 0) {
                output.writeUInt32NoTag(42);
                output.writeUInt32NoTag(sint64ValuesMemoizedSerializedSize);
            }
            for (int i = 0; i < sint64Values_.size(); i++) {
                output.writeSInt64NoTag(sint64Values_.getLong(i));
            }
            for (int i = 0; i < stringValues_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, stringValues_.getRaw(i));
            }
            for (int i = 0; i < bytesValues_.size(); i++) {
                output.writeBytes(7, bytesValues_.get(i));
            }
            for (int i = 0; i < geometries_.size(); i++) {
                output.writeMessage(8, geometries_.get(i));
            }
            for (int i = 0; i < propertiess_.size(); i++) {
                output.writeMessage(9, propertiess_.get(i));
            }
            if (headers_ != null) {
                output.writeMessage(10, getHeaders());
            }
            unknownFields.writeTo(output);
        }

        @Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                for (int i = 0; i < keys_.size(); i++) {
                    dataSize += computeStringSizeNoTag(keys_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getKeysList().size();
            }
            {
                int dataSize = 0;
                dataSize = 8 * getDoubleValuesList().size();
                size += dataSize;
                if (!getDoubleValuesList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                doubleValuesMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                dataSize = 4 * getFloatValuesList().size();
                size += dataSize;
                if (!getFloatValuesList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                floatValuesMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < sint32Values_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeSInt32SizeNoTag(sint32Values_.getInt(i));
                }
                size += dataSize;
                if (!getSint32ValuesList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                sint32ValuesMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < sint64Values_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeSInt64SizeNoTag(sint64Values_.getLong(i));
                }
                size += dataSize;
                if (!getSint64ValuesList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                sint64ValuesMemoizedSerializedSize = dataSize;
            }
            {
                int dataSize = 0;
                for (int i = 0; i < stringValues_.size(); i++) {
                    dataSize += computeStringSizeNoTag(stringValues_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getStringValuesList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < bytesValues_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(bytesValues_.get(i));
                }
                size += dataSize;
                size += 1 * getBytesValuesList().size();
            }
            for (int i = 0; i < geometries_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, geometries_.get(i));
            }
            for (int i = 0; i < propertiess_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, propertiess_.get(i));
            }
            if (headers_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(10, getHeaders());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof FeatureCollection)) {
                return super.equals(obj);
            }
            FeatureCollection other = (FeatureCollection) obj;

            if (!getKeysList()
                    .equals(other.getKeysList())) return false;
            if (!getDoubleValuesList()
                    .equals(other.getDoubleValuesList())) return false;
            if (!getFloatValuesList()
                    .equals(other.getFloatValuesList())) return false;
            if (!getSint32ValuesList()
                    .equals(other.getSint32ValuesList())) return false;
            if (!getSint64ValuesList()
                    .equals(other.getSint64ValuesList())) return false;
            if (!getStringValuesList()
                    .equals(other.getStringValuesList())) return false;
            if (!getBytesValuesList()
                    .equals(other.getBytesValuesList())) return false;
            if (!getGeometriesList()
                    .equals(other.getGeometriesList())) return false;
            if (!getPropertiessList()
                    .equals(other.getPropertiessList())) return false;
            if (hasHeaders() != other.hasHeaders()) return false;
            if (hasHeaders()) {
                if (!getHeaders()
                        .equals(other.getHeaders())) return false;
            }
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getKeysCount() > 0) {
                hash = (37 * hash) + KEYS_FIELD_NUMBER;
                hash = (53 * hash) + getKeysList().hashCode();
            }
            if (getDoubleValuesCount() > 0) {
                hash = (37 * hash) + DOUBLEVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getDoubleValuesList().hashCode();
            }
            if (getFloatValuesCount() > 0) {
                hash = (37 * hash) + FLOATVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getFloatValuesList().hashCode();
            }
            if (getSint32ValuesCount() > 0) {
                hash = (37 * hash) + SINT32VALUES_FIELD_NUMBER;
                hash = (53 * hash) + getSint32ValuesList().hashCode();
            }
            if (getSint64ValuesCount() > 0) {
                hash = (37 * hash) + SINT64VALUES_FIELD_NUMBER;
                hash = (53 * hash) + getSint64ValuesList().hashCode();
            }
            if (getStringValuesCount() > 0) {
                hash = (37 * hash) + STRINGVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getStringValuesList().hashCode();
            }
            if (getBytesValuesCount() > 0) {
                hash = (37 * hash) + BYTESVALUES_FIELD_NUMBER;
                hash = (53 * hash) + getBytesValuesList().hashCode();
            }
            if (getGeometriesCount() > 0) {
                hash = (37 * hash) + GEOMETRIES_FIELD_NUMBER;
                hash = (53 * hash) + getGeometriesList().hashCode();
            }
            if (getPropertiessCount() > 0) {
                hash = (37 * hash) + PROPERTIESS_FIELD_NUMBER;
                hash = (53 * hash) + getPropertiessList().hashCode();
            }
            if (hasHeaders()) {
                hash = (37 * hash) + HEADERS_FIELD_NUMBER;
                hash = (53 * hash) + getHeaders().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static FeatureCollection parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static FeatureCollection parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static FeatureCollection parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static FeatureCollection parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static FeatureCollection parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static FeatureCollection parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static FeatureCollection parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static FeatureCollection parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static FeatureCollection parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static FeatureCollection parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static FeatureCollection parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static FeatureCollection parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @NotNull Builder newBuilder(@NotNull FeatureCollection prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @Override
        public @NotNull Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected @NotNull Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * FeatureCollection
         * </pre>
         * <p>
         * Protobuf type {@code pojo.FeatureCollection}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:pojo.FeatureCollection)
                FeatureCollectionOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ProtoFeature.internal_static_pojo_FeatureCollection_descriptor;
            }

            @Override
            protected @NotNull FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ProtoFeature.internal_static_pojo_FeatureCollection_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                FeatureCollection.class, Builder.class);
            }

            // Construct using org.wowtools.giscat.vector.pojo.proto.ProtoFeature.FeatureCollection.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getGeometriesFieldBuilder();
                    getPropertiessFieldBuilder();
                }
            }

            @Override
            public @NotNull Builder clear() {
                super.clear();
                keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000001);
                doubleValues_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                floatValues_ = emptyFloatList();
                bitField0_ = (bitField0_ & ~0x00000004);
                sint32Values_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                sint64Values_ = emptyLongList();
                bitField0_ = (bitField0_ & ~0x00000010);
                stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000020);
                bytesValues_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                if (geometriesBuilder_ == null) {
                    geometries_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000080);
                } else {
                    geometriesBuilder_.clear();
                }
                if (propertiessBuilder_ == null) {
                    propertiess_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000100);
                } else {
                    propertiessBuilder_.clear();
                }
                if (headersBuilder_ == null) {
                    headers_ = null;
                } else {
                    headers_ = null;
                    headersBuilder_ = null;
                }
                return this;
            }

            @Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ProtoFeature.internal_static_pojo_FeatureCollection_descriptor;
            }

            @Override
            public FeatureCollection getDefaultInstanceForType() {
                return FeatureCollection.getDefaultInstance();
            }

            @Override
            public @NotNull FeatureCollection build() {
                FeatureCollection result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @Override
            public @NotNull FeatureCollection buildPartial() {
                FeatureCollection result = new FeatureCollection(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    keys_ = keys_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.keys_ = keys_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    doubleValues_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.doubleValues_ = doubleValues_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    floatValues_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.floatValues_ = floatValues_;
                if (((bitField0_ & 0x00000008) != 0)) {
                    sint32Values_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.sint32Values_ = sint32Values_;
                if (((bitField0_ & 0x00000010) != 0)) {
                    sint64Values_.makeImmutable();
                    bitField0_ = (bitField0_ & ~0x00000010);
                }
                result.sint64Values_ = sint64Values_;
                if (((bitField0_ & 0x00000020) != 0)) {
                    stringValues_ = stringValues_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.stringValues_ = stringValues_;
                if (((bitField0_ & 0x00000040) != 0)) {
                    bytesValues_ = java.util.Collections.unmodifiableList(bytesValues_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.bytesValues_ = bytesValues_;
                if (geometriesBuilder_ == null) {
                    if (((bitField0_ & 0x00000080) != 0)) {
                        geometries_ = java.util.Collections.unmodifiableList(geometries_);
                        bitField0_ = (bitField0_ & ~0x00000080);
                    }
                    result.geometries_ = geometries_;
                } else {
                    result.geometries_ = geometriesBuilder_.build();
                }
                if (propertiessBuilder_ == null) {
                    if (((bitField0_ & 0x00000100) != 0)) {
                        propertiess_ = java.util.Collections.unmodifiableList(propertiess_);
                        bitField0_ = (bitField0_ & ~0x00000100);
                    }
                    result.propertiess_ = propertiess_;
                } else {
                    result.propertiess_ = propertiessBuilder_.build();
                }
                if (headersBuilder_ == null) {
                    result.headers_ = headers_;
                } else {
                    result.headers_ = headersBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @Override
            public Builder clone() {
                return super.clone();
            }

            @Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            @Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            @Override
            public @NotNull Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof FeatureCollection) {
                    return mergeFrom((FeatureCollection) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @NotNull Builder mergeFrom(@NotNull FeatureCollection other) {
                if (other == FeatureCollection.getDefaultInstance()) return this;
                if (!other.keys_.isEmpty()) {
                    if (keys_.isEmpty()) {
                        keys_ = other.keys_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureKeysIsMutable();
                        keys_.addAll(other.keys_);
                    }
                    onChanged();
                }
                if (!other.doubleValues_.isEmpty()) {
                    if (doubleValues_.isEmpty()) {
                        doubleValues_ = other.doubleValues_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureDoubleValuesIsMutable();
                        doubleValues_.addAll(other.doubleValues_);
                    }
                    onChanged();
                }
                if (!other.floatValues_.isEmpty()) {
                    if (floatValues_.isEmpty()) {
                        floatValues_ = other.floatValues_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureFloatValuesIsMutable();
                        floatValues_.addAll(other.floatValues_);
                    }
                    onChanged();
                }
                if (!other.sint32Values_.isEmpty()) {
                    if (sint32Values_.isEmpty()) {
                        sint32Values_ = other.sint32Values_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureSint32ValuesIsMutable();
                        sint32Values_.addAll(other.sint32Values_);
                    }
                    onChanged();
                }
                if (!other.sint64Values_.isEmpty()) {
                    if (sint64Values_.isEmpty()) {
                        sint64Values_ = other.sint64Values_;
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        ensureSint64ValuesIsMutable();
                        sint64Values_.addAll(other.sint64Values_);
                    }
                    onChanged();
                }
                if (!other.stringValues_.isEmpty()) {
                    if (stringValues_.isEmpty()) {
                        stringValues_ = other.stringValues_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureStringValuesIsMutable();
                        stringValues_.addAll(other.stringValues_);
                    }
                    onChanged();
                }
                if (!other.bytesValues_.isEmpty()) {
                    if (bytesValues_.isEmpty()) {
                        bytesValues_ = other.bytesValues_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureBytesValuesIsMutable();
                        bytesValues_.addAll(other.bytesValues_);
                    }
                    onChanged();
                }
                if (geometriesBuilder_ == null) {
                    if (!other.geometries_.isEmpty()) {
                        if (geometries_.isEmpty()) {
                            geometries_ = other.geometries_;
                            bitField0_ = (bitField0_ & ~0x00000080);
                        } else {
                            ensureGeometriesIsMutable();
                            geometries_.addAll(other.geometries_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.geometries_.isEmpty()) {
                        if (geometriesBuilder_.isEmpty()) {
                            geometriesBuilder_.dispose();
                            geometriesBuilder_ = null;
                            geometries_ = other.geometries_;
                            bitField0_ = (bitField0_ & ~0x00000080);
                            geometriesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getGeometriesFieldBuilder() : null;
                        } else {
                            geometriesBuilder_.addAllMessages(other.geometries_);
                        }
                    }
                }
                if (propertiessBuilder_ == null) {
                    if (!other.propertiess_.isEmpty()) {
                        if (propertiess_.isEmpty()) {
                            propertiess_ = other.propertiess_;
                            bitField0_ = (bitField0_ & ~0x00000100);
                        } else {
                            ensurePropertiessIsMutable();
                            propertiess_.addAll(other.propertiess_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.propertiess_.isEmpty()) {
                        if (propertiessBuilder_.isEmpty()) {
                            propertiessBuilder_.dispose();
                            propertiessBuilder_ = null;
                            propertiess_ = other.propertiess_;
                            bitField0_ = (bitField0_ & ~0x00000100);
                            propertiessBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getPropertiessFieldBuilder() : null;
                        } else {
                            propertiessBuilder_.addAllMessages(other.propertiess_);
                        }
                    }
                }
                if (other.hasHeaders()) {
                    mergeHeaders(other.getHeaders());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @Override
            public final boolean isInitialized() {
                return true;
            }

            @Override
            public @NotNull Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                FeatureCollection parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (FeatureCollection) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureKeysIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @return A list containing the keys.
             */
            public com.google.protobuf.ProtocolStringList
            getKeysList() {
                return keys_.getUnmodifiableView();
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @return The count of keys.
             */
            public int getKeysCount() {
                return keys_.size();
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The keys at the given index.
             */
            public String getKeys(int index) {
                return keys_.get(index);
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the keys at the given index.
             */
            public com.google.protobuf.ByteString
            getKeysBytes(int index) {
                return keys_.getByteString(index);
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The keys to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setKeys(
                    int index, @Nullable String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureKeysIsMutable();
                keys_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @param value The keys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addKeys(
                    @Nullable String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureKeysIsMutable();
                keys_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @param values The keys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllKeys(
                    @NotNull Iterable<String> values) {
                ensureKeysIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, keys_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearKeys() {
                keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * key id、value id对应的具体值
             * </pre>
             *
             * <code>repeated string keys = 1;</code>
             *
             * @param value The bytes of the keys to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addKeysBytes(
                    com.google.protobuf.@Nullable ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ensureKeysIsMutable();
                keys_.add(value);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.DoubleList doubleValues_ = emptyDoubleList();

            private void ensureDoubleValuesIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    doubleValues_ = mutableCopy(doubleValues_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated double doubleValues = 2;</code>
             *
             * @return A list containing the doubleValues.
             */
            public java.util.List<Double>
            getDoubleValuesList() {
                return ((bitField0_ & 0x00000002) != 0) ?
                        java.util.Collections.unmodifiableList(doubleValues_) : doubleValues_;
            }

            /**
             * <code>repeated double doubleValues = 2;</code>
             *
             * @return The count of doubleValues.
             */
            public int getDoubleValuesCount() {
                return doubleValues_.size();
            }

            /**
             * <code>repeated double doubleValues = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The doubleValues at the given index.
             */
            public double getDoubleValues(int index) {
                return doubleValues_.getDouble(index);
            }

            /**
             * <code>repeated double doubleValues = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The doubleValues to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setDoubleValues(
                    int index, double value) {
                ensureDoubleValuesIsMutable();
                doubleValues_.setDouble(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double doubleValues = 2;</code>
             *
             * @param value The doubleValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addDoubleValues(double value) {
                ensureDoubleValuesIsMutable();
                doubleValues_.addDouble(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double doubleValues = 2;</code>
             *
             * @param values The doubleValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllDoubleValues(
                    @NotNull Iterable<? extends Double> values) {
                ensureDoubleValuesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, doubleValues_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated double doubleValues = 2;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearDoubleValues() {
                doubleValues_ = emptyDoubleList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.FloatList floatValues_ = emptyFloatList();

            private void ensureFloatValuesIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    floatValues_ = mutableCopy(floatValues_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated float floatValues = 3;</code>
             *
             * @return A list containing the floatValues.
             */
            public java.util.List<Float>
            getFloatValuesList() {
                return ((bitField0_ & 0x00000004) != 0) ?
                        java.util.Collections.unmodifiableList(floatValues_) : floatValues_;
            }

            /**
             * <code>repeated float floatValues = 3;</code>
             *
             * @return The count of floatValues.
             */
            public int getFloatValuesCount() {
                return floatValues_.size();
            }

            /**
             * <code>repeated float floatValues = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The floatValues at the given index.
             */
            public float getFloatValues(int index) {
                return floatValues_.getFloat(index);
            }

            /**
             * <code>repeated float floatValues = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The floatValues to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setFloatValues(
                    int index, float value) {
                ensureFloatValuesIsMutable();
                floatValues_.setFloat(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated float floatValues = 3;</code>
             *
             * @param value The floatValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addFloatValues(float value) {
                ensureFloatValuesIsMutable();
                floatValues_.addFloat(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated float floatValues = 3;</code>
             *
             * @param values The floatValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllFloatValues(
                    @NotNull Iterable<? extends Float> values) {
                ensureFloatValuesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, floatValues_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated float floatValues = 3;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearFloatValues() {
                floatValues_ = emptyFloatList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.IntList sint32Values_ = emptyIntList();

            private void ensureSint32ValuesIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    sint32Values_ = mutableCopy(sint32Values_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <code>repeated sint32 sint32Values = 4;</code>
             *
             * @return A list containing the sint32Values.
             */
            public java.util.List<Integer>
            getSint32ValuesList() {
                return ((bitField0_ & 0x00000008) != 0) ?
                        java.util.Collections.unmodifiableList(sint32Values_) : sint32Values_;
            }

            /**
             * <code>repeated sint32 sint32Values = 4;</code>
             *
             * @return The count of sint32Values.
             */
            public int getSint32ValuesCount() {
                return sint32Values_.size();
            }

            /**
             * <code>repeated sint32 sint32Values = 4;</code>
             *
             * @param index The index of the element to return.
             * @return The sint32Values at the given index.
             */
            public int getSint32Values(int index) {
                return sint32Values_.getInt(index);
            }

            /**
             * <code>repeated sint32 sint32Values = 4;</code>
             *
             * @param index The index to set the value at.
             * @param value The sint32Values to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSint32Values(
                    int index, int value) {
                ensureSint32ValuesIsMutable();
                sint32Values_.setInt(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated sint32 sint32Values = 4;</code>
             *
             * @param value The sint32Values to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSint32Values(int value) {
                ensureSint32ValuesIsMutable();
                sint32Values_.addInt(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated sint32 sint32Values = 4;</code>
             *
             * @param values The sint32Values to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSint32Values(
                    @NotNull Iterable<? extends Integer> values) {
                ensureSint32ValuesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sint32Values_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated sint32 sint32Values = 4;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSint32Values() {
                sint32Values_ = emptyIntList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            private com.google.protobuf.Internal.LongList sint64Values_ = emptyLongList();

            private void ensureSint64ValuesIsMutable() {
                if (!((bitField0_ & 0x00000010) != 0)) {
                    sint64Values_ = mutableCopy(sint64Values_);
                    bitField0_ |= 0x00000010;
                }
            }

            /**
             * <code>repeated sint64 sint64Values = 5;</code>
             *
             * @return A list containing the sint64Values.
             */
            public java.util.List<Long>
            getSint64ValuesList() {
                return ((bitField0_ & 0x00000010) != 0) ?
                        java.util.Collections.unmodifiableList(sint64Values_) : sint64Values_;
            }

            /**
             * <code>repeated sint64 sint64Values = 5;</code>
             *
             * @return The count of sint64Values.
             */
            public int getSint64ValuesCount() {
                return sint64Values_.size();
            }

            /**
             * <code>repeated sint64 sint64Values = 5;</code>
             *
             * @param index The index of the element to return.
             * @return The sint64Values at the given index.
             */
            public long getSint64Values(int index) {
                return sint64Values_.getLong(index);
            }

            /**
             * <code>repeated sint64 sint64Values = 5;</code>
             *
             * @param index The index to set the value at.
             * @param value The sint64Values to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setSint64Values(
                    int index, long value) {
                ensureSint64ValuesIsMutable();
                sint64Values_.setLong(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated sint64 sint64Values = 5;</code>
             *
             * @param value The sint64Values to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addSint64Values(long value) {
                ensureSint64ValuesIsMutable();
                sint64Values_.addLong(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated sint64 sint64Values = 5;</code>
             *
             * @param values The sint64Values to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllSint64Values(
                    @NotNull Iterable<? extends Long> values) {
                ensureSint64ValuesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sint64Values_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated sint64 sint64Values = 5;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearSint64Values() {
                sint64Values_ = emptyLongList();
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureStringValuesIsMutable() {
                if (!((bitField0_ & 0x00000020) != 0)) {
                    stringValues_ = new com.google.protobuf.LazyStringArrayList(stringValues_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @return A list containing the stringValues.
             */
            public com.google.protobuf.ProtocolStringList
            getStringValuesList() {
                return stringValues_.getUnmodifiableView();
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @return The count of stringValues.
             */
            public int getStringValuesCount() {
                return stringValues_.size();
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @param index The index of the element to return.
             * @return The stringValues at the given index.
             */
            public String getStringValues(int index) {
                return stringValues_.get(index);
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the stringValues at the given index.
             */
            public com.google.protobuf.ByteString
            getStringValuesBytes(int index) {
                return stringValues_.getByteString(index);
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @param index The index to set the value at.
             * @param value The stringValues to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setStringValues(
                    int index, @Nullable String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureStringValuesIsMutable();
                stringValues_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @param value The stringValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addStringValues(
                    @Nullable String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureStringValuesIsMutable();
                stringValues_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @param values The stringValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllStringValues(
                    @NotNull Iterable<String> values) {
                ensureStringValuesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, stringValues_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearStringValues() {
                stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string stringValues = 6;</code>
             *
             * @param value The bytes of the stringValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addStringValuesBytes(
                    com.google.protobuf.@Nullable ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ensureStringValuesIsMutable();
                stringValues_.add(value);
                onChanged();
                return this;
            }

            private java.util.@NotNull List<com.google.protobuf.ByteString> bytesValues_ = java.util.Collections.emptyList();

            private void ensureBytesValuesIsMutable() {
                if (!((bitField0_ & 0x00000040) != 0)) {
                    bytesValues_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytesValues_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <code>repeated bytes bytesValues = 7;</code>
             *
             * @return A list containing the bytesValues.
             */
            public java.util.List<com.google.protobuf.ByteString>
            getBytesValuesList() {
                return ((bitField0_ & 0x00000040) != 0) ?
                        java.util.Collections.unmodifiableList(bytesValues_) : bytesValues_;
            }

            /**
             * <code>repeated bytes bytesValues = 7;</code>
             *
             * @return The count of bytesValues.
             */
            public int getBytesValuesCount() {
                return bytesValues_.size();
            }

            /**
             * <code>repeated bytes bytesValues = 7;</code>
             *
             * @param index The index of the element to return.
             * @return The bytesValues at the given index.
             */
            public com.google.protobuf.ByteString getBytesValues(int index) {
                return bytesValues_.get(index);
            }

            /**
             * <code>repeated bytes bytesValues = 7;</code>
             *
             * @param index The index to set the value at.
             * @param value The bytesValues to set.
             * @return This builder for chaining.
             */
            public @NotNull Builder setBytesValues(
                    int index, com.google.protobuf.@Nullable ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureBytesValuesIsMutable();
                bytesValues_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bytes bytesValues = 7;</code>
             *
             * @param value The bytesValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addBytesValues(com.google.protobuf.@Nullable ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureBytesValuesIsMutable();
                bytesValues_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bytes bytesValues = 7;</code>
             *
             * @param values The bytesValues to add.
             * @return This builder for chaining.
             */
            public @NotNull Builder addAllBytesValues(
                    @NotNull Iterable<? extends com.google.protobuf.ByteString> values) {
                ensureBytesValuesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, bytesValues_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated bytes bytesValues = 7;</code>
             *
             * @return This builder for chaining.
             */
            public @NotNull Builder clearBytesValues() {
                bytesValues_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            private java.util.@Nullable List<Geometry> geometries_ =
                    java.util.Collections.emptyList();

            private void ensureGeometriesIsMutable() {
                if (!((bitField0_ & 0x00000080) != 0)) {
                    geometries_ = new java.util.ArrayList<Geometry>(geometries_);
                    bitField0_ |= 0x00000080;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    Geometry, Geometry.Builder, GeometryOrBuilder> geometriesBuilder_;

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public java.util.List<Geometry> getGeometriesList() {
                if (geometriesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(geometries_);
                } else {
                    return geometriesBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public int getGeometriesCount() {
                if (geometriesBuilder_ == null) {
                    return geometries_.size();
                } else {
                    return geometriesBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public Geometry getGeometries(int index) {
                if (geometriesBuilder_ == null) {
                    return geometries_.get(index);
                } else {
                    return geometriesBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder setGeometries(
                    int index, @Nullable Geometry value) {
                if (geometriesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureGeometriesIsMutable();
                    geometries_.set(index, value);
                    onChanged();
                } else {
                    geometriesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder setGeometries(
                    int index, Geometry.@NotNull Builder builderForValue) {
                if (geometriesBuilder_ == null) {
                    ensureGeometriesIsMutable();
                    geometries_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    geometriesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder addGeometries(@Nullable Geometry value) {
                if (geometriesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureGeometriesIsMutable();
                    geometries_.add(value);
                    onChanged();
                } else {
                    geometriesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder addGeometries(
                    int index, @Nullable Geometry value) {
                if (geometriesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureGeometriesIsMutable();
                    geometries_.add(index, value);
                    onChanged();
                } else {
                    geometriesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder addGeometries(
                    Geometry.@NotNull Builder builderForValue) {
                if (geometriesBuilder_ == null) {
                    ensureGeometriesIsMutable();
                    geometries_.add(builderForValue.build());
                    onChanged();
                } else {
                    geometriesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder addGeometries(
                    int index, Geometry.@NotNull Builder builderForValue) {
                if (geometriesBuilder_ == null) {
                    ensureGeometriesIsMutable();
                    geometries_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    geometriesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder addAllGeometries(
                    @NotNull Iterable<? extends Geometry> values) {
                if (geometriesBuilder_ == null) {
                    ensureGeometriesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, geometries_);
                    onChanged();
                } else {
                    geometriesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder clearGeometries() {
                if (geometriesBuilder_ == null) {
                    geometries_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000080);
                    onChanged();
                } else {
                    geometriesBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public @NotNull Builder removeGeometries(int index) {
                if (geometriesBuilder_ == null) {
                    ensureGeometriesIsMutable();
                    geometries_.remove(index);
                    onChanged();
                } else {
                    geometriesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public Geometry.Builder getGeometriesBuilder(
                    int index) {
                return getGeometriesFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public GeometryOrBuilder getGeometriesOrBuilder(
                    int index) {
                if (geometriesBuilder_ == null) {
                    return geometries_.get(index);
                } else {
                    return geometriesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public java.util.List<? extends GeometryOrBuilder>
            getGeometriesOrBuilderList() {
                if (geometriesBuilder_ != null) {
                    return geometriesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(geometries_);
                }
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public Geometry.Builder addGeometriesBuilder() {
                return getGeometriesFieldBuilder().addBuilder(
                        Geometry.getDefaultInstance());
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public Geometry.Builder addGeometriesBuilder(
                    int index) {
                return getGeometriesFieldBuilder().addBuilder(
                        index, Geometry.getDefaultInstance());
            }

            /**
             * <pre>
             * features 为了最大限度压缩数据，这里单独列了geometry properties，而未使用Feature对象
             * </pre>
             *
             * <code>repeated .pojo.Geometry geometries = 8;</code>
             */
            public java.util.List<Geometry.Builder>
            getGeometriesBuilderList() {
                return getGeometriesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    Geometry, Geometry.Builder, GeometryOrBuilder>
            getGeometriesFieldBuilder() {
                if (geometriesBuilder_ == null) {
                    geometriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            Geometry, Geometry.Builder, GeometryOrBuilder>(
                            geometries_,
                            ((bitField0_ & 0x00000080) != 0),
                            getParentForChildren(),
                            isClean());
                    geometries_ = null;
                }
                return geometriesBuilder_;
            }

            private java.util.@Nullable List<Map> propertiess_ =
                    java.util.Collections.emptyList();

            private void ensurePropertiessIsMutable() {
                if (!((bitField0_ & 0x00000100) != 0)) {
                    propertiess_ = new java.util.ArrayList<Map>(propertiess_);
                    bitField0_ |= 0x00000100;
                }
            }

            private com.google.protobuf.@Nullable RepeatedFieldBuilderV3<
                    Map, Map.Builder, MapOrBuilder> propertiessBuilder_;

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public java.util.List<Map> getPropertiessList() {
                if (propertiessBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(propertiess_);
                } else {
                    return propertiessBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public int getPropertiessCount() {
                if (propertiessBuilder_ == null) {
                    return propertiess_.size();
                } else {
                    return propertiessBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public Map getPropertiess(int index) {
                if (propertiessBuilder_ == null) {
                    return propertiess_.get(index);
                } else {
                    return propertiessBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder setPropertiess(
                    int index, @Nullable Map value) {
                if (propertiessBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePropertiessIsMutable();
                    propertiess_.set(index, value);
                    onChanged();
                } else {
                    propertiessBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder setPropertiess(
                    int index, Map.@NotNull Builder builderForValue) {
                if (propertiessBuilder_ == null) {
                    ensurePropertiessIsMutable();
                    propertiess_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    propertiessBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder addPropertiess(@Nullable Map value) {
                if (propertiessBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePropertiessIsMutable();
                    propertiess_.add(value);
                    onChanged();
                } else {
                    propertiessBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder addPropertiess(
                    int index, @Nullable Map value) {
                if (propertiessBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePropertiessIsMutable();
                    propertiess_.add(index, value);
                    onChanged();
                } else {
                    propertiessBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder addPropertiess(
                    Map.@NotNull Builder builderForValue) {
                if (propertiessBuilder_ == null) {
                    ensurePropertiessIsMutable();
                    propertiess_.add(builderForValue.build());
                    onChanged();
                } else {
                    propertiessBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder addPropertiess(
                    int index, Map.@NotNull Builder builderForValue) {
                if (propertiessBuilder_ == null) {
                    ensurePropertiessIsMutable();
                    propertiess_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    propertiessBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder addAllPropertiess(
                    @NotNull Iterable<? extends Map> values) {
                if (propertiessBuilder_ == null) {
                    ensurePropertiessIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, propertiess_);
                    onChanged();
                } else {
                    propertiessBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder clearPropertiess() {
                if (propertiessBuilder_ == null) {
                    propertiess_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000100);
                    onChanged();
                } else {
                    propertiessBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public @NotNull Builder removePropertiess(int index) {
                if (propertiessBuilder_ == null) {
                    ensurePropertiessIsMutable();
                    propertiess_.remove(index);
                    onChanged();
                } else {
                    propertiessBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public Map.Builder getPropertiessBuilder(
                    int index) {
                return getPropertiessFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public MapOrBuilder getPropertiessOrBuilder(
                    int index) {
                if (propertiessBuilder_ == null) {
                    return propertiess_.get(index);
                } else {
                    return propertiessBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public java.util.List<? extends MapOrBuilder>
            getPropertiessOrBuilderList() {
                if (propertiessBuilder_ != null) {
                    return propertiessBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(propertiess_);
                }
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public Map.Builder addPropertiessBuilder() {
                return getPropertiessFieldBuilder().addBuilder(
                        Map.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public Map.Builder addPropertiessBuilder(
                    int index) {
                return getPropertiessFieldBuilder().addBuilder(
                        index, Map.getDefaultInstance());
            }

            /**
             * <code>repeated .pojo.Map propertiess = 9;</code>
             */
            public java.util.List<Map.Builder>
            getPropertiessBuilderList() {
                return getPropertiessFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@NotNull RepeatedFieldBuilderV3<
                    Map, Map.Builder, MapOrBuilder>
            getPropertiessFieldBuilder() {
                if (propertiessBuilder_ == null) {
                    propertiessBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            Map, Map.Builder, MapOrBuilder>(
                            propertiess_,
                            ((bitField0_ & 0x00000100) != 0),
                            getParentForChildren(),
                            isClean());
                    propertiess_ = null;
                }
                return propertiessBuilder_;
            }

            private @Nullable Map headers_;
            private com.google.protobuf.@Nullable SingleFieldBuilderV3<
                    Map, Map.Builder, MapOrBuilder> headersBuilder_;

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             *
             * @return Whether the headers field is set.
             */
            public boolean hasHeaders() {
                return headersBuilder_ != null || headers_ != null;
            }

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             *
             * @return The headers.
             */
            public Map getHeaders() {
                if (headersBuilder_ == null) {
                    return headers_ == null ? Map.getDefaultInstance() : headers_;
                } else {
                    return headersBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             */
            public @NotNull Builder setHeaders(@Nullable Map value) {
                if (headersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    headers_ = value;
                    onChanged();
                } else {
                    headersBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             */
            public @NotNull Builder setHeaders(
                    Map.@NotNull Builder builderForValue) {
                if (headersBuilder_ == null) {
                    headers_ = builderForValue.build();
                    onChanged();
                } else {
                    headersBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             */
            public @NotNull Builder mergeHeaders(@NotNull Map value) {
                if (headersBuilder_ == null) {
                    if (headers_ != null) {
                        headers_ =
                                Map.newBuilder(headers_).mergeFrom(value).buildPartial();
                    } else {
                        headers_ = value;
                    }
                    onChanged();
                } else {
                    headersBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             */
            public @NotNull Builder clearHeaders() {
                if (headersBuilder_ == null) {
                    headers_ = null;
                    onChanged();
                } else {
                    headers_ = null;
                    headersBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             */
            public Map.Builder getHeadersBuilder() {

                onChanged();
                return getHeadersFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             */
            public MapOrBuilder getHeadersOrBuilder() {
                if (headersBuilder_ != null) {
                    return headersBuilder_.getMessageOrBuilder();
                } else {
                    return headers_ == null ?
                            Map.getDefaultInstance() : headers_;
                }
            }

            /**
             * <pre>
             * features头信息，可以在headers中添加一些关于FeatureCollection、features等的描述信息
             * </pre>
             *
             * <code>.pojo.Map headers = 10;</code>
             */
            private com.google.protobuf.@NotNull SingleFieldBuilderV3<
                    Map, Map.Builder, MapOrBuilder>
            getHeadersFieldBuilder() {
                if (headersBuilder_ == null) {
                    headersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Map, Map.Builder, MapOrBuilder>(
                            getHeaders(),
                            getParentForChildren(),
                            isClean());
                    headers_ = null;
                }
                return headersBuilder_;
            }

            @Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:pojo.FeatureCollection)
        }

        // @@protoc_insertion_point(class_scope:pojo.FeatureCollection)
        private static final @NotNull FeatureCollection DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new FeatureCollection();
        }

        public static FeatureCollection getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<FeatureCollection>
                PARSER = new com.google.protobuf.AbstractParser<FeatureCollection>() {
            @Override
            public @NotNull FeatureCollection parsePartialFrom(
                    com.google.protobuf.@NotNull CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new FeatureCollection(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<FeatureCollection> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<FeatureCollection> getParserForType() {
            return PARSER;
        }

        @Override
        public FeatureCollection getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_NullGeometry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_NullGeometry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_Point_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_Point_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_LineString_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_LineString_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_Polygon_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_Polygon_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_MultiPoint_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_MultiPoint_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_MultiLineString_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_MultiLineString_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_MultiPolygon_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_MultiPolygon_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_GeometryCollection_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_GeometryCollection_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_Geometry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_Geometry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_Feature_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_Feature_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_Map_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_Map_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_List_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_List_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_pojo_FeatureCollection_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.@NotNull FieldAccessorTable
            internal_static_pojo_FeatureCollection_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\035definition/ProtoFeature.proto\022\004pojo\"\016\n" +
                        "\014NullGeometry\"(\n\005Point\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002" +
                        " \001(\001\022\t\n\001z\030\003 \001(\001\"0\n\nLineString\022\n\n\002xs\030\001 \003(" +
                        "\001\022\n\n\002ys\030\002 \003(\001\022\n\n\002zs\030\003 \003(\001\"A\n\007Polygon\022\n\n\002" +
                        "xs\030\001 \003(\001\022\n\n\002ys\030\002 \003(\001\022\n\n\002zs\030\003 \003(\001\022\022\n\nsepa" +
                        "rators\030\004 \003(\005\"0\n\nMultiPoint\022\n\n\002xs\030\001 \003(\001\022\n" +
                        "\n\002ys\030\002 \003(\001\022\n\n\002zs\030\003 \003(\001\"I\n\017MultiLineStrin" +
                        "g\022\n\n\002xs\030\001 \003(\001\022\n\n\002ys\030\002 \003(\001\022\n\n\002zs\030\003 \003(\001\022\022\n" +
                        "\nseparators\030\004 \003(\005\"f\n\014MultiPolygon\022\n\n\002xs\030" +
                        "\001 \003(\001\022\n\n\002ys\030\002 \003(\001\022\n\n\002zs\030\003 \003(\001\022\027\n\017coordSe" +
                        "parators\030\004 \003(\005\022\031\n\021polygonSeparators\030\005 \003(" +
                        "\005\"\263\002\n\022GeometryCollection\022\033\n\006points\030\001 \003(\013" +
                        "2\013.pojo.Point\022%\n\013lineStrings\030\002 \003(\0132\020.poj" +
                        "o.LineString\022\037\n\010polygons\030\003 \003(\0132\r.pojo.Po" +
                        "lygon\022%\n\013multiPoints\030\004 \003(\0132\020.pojo.MultiP" +
                        "oint\022/\n\020multiLineStrings\030\005 \003(\0132\025.pojo.Mu" +
                        "ltiLineString\022)\n\rmultiPolygons\030\006 \003(\0132\022.p" +
                        "ojo.MultiPolygon\0225\n\023geometryCollections\030" +
                        "\007 \003(\0132\030.pojo.GeometryCollection\"\314\002\n\010Geom" +
                        "etry\022\032\n\005point\030\001 \001(\0132\013.pojo.Point\022$\n\nline" +
                        "String\030\002 \001(\0132\020.pojo.LineString\022\036\n\007polygo" +
                        "n\030\003 \001(\0132\r.pojo.Polygon\022$\n\nmultiPoint\030\004 \001" +
                        "(\0132\020.pojo.MultiPoint\022.\n\017multiLineString\030" +
                        "\005 \001(\0132\025.pojo.MultiLineString\022(\n\014multiPol" +
                        "ygon\030\006 \001(\0132\022.pojo.MultiPolygon\0224\n\022geomet" +
                        "ryCollection\030\007 \001(\0132\030.pojo.GeometryCollec" +
                        "tion\022(\n\014nullGeometry\030\010 \001(\0132\022.pojo.NullGe" +
                        "ometry\"\t\n\007Feature\"\250\003\n\003Map\022\024\n\014doubleKeyId" +
                        "s\030\001 \003(\005\022\026\n\016doubleValueIds\030\002 \003(\005\022\023\n\013float" +
                        "KeyIds\030\003 \003(\005\022\025\n\rfloatValueIds\030\004 \003(\005\022\024\n\014s" +
                        "int32KeyIds\030\005 \003(\005\022\026\n\016sint32ValueIds\030\006 \003(" +
                        "\005\022\024\n\014sint64KeyIds\030\007 \003(\005\022\026\n\016sint64ValueId" +
                        "s\030\010 \003(\005\022\022\n\nboolKeyIds\030\t \003(\005\022\022\n\nboolValue" +
                        "s\030\n \003(\010\022\024\n\014stringKeyIds\030\013 \003(\005\022\026\n\016stringV" +
                        "alueIds\030\014 \003(\005\022\023\n\013bytesKeyIds\030\r \003(\005\022\025\n\rby" +
                        "tesValueIds\030\016 \003(\005\022\022\n\nlistKeyIds\030\017 \003(\005\022\036\n" +
                        "\nlistValues\030\020 \003(\0132\n.pojo.List\022\024\n\014subMapK" +
                        "eyIds\030\021 \003(\005\022\037\n\014subMapValues\030\022 \003(\0132\t.pojo" +
                        ".Map\"\372\001\n\004List\022\017\n\007indexes\030\001 \003(\005\022\026\n\016double" +
                        "ValueIds\030\002 \003(\005\022\025\n\rfloatValueIds\030\003 \003(\005\022\026\n" +
                        "\016sint32ValueIds\030\004 \003(\005\022\026\n\016sint64ValueIds\030" +
                        "\005 \003(\005\022\022\n\nboolValues\030\006 \003(\010\022\026\n\016stringValue" +
                        "Ids\030\007 \003(\005\022\025\n\rbytesValueIds\030\010 \003(\005\022\034\n\tmapV" +
                        "alues\030\t \003(\0132\t.pojo.Map\022!\n\rsubListValues\030" +
                        "\n \003(\0132\n.pojo.List\"\203\002\n\021FeatureCollection\022" +
                        "\014\n\004keys\030\001 \003(\t\022\024\n\014doubleValues\030\002 \003(\001\022\023\n\013f" +
                        "loatValues\030\003 \003(\002\022\024\n\014sint32Values\030\004 \003(\021\022\024" +
                        "\n\014sint64Values\030\005 \003(\022\022\024\n\014stringValues\030\006 \003" +
                        "(\t\022\023\n\013bytesValues\030\007 \003(\014\022\"\n\ngeometries\030\010 " +
                        "\003(\0132\016.pojo.Geometry\022\036\n\013propertiess\030\t \003(\013" +
                        "2\t.pojo.Map\022\032\n\007headers\030\n \001(\0132\t.pojo.MapB" +
                        "5\n%org.wowtools.giscat.vector.pojo.proto" +
                        "B\014ProtoFeatureb\006proto3"
        };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        });
        internal_static_pojo_NullGeometry_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_pojo_NullGeometry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_NullGeometry_descriptor,
                new String[]{});
        internal_static_pojo_Point_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_pojo_Point_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_Point_descriptor,
                new String[]{"X", "Y", "Z",});
        internal_static_pojo_LineString_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_pojo_LineString_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_LineString_descriptor,
                new String[]{"Xs", "Ys", "Zs",});
        internal_static_pojo_Polygon_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_pojo_Polygon_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_Polygon_descriptor,
                new String[]{"Xs", "Ys", "Zs", "Separators",});
        internal_static_pojo_MultiPoint_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_pojo_MultiPoint_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_MultiPoint_descriptor,
                new String[]{"Xs", "Ys", "Zs",});
        internal_static_pojo_MultiLineString_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_pojo_MultiLineString_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_MultiLineString_descriptor,
                new String[]{"Xs", "Ys", "Zs", "Separators",});
        internal_static_pojo_MultiPolygon_descriptor =
                getDescriptor().getMessageTypes().get(6);
        internal_static_pojo_MultiPolygon_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_MultiPolygon_descriptor,
                new String[]{"Xs", "Ys", "Zs", "CoordSeparators", "PolygonSeparators",});
        internal_static_pojo_GeometryCollection_descriptor =
                getDescriptor().getMessageTypes().get(7);
        internal_static_pojo_GeometryCollection_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_GeometryCollection_descriptor,
                new String[]{"Points", "LineStrings", "Polygons", "MultiPoints", "MultiLineStrings", "MultiPolygons", "GeometryCollections",});
        internal_static_pojo_Geometry_descriptor =
                getDescriptor().getMessageTypes().get(8);
        internal_static_pojo_Geometry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_Geometry_descriptor,
                new String[]{"Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon", "GeometryCollection", "NullGeometry",});
        internal_static_pojo_Feature_descriptor =
                getDescriptor().getMessageTypes().get(9);
        internal_static_pojo_Feature_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_Feature_descriptor,
                new String[]{});
        internal_static_pojo_Map_descriptor =
                getDescriptor().getMessageTypes().get(10);
        internal_static_pojo_Map_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_Map_descriptor,
                new String[]{"DoubleKeyIds", "DoubleValueIds", "FloatKeyIds", "FloatValueIds", "Sint32KeyIds", "Sint32ValueIds", "Sint64KeyIds", "Sint64ValueIds", "BoolKeyIds", "BoolValues", "StringKeyIds", "StringValueIds", "BytesKeyIds", "BytesValueIds", "ListKeyIds", "ListValues", "SubMapKeyIds", "SubMapValues",});
        internal_static_pojo_List_descriptor =
                getDescriptor().getMessageTypes().get(11);
        internal_static_pojo_List_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_List_descriptor,
                new String[]{"Indexes", "DoubleValueIds", "FloatValueIds", "Sint32ValueIds", "Sint64ValueIds", "BoolValues", "StringValueIds", "BytesValueIds", "MapValues", "SubListValues",});
        internal_static_pojo_FeatureCollection_descriptor =
                getDescriptor().getMessageTypes().get(12);
        internal_static_pojo_FeatureCollection_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_pojo_FeatureCollection_descriptor,
                new String[]{"Keys", "DoubleValues", "FloatValues", "Sint32Values", "Sint64Values", "StringValues", "BytesValues", "Geometries", "Propertiess", "Headers",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
